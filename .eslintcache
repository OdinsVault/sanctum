[{"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\index.js":"1","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\App.js":"2","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\Layout.js":"3","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\TopNav.js":"4","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\SideMenu.js":"5","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Users\\AddUser.js":"6","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Users\\ManageUsers.js":"7","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\Categories.js":"8","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\CategoryTable.js":"9","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\AddCategory.js":"10","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Stocks\\ManageStocks.js":"11","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Stocks\\StockTable.js":"12","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\AddNewProduct.js":"13","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Login\\Login.js":"14","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Routes.js":"15","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\DashBoard\\dashboard.js":"16","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\FilterModal.js":"17","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\ManageProducts.js":"18","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\ProductTable.js":"19","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Orders\\NewOrders.js":"20","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Orders\\ViewOrders.js":"21","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\OrderService.js":"22","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\StockService.js":"23","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\ProductService.js":"24","D:\\Simply Web\\src\\index.js":"25","D:\\Simply Web\\src\\App.js":"26","D:\\Simply Web\\src\\Components\\Layout\\Layout.js":"27","D:\\Simply Web\\src\\Components\\Login\\Login.js":"28","D:\\Simply Web\\src\\Components\\Users\\AddUser.js":"29","D:\\Simply Web\\src\\Components\\Users\\ManageUsers.js":"30","D:\\Simply Web\\src\\Routes.js":"31","D:\\Simply Web\\src\\Components\\Layout\\SideMenu.js":"32","D:\\Simply Web\\src\\Components\\Layout\\TopNav.js":"33","D:\\Simply Web\\src\\Components\\DashBoard\\dashboard.js":"34","D:\\Simply Web\\src\\constant.js":"35","D:\\Simply Web\\src\\Services\\UserLoginService.js":"36","D:\\Simply Web\\src\\Services\\APICallService.js":"37","D:\\Simply Web\\src\\Components\\Learn\\courseOverview.js":"38","D:\\Simply Web\\src\\Services\\learningService.js":"39","D:\\Simply Web\\src\\Components\\Practice\\practiceOverview.js":"40","D:\\Simply Web\\src\\Components\\DashBoard\\Dashboard.js":"41","D:\\Simply Web\\src\\Components\\Learn\\CourseOverview.js":"42","D:\\Simply Web\\src\\Components\\Practice\\PracticeOverview.js":"43","D:\\Simply Web\\src\\Components\\Dashboard\\Dashboard.js":"44","D:\\Simply Web\\src\\Components\\Learn\\CourseDetails.js":"45","D:\\Simply Web\\src\\Components\\Practice\\QuestionsList.js":"46","D:\\Simply Web\\src\\Services\\PracticeService.js":"47","D:\\Simply Web\\src\\Components\\Documentation\\GettingStart.js":"48","D:\\Simply Web\\src\\Components\\Documentation\\Documentation.js":"49","D:\\Simply Web\\src\\Components\\Documentation\\DevelopersGuide.js":"50","D:\\Simply Web\\src\\Components\\Visualizer\\CodeVisualizer.js":"51","D:\\Simply Web\\src\\Components\\Practice\\SelectedQuestion.js":"52","D:\\sanctum\\src\\index.js":"53","D:\\sanctum\\src\\App.js":"54","D:\\sanctum\\src\\Components\\Layout\\Layout.js":"55","D:\\sanctum\\src\\Components\\Users\\AddUser.js":"56","D:\\sanctum\\src\\Components\\Users\\ManageUsers.js":"57","D:\\sanctum\\src\\Components\\Login\\Login.js":"58","D:\\sanctum\\src\\Routes.js":"59","D:\\sanctum\\src\\Components\\Layout\\TopNav.js":"60","D:\\sanctum\\src\\Components\\Layout\\SideMenu.js":"61","D:\\sanctum\\src\\Services\\UserLoginService.js":"62","D:\\sanctum\\src\\Components\\Learn\\CourseOverview.js":"63","D:\\sanctum\\src\\Components\\Dashboard\\Dashboard.js":"64","D:\\sanctum\\src\\Components\\Practice\\PracticeOverview.js":"65","D:\\sanctum\\src\\Components\\Learn\\CourseDetails.js":"66","D:\\sanctum\\src\\Components\\Practice\\QuestionsList.js":"67","D:\\sanctum\\src\\Components\\Documentation\\GettingStart.js":"68","D:\\sanctum\\src\\Components\\Visualizer\\CodeVisualizer.js":"69","D:\\sanctum\\src\\Components\\Documentation\\DevelopersGuide.js":"70","D:\\sanctum\\src\\Components\\Practice\\SelectedQuestion.js":"71","D:\\sanctum\\src\\Components\\Documentation\\Documentation.js":"72","D:\\sanctum\\src\\Services\\APICallService.js":"73","D:\\sanctum\\src\\Services\\PracticeService.js":"74","D:\\sanctum\\src\\Services\\learningService.js":"75","D:\\sanctum\\src\\constant.js":"76"},{"size":1127,"mtime":1612512773704,"results":"77","hashOfConfig":"78"},{"size":151,"mtime":1613328364063,"results":"79","hashOfConfig":"78"},{"size":2024,"mtime":1613328573059,"results":"80","hashOfConfig":"78"},{"size":2683,"mtime":1613328699521,"results":"81","hashOfConfig":"78"},{"size":2883,"mtime":1613889128328,"results":"82","hashOfConfig":"78"},{"size":3057,"mtime":1613328887207,"results":"83","hashOfConfig":"78"},{"size":2750,"mtime":1613328913832,"results":"84","hashOfConfig":"78"},{"size":1478,"mtime":1613997908628,"results":"85","hashOfConfig":"78"},{"size":7529,"mtime":1612513293314,"results":"86","hashOfConfig":"78"},{"size":1881,"mtime":1612513258479,"results":"87","hashOfConfig":"78"},{"size":2570,"mtime":1614240749903,"results":"88","hashOfConfig":"78"},{"size":8725,"mtime":1614247303303,"results":"89","hashOfConfig":"78"},{"size":21175,"mtime":1614239487774,"results":"90","hashOfConfig":"78"},{"size":1836,"mtime":1612513154914,"results":"91","hashOfConfig":"78"},{"size":3368,"mtime":1613202213404,"results":"92","hashOfConfig":"78"},{"size":3285,"mtime":1613634115144,"results":"93","hashOfConfig":"78"},{"size":1275,"mtime":1612684675574,"results":"94","hashOfConfig":"78"},{"size":2573,"mtime":1613894330646,"results":"95","hashOfConfig":"78"},{"size":6943,"mtime":1613887818651,"results":"96","hashOfConfig":"78"},{"size":1560,"mtime":1613631987712,"results":"97","hashOfConfig":"78"},{"size":19937,"mtime":1614013081766,"results":"98","hashOfConfig":"78"},{"size":1234,"mtime":1613716967183,"results":"99","hashOfConfig":"78"},{"size":473,"mtime":1614240463800,"results":"100","hashOfConfig":"78"},{"size":1217,"mtime":1614003616566,"results":"101","hashOfConfig":"78"},{"size":1127,"mtime":1612512773704,"results":"102","hashOfConfig":"103"},{"size":151,"mtime":1613328364063,"results":"104","hashOfConfig":"103"},{"size":2081,"mtime":1614849347085,"results":"105","hashOfConfig":"103"},{"size":13127,"mtime":1616981113856,"results":"106","hashOfConfig":"103"},{"size":3057,"mtime":1613328887207,"results":"107","hashOfConfig":"103"},{"size":2750,"mtime":1613328913832,"results":"108","hashOfConfig":"103"},{"size":4035,"mtime":1616980648391,"results":"109","hashOfConfig":"103"},{"size":3340,"mtime":1616472475208,"results":"110","hashOfConfig":"103"},{"size":4141,"mtime":1616128735383,"results":"111","hashOfConfig":"103"},{"size":5074,"mtime":1614850726434,"results":"112","hashOfConfig":"103"},{"size":9281,"mtime":1616813653454,"results":"113","hashOfConfig":"103"},{"size":807,"mtime":1616390148591,"results":"114","hashOfConfig":"103"},{"size":2614,"mtime":1616981282071,"results":"115","hashOfConfig":"103"},{"size":4480,"mtime":1614881212574,"results":"116","hashOfConfig":"103"},{"size":715,"mtime":1616812530391,"results":"117","hashOfConfig":"103"},{"size":4107,"mtime":1614849653464,"results":"118","hashOfConfig":"103"},{"size":5074,"mtime":1614850726434,"results":"119","hashOfConfig":"103"},{"size":4542,"mtime":1616554499741,"results":"120","hashOfConfig":"103"},{"size":5059,"mtime":1616987325688,"results":"121","hashOfConfig":"103"},{"size":5212,"mtime":1616126663548,"results":"122","hashOfConfig":"103"},{"size":2867,"mtime":1616814401049,"results":"123","hashOfConfig":"103"},{"size":5105,"mtime":1616987368846,"results":"124","hashOfConfig":"103"},{"size":895,"mtime":1616985245233,"results":"125","hashOfConfig":"103"},{"size":7783,"mtime":1616471313213,"results":"126","hashOfConfig":"103"},{"size":8209,"mtime":1616471668170,"results":"127","hashOfConfig":"103"},{"size":8210,"mtime":1616471766026,"results":"128","hashOfConfig":"103"},{"size":685,"mtime":1616472243692,"results":"129","hashOfConfig":"103"},{"size":11109,"mtime":1616987219454,"results":"130","hashOfConfig":"103"},{"size":1127,"mtime":1612512773704,"results":"131","hashOfConfig":"132"},{"size":151,"mtime":1613328364063,"results":"133","hashOfConfig":"132"},{"size":2081,"mtime":1614849347085,"results":"134","hashOfConfig":"132"},{"size":3057,"mtime":1613328887207,"results":"135","hashOfConfig":"132"},{"size":2750,"mtime":1613328913832,"results":"136","hashOfConfig":"132"},{"size":13127,"mtime":1616981113856,"results":"137","hashOfConfig":"132"},{"size":4035,"mtime":1616980648391,"results":"138","hashOfConfig":"132"},{"size":4151,"mtime":1616988263926,"results":"139","hashOfConfig":"132"},{"size":3340,"mtime":1616472475208,"results":"140","hashOfConfig":"132"},{"size":807,"mtime":1616390148591,"results":"141","hashOfConfig":"132"},{"size":4542,"mtime":1616554499741,"results":"142","hashOfConfig":"132"},{"size":5212,"mtime":1616126663548,"results":"143","hashOfConfig":"132"},{"size":5059,"mtime":1616987325688,"results":"144","hashOfConfig":"132"},{"size":2867,"mtime":1616814401049,"results":"145","hashOfConfig":"132"},{"size":5105,"mtime":1616987368846,"results":"146","hashOfConfig":"132"},{"size":7783,"mtime":1616471313213,"results":"147","hashOfConfig":"132"},{"size":685,"mtime":1616472243692,"results":"148","hashOfConfig":"132"},{"size":8210,"mtime":1616471766026,"results":"149","hashOfConfig":"132"},{"size":11275,"mtime":1616990242697,"results":"150","hashOfConfig":"132"},{"size":8209,"mtime":1616471668170,"results":"151","hashOfConfig":"132"},{"size":2614,"mtime":1616981282071,"results":"152","hashOfConfig":"132"},{"size":895,"mtime":1616985245233,"results":"153","hashOfConfig":"132"},{"size":715,"mtime":1616812530391,"results":"154","hashOfConfig":"132"},{"size":9281,"mtime":1616813653454,"results":"155","hashOfConfig":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},"pgv3w1",{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"159"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"159"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"159"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"159"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"159"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"159"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"159"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"159"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"159"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"159"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"159"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"159"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"159"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"159"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"159"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"159"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"224"},"lagmjo",{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"224"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"224"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"224"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"224"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"224"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"224"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"224"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"249"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"224"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"249"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"224"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"224"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"224"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"224"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"224"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"224"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"224"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"224"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"224"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"224"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ku6jnt",{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\index.js",["348","349"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\n// import './index.css';\nimport App from './App';\nimport SiteLayout from './Components/Layout/Layout';\n// import reportWebVitals from './reportWebVitals';\n\nimport Login from './Components/Login/Login'; \nimport AddUser from './Components/Users/AddUser';\nimport ManageUser from './Components/Users/ManageUsers';\n\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/login\" component={Login} />\n      <Route path='/layout' component={SiteLayout}/>\n      <Route path='/addUser' component={AddUser}/>\n      <Route path= '/manageUser' component={ManageUser}/>\n      {/* <Route path=\"/contact\" component={Contact} /> */}\n    </div>\n  </Router>\n)\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["350","351"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\App.js",[],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\Layout.js",["352"],"import React from 'react';\r\nimport { Layout, Breadcrumb, Card} from 'antd';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport TopNav from '../Layout/TopNav';\r\nimport SideMenu from '../Layout/SideMenu';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\n\r\nimport './Layout.css';\r\n\r\nconst { Content,Footer,Sider } = Layout;\r\n\r\n\r\nclass SiteLayout extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  collapsed: false\r\n\t\t};\r\n\t  }\r\n\r\n\t  toggle = () => {\r\n\t\tthis.setState({\r\n\t\t  collapsed: !this.state.collapsed,\r\n\t\t});\r\n\t  };  \r\n\r\n\trender(){\r\n\r\n\t\tconst { location } = this.props;\r\n\t\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\t\tconst extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n\t\t  const url = `${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\t  return (\r\n\t\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t  <Link to={url}>{url}</Link>\r\n\t\t\t</Breadcrumb.Item>\r\n\t\t  );\r\n\t\t});\r\n\t\tconst breadcrumbItems = [\r\n\t\t  <Breadcrumb.Item key=\"home\">\r\n\t\t\t<Link to=\"/\"><HomeOutlined /></Link>\r\n\t\t  </Breadcrumb.Item>,\r\n\t\t].concat(extraBreadcrumbItems);\r\n\r\n\t\treturn(\r\n\t\t<Layout>\r\n\t\t\t<Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n            <div className=\"logo\" >\r\n              <h4 style={{ color: 'white', fontWeight: 'bold' }}>\r\n                Sigen.LK - Admin \r\n              </h4>\r\n            </div>\r\n            <SideMenu />\r\n          </Sider>\r\n\t\t  <Layout  className=\"site-layout\" >\r\n\t\t  <TopNav collapsed={this.state.collapsed} onCollapse={this.toggle} />\r\n\t\t\t<Content style={{ margin: '0 16px' }}\r\n\t\t\t>\r\n\t\t\t\t<Breadcrumb style={{ margin: '16px 0' }}>\r\n                {breadcrumbItems}\r\n              </Breadcrumb>\r\n\t\t\t  <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</Content> \r\n\t\t\t<Footer  style={{ textAlign: 'center' }}>Sigen.Lk 2021</Footer>\r\n\t\t</Layout>\r\n\t  </Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(SiteLayout)","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\TopNav.js",[],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\SideMenu.js",["353","354","355"],"import { Layout, Menu } from 'antd';\r\n// import Sider from 'antd/lib/layout/Sider';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined ,UserOutlined, LaptopOutlined, NotificationOutlined,ShopOutlined,ShoppingCartOutlined,GiftOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nclass SideMenu extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcollapsed: false,\r\n\t\t  };\r\n\t\t\r\n\t  }\r\n\t  onCollapse = collapsed => {\r\n\t\tconsole.log(collapsed);\r\n\t\tthis.setState({ collapsed });\r\n\t  };\r\n\r\n\t  render(){\r\n\t\tconst { collapsed } = this.state;\r\n\t\t  return(\r\n        <Menu\r\n        mode=\"inline\"\r\n        theme=\"dark\"\r\n          // defaultSelectedKeys={['1']}\r\n          // defaultOpenKeys={['sub1']}\r\n          // style={{ height: '100%', borderRight: 0 }}\r\n        >\r\n\t\t\t<Menu.Item key=\"sub0\" icon={<HomeOutlined />} >\r\n        <Link to=\"/dashboard\">Dashboard</Link>\r\n      </Menu.Item>\r\n      <SubMenu key='sub5' icon={<GiftOutlined />} title=\"Products\">\r\n\t\t\t  <Menu.Item key='4'>\r\n        <Link to='/manageProducts' >View and Manage</Link>\r\n        </Menu.Item>\r\n\t\t\t  <Menu.Item>\r\n        <Link to='/addProduct' newProduct={true} >Add New</Link>\r\n        </Menu.Item>\r\n\t\t  </SubMenu>\r\n          <SubMenu key=\"sub1\" icon={<ShopOutlined /> } title=\"Stocks\">\r\n            <Menu.Item key=\"1\">\r\n            <Link to='/stocks'> View</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n            <Link>Manage</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Site settings\">\r\n\t\t\t<Menu.Item key=\"5\">\r\n      <Link to='categories'>Categories</Link>\r\n      </Menu.Item>\r\n\t\t\t{/* <Menu.Item key=\"6\">Filters</Menu.Item> */}\r\n            {/* <Menu.Item key=\"7\">Contact</Menu.Item> */}\r\n            {/* <Menu.Item key=\"8\">option8</Menu.Item> */}\r\n          </SubMenu>\r\n          <SubMenu key=\"sub3\" icon={<ShoppingCartOutlined />} title=\"Orders\">\r\n            <Menu.Item key=\"9\">\r\n            <Link to='/viewOrders'>View</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"10\">\r\n            <Link>Manage</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\t\t  <SubMenu key='sub4' icon={<UserOutlined/>} title=\"Users\">\r\n\t\t\t  <Menu.Item>\r\n          <Link to='/addUser'>Add</Link>\r\n        </Menu.Item>\r\n\t\t\t  <Menu.Item>\r\n          <Link to='/manageUser'>Manage</Link>\r\n        </Menu.Item>\r\n\t\t  </SubMenu>\r\n        </Menu>\r\n\r\n\t\t  )\r\n\t  }\r\n\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n                // <PrivateRoute path='/categories' component={Categories}/>\r\n                // <PrivateRoute path='/addUser' component={AddUser}/>\r\n                // <PrivateRoute path= '/manageUser' component={ManageUser}/>\r\n                // <PrivateRoute path= '/stocks' component={ManageStocks}/>\r\n\r\n\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Users\\AddUser.js",["356","357","358","359","360"],"import React from \"react\";\r\nimport { Form, Input, InputNumber, Button, Card, PageHeader,DatePicker, Select } from 'antd';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not a valid email!',\r\n    number: '${label} is not a valid number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\nclass AddUser extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t  }\r\n\r\n\t  onFinish = (e) =>{\r\n\t\t  console.log(e)\r\n\t  }\r\n\r\n\t  render() {\r\n\t\t  return (\r\n\t\t\t  <div>\r\n<Card>\r\n<PageHeader\r\n    className=\"site-page-header\"\r\n    title=\"Add New User\"\r\n    // subTitle=\"This is a subtitle\"\r\n  />\r\n\t\t\t\t \r\n\t\t\t\t   <Form {...layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name={['user', 'name']}\r\n        label=\"Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={['user', 'email']}\r\n        label=\"Email\"\r\n        rules={[\r\n          {\r\n\t\t\ttype: 'email',\r\n\t\t\trequired:true\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\t  <Form.Item\r\n\t\tname={['user','DOA']}\r\n\t\tlabel = \"Date of Assignment\"\r\n\t\trules = {[\r\n\t\t\t{\r\n\t\t\t\ttype:'date',\r\n\t\t\t\trequired:true\r\n\t\t\t}\r\n\t\t]}>\r\n\t\t\t<DatePicker />\r\n\t  </Form.Item>\r\n\t  <Form.Item name={['user', 'position']} label=\"Position\"\r\n\t  rules={[\r\n\t\t  {required:true}\r\n\t  ]}>\r\n          <Select allowClear>\r\n            <Select.Option value=\"admin\">Admin</Select.Option>\r\n\t\t\t<Select.Option value=\"sales\">Sales Rep</Select.Option>\r\n\t\t\t<Select.Option value=\"emp\">Emp</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n      <Form.Item\r\n        name={['user', 'age']}\r\n        label=\"Age\"\r\n        rules={[\r\n          {\r\n            type: 'number',\r\n            min: 16,\r\n            max: 99,\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n      {/* <Form.Item name={['user', 'position']} label=\"Position\">\r\n        <Input />\r\n      </Form.Item> */}\r\n\t  <Form.Item\r\n        name=\"gender\"\r\n        label=\"Gender\"\r\n        rules={[\r\n          {\r\n            required: false,\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder=\"Select gender\"\r\n          allowClear\r\n        >\r\n          <Option value=\"male\">male</Option>\r\n          <Option value=\"female\">female</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={['user', 'Other']} label=\"Other info\">\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item  wrapperCol={{ ...layout.wrapperCol, offset: 18 }}>\r\n        <Button  type=\"primary\" htmlType=\"submit\">\r\n          Add User\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n\t\t\t  </div>\r\n\t\t  )\r\n\t  }\r\n}\r\nexport default withRouter(AddUser)","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Users\\ManageUsers.js",["361","362"],"import { Button, Card, Col, PageHeader, Space, Table } from 'antd';\r\nimport { MinusCircleOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst columns = [\r\n\t{\r\n\t  title: 'Name',\r\n\t  dataIndex: 'name',\r\n\t  render: (text) => <a>{text}</a>,\r\n\t},\r\n\t{\r\n\t  title: 'Username',\r\n\t  dataIndex: 'username',\r\n\t},\r\n\t{\r\n\t  title: 'Email',\r\n\t  dataIndex: 'email',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Role',\r\n\t\tdataIndex: 'role',\r\n\t  },\r\n\t  {\r\n\t\ttitle: 'Remove',\r\n\t\trender: (text, record) => (\r\n\t\t\t<Space size=\"middle\">\r\n\t\t\t  <Button type=\"primary\" icon={<MinusCircleOutlined />} danger/>\r\n\t\t\t</Space>\r\n\t\t  ),\r\n\t  },\r\n\t//   {\r\n\t// \ttitle: 'Age',\r\n\t// \tdataIndex: 'age',\r\n\t//   },\r\n  ];\r\n\r\nclass ManageUser extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectedRowKeys: [], // Check here to configure the default column\r\n\t\t\tloading: false,\r\n\t\t  };\r\n\t  }\r\n\t  onSelectChange = selectedRowKeys => {\r\n\t\tconsole.log('selectedRowKeys changed: ', selectedRowKeys);\r\n\t\tthis.setState({ selectedRowKeys });\r\n\t  };\r\n\r\n\t  render() {\r\n\t\tconst { loading, selectedRowKeys } = this.state;\r\n\t\tconst rowSelection = {\r\n\t\t  selectedRowKeys,\r\n\t\t  onChange: this.onSelectChange,\r\n\t\t};\r\n\t\t  return (\r\n\t\t\t  <div>\r\n\t\t\t\t  <Card>\r\n\t\t\t\t  <PageHeader\r\n    className=\"site-page-header\"\r\n    title=\"Manage Users\"\r\n    // subTitle=\"This is a subtitle\"\r\n  />\r\n\t\t\t\t  <Table pagination={{defaultPageSize:5}}\r\n        rowSelection={rowSelection} columns={columns} dataSource={data}\r\n      /> \r\n\t  <div>\r\n\t  <Col offset={20}>\r\n\t  <Button type=\"primary\" danger disabled={true}>Remove Selected</Button></Col></div>\r\n\t  </Card>\r\n\t\t\t  </div>\r\n\t\t  )\r\n\t  }\r\n}\r\nexport default withRouter(ManageUser)\r\n\r\n\r\n  const data = [\r\n\t{\r\n\t  key: '1',\r\n\t  name: 'John Brown',\r\n\t  username: 'Brown.J1',\r\n\t  email: 'brownJ1@sigen.com',\r\n\t  role:'admin'\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\tname: 'John Brown',\r\n\t\tusername: 'Brown.J2',\r\n\t\temail: 'brownJ2@sigen.com',\r\n\t\trole:'admin'\r\n\t  },\r\n\t  {\r\n\t\tkey: '3',\r\n\t\tname: 'John Brown',\r\n\t\tusername: 'Brown.J3',\r\n\t\temail: 'brownJ3@sigen.com',\r\n\t\trole:'admin'\r\n\t  },\r\n\t  {\r\n\t\tkey: '4',\r\n\t\tname: 'John Brown',\r\n\t\tusername: 'Brown.J4',\r\n\t\temail: 'brownJ4@sigen.com',\r\n\t\trole:'admin'\r\n\t  },\r\n\t  {\r\n\t\tkey: '5',\r\n\t\tname: 'John Brown',\r\n\t\tusername: 'Brown.J5',\r\n\t\temail: 'brownJ5@sigen.com',\r\n\t\trole:'admin'\r\n\t  },\r\n\t  {\r\n\t\t  key: '6',\r\n\t\t  name: 'John Brown',\r\n\t\t  username: 'Brown.J6',\r\n\t\t  email: 'brownJ6@sigen.com',\r\n\t\t  role:'admin'\r\n\t\t},\r\n\t\t{\r\n\t\t  key: '7',\r\n\t\t  name: 'John Brown',\r\n\t\t  username: 'Brown.J7',\r\n\t\t  email: 'brownJ7@sigen.com',\r\n\t\t  role:'admin'\r\n\t\t},\r\n\t\t{\r\n\t\t  key: '8',\r\n\t\t  name: 'John Brown',\r\n\t\t  username: 'Brown.J8',\r\n\t\t  email: 'brownJ8@sigen.com',\r\n\t\t  role:'admin'\r\n\t\t},\r\n  ];","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\Categories.js",["363","364"],"import { Button, Col, PageHeader, Select, Form, Card} from 'antd';\r\nimport { MinusCircleOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport CategoryTable from './CategoryTable';\r\nimport AddCategory from './AddCategory';\r\nimport {Categories,ProductTypes} from '../../conastant';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass Category extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectedRowKeys: [], // Check here to configure the default column\r\n\t\t\tloading: false,\r\n\t\t  };\r\n\t  }\r\n\r\n\r\n\t  render() {\r\n\t\t  return (\r\n\t\t\t  <div>\r\n\t\t\t\t  <Card>\r\n\t\t\t\t  <PageHeader\r\n    className=\"site-page-header\"\r\n    title=\"Categories\"\r\n  />\r\n\t  <div>\r\n\t\t  <Col offset={1} span={12}> \r\n\t  <Form.Item label=\"Select Product Type\">\r\n          <Select allowClear placeholder={\"Select a type\"}>\r\n\t\t\t  {ProductTypes.map(product => {\r\n\t\t\t\t  return(\r\n\t\t\t\t\t  <Select.Option value={product}>{product}</Select.Option>\r\n\t\t\t\t  )\r\n\t\t\t  })}\r\n          </Select>\r\n        </Form.Item>\r\n\t\t</Col>\r\n\t  </div>\r\n\t  <div>\r\n\t  <Card type=\"inner\" title=\"Filters\">\r\n\t  \r\n\t  <CategoryTable Tabledata={Categories[1].categories}/>\r\n\t  </Card></div>\r\n\t  <div>\r\n\t  <Card type=\"inner\" title=\"Add new category\">\r\n\t\t  <AddCategory/>\r\n\t\t  </Card> \r\n\t  {/* <Col offset={20}>\r\n\t  <Button type=\"primary\" danger disabled={true}>Remove Selected</Button>\r\n\t  </Col> */}\r\n\t  </div>\r\n\t  </Card>\r\n\t\t\t  </div>\r\n\t\t  )\r\n\t  }\r\n}\r\nexport default withRouter(Category);\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\CategoryTable.js",["365","366","367","368","369"],"import React, { useState } from 'react';\r\nimport { Table, Input, InputNumber, Form, notification, Modal, Tag, Button, Space } from 'antd';\r\n// import { UpdateExpirationTime, startQueue, stopQueue, fixQueue } from '../../Services/OracleAQService'\r\nimport { ExclamationCircleOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber min={1} type=\"number\" /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: false,\r\n                            message: `Please Input Time in Seconds!`,\r\n                        },\r\n                        {\r\n                            type: 'number',\r\n                            min: 1,\r\n                            message: 'Value Cannot be Zero or Less'\r\n                        }\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                    children\r\n                )}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst CategoryTable = ({ Tabledata }) => {\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState(Tabledata);\r\n    const [editingKey, setEditingKey] = useState('');\r\n\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        form.setFieldsValue({\r\n            expirationTime: '',\r\n            ...record\r\n        });\r\n\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const cancel = () => {\r\n\r\n        setEditingKey('');\r\n    };\r\n\r\n    const UpdateChangeValidation = async (key) => {\r\n        const row = await form.validateFields();\r\n        const newData = [...data];\r\n        const index = newData.findIndex((item) => key === item.key);\r\n\r\n        if (index > -1) {\r\n            showConfirm(key);\r\n        }\r\n    }\r\n\r\n    // const startOracleQueue = async (record) => {\r\n    //     try {\r\n    //         let startedQueue = await startQueue(record.queueName)\r\n    //         if (startedQueue != null) {\r\n    //             notification.success({ message: 'Success!', description: `${startedQueue} queue started` })\r\n    //         }\r\n    //     }\r\n    //     catch (error) {\r\n    //         notification.error({ message: 'Error!', description: (error.cause ? error.cause : \"\") })\r\n    //     }\r\n    // }\r\n\r\n    const save = async (key) => {\r\n        try {\r\n            const row = await form.validateFields();\r\n\r\n            const newData = [...data];\r\n            const index = newData.findIndex((item) => key === item.key);\r\n\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n\r\n                try {\r\n                   \r\n                    notification.success({ message: 'Success!', description: 'OracleAQ Expiration Time Updated Successfully' })\r\n\r\n                }\r\n                catch (error) {\r\n                    notification.error({ message: 'Error!', description: (error.cause ? error.cause : \"\") });\r\n                }\r\n\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n            }\r\n        } catch (error) {\r\n            notification.error({ message: 'Error!', description: (error.cause ? error.cause : \"\") });\r\n        }\r\n    };\r\n\r\n    const showConfirm = (key) => {\r\n        confirm({\r\n            title: 'Update Expiration Time',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Are you sure you want to update the Expiration time?',\r\n            okText: \"Yes\",\r\n            cancelText: \"No\",\r\n            onOk() {\r\n                save(key)\r\n            },\r\n            onCancel() {\r\n                // Do nothing\r\n            },\r\n        });\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Categories',\r\n            dataIndex: 'category',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Filters',\r\n            dataIndex: 'filters',\r\n            editable: true,\r\n            render: filters => (\r\n              <>\r\n                {filters.map(filter => {\r\n                  \r\n                  return (\r\n                    <Tag >\r\n                      {filter}\r\n                    </Tag>\r\n                  );\r\n                })}\r\n              </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Edit',\r\n            dataIndex: 'operation',\r\n            // colSpan: 0,\r\n            // width: '75px',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <a\r\n\r\n                            onClick={() => UpdateChangeValidation(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Save\r\n            </a>\r\n\r\n                        <a onClick={() => cancel()}>Cancel</a>\r\n\r\n                    </span>\r\n                ) : (\r\n                        <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                            <EditOutlined />\r\n                        </a>\r\n                    );\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            width: '15%',\r\n            render: (_, record) => {\r\n                    return (\r\n                        <Space>\r\n                            {/* <Button onClick={() => startOracleQueue(record)} > start</Button> */}\r\n                            {/* <Button danger onClick={() => fixOracleQueue(record)} >fix</Button> */}\r\n                            <Button>Delete</Button>\r\n                        </Space>\r\n                    )\r\n            }\r\n        }\r\n    ];\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: col.dataIndex === 'expirationTime' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n    return (\r\n        <div>\r\n            {/* <Header title=\"Oracle Queue Status\" /> */}\r\n            <Form form={form} component={false}>\r\n                <div className=\"view-int-box\">\r\n                    <Table\r\n                        components={{\r\n                            body: {\r\n                                cell: EditableCell,\r\n                            },\r\n                        }}\r\n                        bordered\r\n                        dataSource={data}\r\n                        columns={mergedColumns}\r\n                        rowClassName=\"editable-row\"\r\n                        pagination={{\r\n                            onChange: cancel,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst { confirm } = Modal;\r\n\r\n\r\nexport default withRouter(CategoryTable);","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\AddCategory.js",["370"],"import { Form, Input, Button, Space, Select, Col } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst AddCategory = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values of form:', values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\r\n      <Col span={12}> \r\n    <Form.Item name=\"new category\" label=\"Add New Category\" rules={[{ required: true, message: 'Missing Category' }]}>\r\n        <Input  allowClear placeholder=\"Type New Category\"/>\r\n      </Form.Item>\r\n      <Form.List name=\"filters\" >\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n            {fields.map((field,index) => (\r\n              <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                <Form.Item\r\n                label = {\"New Filter\"}\r\n                  {...field}\r\n                  name={[field.name, 'filter']}\r\n                  fieldKey={[field.fieldKey, 'filter']}\r\n                  rules={[{ required: true, message: 'Add filter' }]}\r\n                >\r\n                  <Input allowClear placeholder=\"Add filter here\" />\r\n                </Form.Item>\r\n                <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n              </Space>\r\n            ))}\r\n            <Form.Item>\r\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                Add Filters\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n      <Form.Item>\r\n        <Col offset={20}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Add\r\n        </Button>\r\n        </Col>\r\n      </Form.Item>\r\n      </Col>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddCategory);","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Stocks\\ManageStocks.js",["371","372"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Stocks\\StockTable.js",["373","374","375","376","377","378","379","380"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\AddNewProduct.js",["381","382","383","384","385","386","387","388","389"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Login\\Login.js",["390"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox, Col, Card, Row } from 'antd';\r\nimport { withRouter } from 'react-router';\r\n// import './index.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n  }\r\n\r\n onFinish(e) {\r\n   console.log(\"logged in\");\r\n } \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"LoginForm\" style={{paddingTop:'10%'}}>\r\n        <Row  align=\"middle\">\r\n        <Col span={12} offset={6}>\r\n          <Card>\r\n           <Form\r\n      // {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={this.onFinish}\r\n      // onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n    </Col>\r\n    </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login)","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Routes.js",["391","392"],"import React, { useEffect } from 'react';\r\nimport { Switch, Route, Redirect, BrowserRouter, useHistory } from 'react-router-dom';\r\nimport App from './App';\r\nimport DashBoard from './Components/DashBoard/dashboard';\r\nimport Categories from './Components/Filters/Categories';\r\nimport SiteLayout from './Components/Layout/Layout';\r\nimport Login from './Components/Login/Login';\r\nimport ViewOrders from './Components/Orders/ViewOrders';\r\nimport AddNewProduct from './Components/Products/AddNewProduct';\r\nimport ManageProducts from './Components/Products/ManageProducts';\r\nimport ManageStocks from './Components/Stocks/ManageStocks';\r\nimport AddUser from './Components/Users/AddUser';\r\nimport ManageUser from './Components/Users/ManageUsers';\r\n\r\n\r\n// function TryPoke() {\r\n//     // Do a POKE and update the ticket\r\n//     PokeSession().then(session => {\r\n//         localStorage.setItem(\"token\", session.token);\r\n//         localStorage.setItem(\"loggedInData\", session.validTo);\r\n//     }).catch(err => {\r\n//         localStorage.removeItem('token');\r\n//         localStorage.removeItem('loggedInData');\r\n//     });\r\n// }\r\n\r\n// function CheckLogOnStatus() {\r\n//     let token = localStorage.getItem('token');\r\n//     let validTime = localStorage.getItem('loggedInData');\r\n\r\n//     if (token && validTime) {\r\n//         TryPoke();\r\n//         return true;\r\n//     } else {\r\n//         return false;\r\n//     }\r\n// }\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    // const history = useHistory();\r\n\r\n    // useEffect(() => {\r\n    //     const timer = setTimeout(() => {\r\n    //         history.push('/login', { directLogin: false });\r\n    //     }, (1000 * 60 * 14));\r\n    //     return () => clearTimeout(timer);\r\n    // }, []);\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            (true)\r\n                ? (<SiteLayout><Component {...props} /></SiteLayout>)\r\n                : (<Redirect to={{\r\n                    pathname: '/login',\r\n                    state: { from: props.location }\r\n                }} />)\r\n        )} />);\r\n}\r\n\r\nconst Routes = () => {\r\n\r\n    // console.log('Application running in ' + process.env.NODE_ENV + ' mode');\r\n    let basePath = \"/sigen\";\r\n\r\n    // if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    //     basePath = \"/\"\r\n    // } else {\r\n    //     basePath = \"/DIPS-ANC/ANCDMClient\"\r\n    // }\r\n\r\n    return (\r\n        <BrowserRouter basename={basePath} >\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <PrivateRoute path='/dashboard' component={DashBoard}/>\r\n                <PrivateRoute path='/categories' component={Categories}/>\r\n                <PrivateRoute path='/addUser' component={AddUser}/>\r\n                <PrivateRoute path= '/manageUser' component={ManageUser}/>\r\n                <PrivateRoute path= '/stocks' component={ManageStocks}/>\r\n                <PrivateRoute path= '/addProduct' component={AddNewProduct}/>\r\n                <PrivateRoute path= '/manageProducts' component={ManageProducts}/>\r\n                <PrivateRoute path= '/viewOrders' component={ViewOrders}/>\r\n                <PrivateRoute exact path=\"/\" component={DashBoard} />\r\n                <Route exact path=\"/\" component={App} />\r\n      \r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\DashBoard\\dashboard.js",["393","394","395","396","397","398","399","400","401"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Select, Form, Card, Space, Row, Divider, List} from 'antd';\r\nimport {MinusCircleOutlined} from '@ant-design/icons';\r\nimport {newOrders} from '../../conastant';\r\nimport {withRouter} from 'react-router';\r\nimport NewOrders from '../Orders/NewOrders';\r\n\r\nimport {getLowStockList,getOutOfStockList} from '../../Services/StockService'\r\n\r\nconst data = ['product1', 'product2', 'product3', 'product4', 'product5']\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lowStockList:\"\",\r\n            outOfStockList:\"\"\r\n        };\r\n    }\r\n\r\n    getLowStockProducts = async() => {\r\n        var lowStock = await getLowStockList()\r\n        this.setState({\r\n            lowStockList:lowStock\r\n        })\r\n    }\r\n\r\n    getOutOfStockProducts = async() => {\r\n        var outStock = await getLowStockList()\r\n        this.setState({\r\n            outOfStockList:outStock\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n            this.getLowStockProducts();\r\n            this.getOutOfStockProducts();\r\n\t}\r\n\r\n\trender() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"Dashboard\"/>\r\n                    <Card title='New Orders'>\r\n                        <NewOrders orderList={newOrders} viewPage={'dashboard'}/>\r\n                    </Card>\r\n                    <Divider/>\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <Card title='Out of stock' extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.outOfStockList}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.productName}\r\n                                              />\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Card title='Low on stock' extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.lowStockList}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.productName}\r\n                                              />\r\n                                              <div>{item.availableStocks}</div>\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DashBoard);\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\FilterModal.js",[],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\ManageProducts.js",["402","403","404","405"],"import {Button, Col, PageHeader, Select, Form, Card} from 'antd';\r\nimport React from 'react';\r\nimport {withRouter} from 'react-router';\r\nimport {Categories, ProductTypes} from '../../conastant';\r\nimport ManageProductTable from './ProductTable';\r\n\r\nimport {getProductsByType} from '../../Services/ProductService'\r\n\r\nclass ManageStock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedRowKeys: [], // Check here to configure the default column\r\n            loading: false,\r\n            productList:[]\r\n        };\r\n    }\r\n\r\n    onSelectProductType = async(type) => {\r\n        var productList = await getProductsByType(type);\r\n        var filterList = [];\r\n        this.setState({\r\n            productList:productList\r\n        })\r\n        for(var i=0;i<productList.length;i++){\r\n            productList[i].filters.map((item)=>{\r\n                item.selectedFilters.map((c)=>{\r\n                    filterList.push(c)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n                        title=\"View and Manage Products\"\r\n                        // subTitle=\"This is a subtitle\"\r\n                    />\r\n                    <div>\r\n                        <Col offset={1} span={12}>\r\n                            <Form.Item label=\"Select Product Type\">\r\n                                <Select allowClear placeholder={\"Select a type\"} onSelect={this.onSelectProductType}>\r\n                                    {/*<Select.Option value={\"All\"}>All</Select.Option>*/}\r\n                                    {ProductTypes.map(product => {\r\n                                        return (\r\n                                            <Select.Option value={product}>{product}</Select.Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </div>\r\n                    <div>\r\n                        <Card type=\"inner\" title=\"Products\">\r\n                            <ManageProductTable productList={this.state.productList}/>\r\n                        </Card></div>\r\n                    <div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ManageStock)\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\ProductTable.js",["406","407","408","409","410","411","412","413","414","415"],"import React from 'react';\r\nimport {Table, Input, Button, Space, InputNumber, Form, notification, Modal, Tag, Col, Badge, List} from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nimport {Stocks} from '../../conastant';\r\nimport {withRouter} from 'react-router';\r\n\r\n\r\nclass ManageProductTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchText: '',\r\n            searchedColumn: '',\r\n            isSelectedRows: false,\r\n            columns: [\r\n                {\r\n                    title: 'Product No',\r\n                    dataIndex: 'productId',\r\n                    key:'productId',\r\n                    editable: false,\r\n                },\r\n                {\r\n                    title: 'Product Name',\r\n                    dataIndex: 'productName',\r\n                    key: 'productName',\r\n                    editable: false,\r\n                    ...this.getColumnSearchProps('productName'),\r\n                },\r\n                {\r\n                    title: 'Product Type',\r\n                    dataIndex: 'productType',\r\n                    key: 'productType',\r\n                    editable: false,\r\n                },\r\n                {\r\n                    title: 'Filters',\r\n                    dataIndex: 'filters',\r\n                    key: 'filters',\r\n                    editable: false,\r\n                    render: filters=>(\r\n                        <>\r\n                            {\r\n                                filters.map(item=>{\r\n                                return (\r\n                                    <List\r\n                                        grid={{ gutter: 16, column: 3}}\r\n                                        dataSource={item.selectedFilters}\r\n                                        renderItem={item => (\r\n                                            <List.Item>\r\n                                                <Tag color={'geekblue'}>{item}</Tag>\r\n                                            </List.Item>\r\n                                        )}\r\n                                    />\r\n                                );\r\n                        })}\r\n                        </>\r\n                    )\r\n                },\r\n                {\r\n                    title: 'Description',\r\n                    dataIndex: 'description',\r\n                    key: 'description',\r\n                    editable: false,\r\n                },\r\n                {\r\n                    title: 'Edit/More',\r\n                    dataIndex: 'operation',\r\n                    key:'action',\r\n                    // colSpan: 0,\r\n                    // width: '75px',\r\n                    render: (_, dataIndex) => (<a onClick={() => this.editProduct(dataIndex)}>Edit</a>)\r\n                },\r\n            ]\r\n        };\r\n    }\r\n\r\n    editProduct = (product) => {\r\n        var record = '';\r\n        this.props.history.push({\r\n            pathname: \"/AddProduct\",\r\n            state: product\r\n        });\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{width: 188, marginBottom: 8, display: 'block'}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}}/>,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({searchText: ''});\r\n    };\r\n\r\n    onSelectChange = (selectedRows) => {\r\n        this.setState({\r\n            isSelectedRows: selectedRows.length > 0\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const rowSelection = {\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                this.onSelectChange(selectedRows);\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"view-int-box\">\r\n                <Table\r\n                    columns={this.state.columns} bordered\r\n                    dataSource={this.props.productList}\r\n                    pagination={{\r\n                        pageSize: 8\r\n                    }}\r\n                    // rowSelection={{...rowSelection}}\r\n                />\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default withRouter(ManageProductTable)\r\n\r\n\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Orders\\NewOrders.js",["416","417"],"import React from 'react';\r\nimport {List, Skeleton} from 'antd';\r\nimport Moment from 'moment';\r\n\r\nclass NewOrders extends React.Component {\r\n    state = {\r\n        initLoading: true,\r\n        loading: false,\r\n        data: [],\r\n        list: [],\r\n    };\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <List\r\n                className=\"demo-loadmore-list\"\r\n                itemLayout=\"horizontal\"\r\n                dataSource={this.props.orderList}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        actions={this.props.viewPage === 'vieworder' ? [<a key=\"list-loadmore-edit\"\r\n                                                                           onClick={() => this.props.showModal(item)}>View</a>,\r\n                            <a key=\"list-loadmore-more\" onClick={() => this.props.reviewOrder(item)}>Review</a>] : [<a\r\n                            href=\"/sigen/viewOrders\">View</a>]}\r\n                    >\r\n                        <Skeleton avatar title={false} loading={item.loading} active>\r\n                            <List.Item.Meta\r\n                                title={item.orderId}\r\n                                description={\"Ordered By: \"+item.customerName}\r\n                            />\r\n                            <div>{Moment(item.dateOfOrder).format('MMMM Do YYYY, h:mm a')}</div>\r\n                        </Skeleton>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewOrders","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Orders\\ViewOrders.js",["418","419","420","421","422","423","424","425","426"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    PageHeader,\r\n    Select,\r\n    Form,\r\n    Card,\r\n    Space,\r\n    Row,\r\n    Divider,\r\n    List,\r\n    Collapse,\r\n    Empty,\r\n    Tabs,\r\n    Modal,\r\n    Skeleton,\r\n    notification,\r\n    Popconfirm,\r\n    Spin\r\n} from 'antd';\r\nimport {MinusCircleOutlined} from '@ant-design/icons';\r\nimport {newOrders, reviewedOrders, completedOrders, customers} from '../../conastant';\r\nimport {withRouter} from 'react-router';\r\nimport NewOrders from '../Orders/NewOrders';\r\n\r\nimport {\r\n    getNewOrderList,\r\n    setOrderAsReviewed,\r\n    getReviewedOrderList,\r\n    cancelOrder,\r\n    getCompletedOrders,\r\n    completeOrder\r\n} from '../../Services/OrderService';\r\n\r\nconst {Panel} = Collapse;\r\nconst {TabPane} = Tabs;\r\n\r\nconst data = ['product1', 'product2', 'product3', 'product4', 'product5']\r\n\r\nconst layout = {\r\n    labelCol: {span: 8},\r\n    wrapperCol: {span: 16},\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 2, span: 16},\r\n};\r\n\r\nclass ViewOrders extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            completedOrders: \"\",\r\n            newOrders: \"\",\r\n            reviewedOrders: \"\",\r\n            isOrderModalVisible: false,\r\n            isCustomerModalVisible: false,\r\n            selectedOrder: \"\",\r\n            selectedCustomer: \"\",\r\n            popConfirmVisible: false,\r\n            loading: true\r\n\r\n        };\r\n    }\r\n\r\n\r\n    getNewOrders = async () => {\r\n\r\n        try {\r\n            var orderList = await getNewOrderList();\r\n            if (orderList) {\r\n                this.setState({\r\n                    newOrders: orderList,\r\n                    loading: false\r\n                })\r\n            }\r\n        } catch (error) {\r\n            notification.error({message: 'Error', description: (error.cause ? error : \"Error fetching data!\")})\r\n        }\r\n    }\r\n\r\n    getReviewedOrderList = async () => {\r\n        try {\r\n            var orderList = await getReviewedOrderList();\r\n            if (orderList) {\r\n                this.setState({\r\n                    reviewedOrders: orderList\r\n                })\r\n            }\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    getCompletedOrderList = async () => {\r\n        try {\r\n            var orderList = await getCompletedOrders();\r\n            if (orderList) {\r\n                this.setState({\r\n                    completedOrders: orderList\r\n                })\r\n            }\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    reviewOrder = async (item) => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        try {\r\n            var success = await setOrderAsReviewed(item);\r\n            if (success) {\r\n                notification.success({\r\n                    message: 'Success',\r\n                    description: 'Order set as reviewd'\r\n                });\r\n\r\n                this.setState({\r\n                    isOrderModalVisible: false,\r\n                    selectedOrder: \"\"\r\n                })\r\n\r\n                this.getNewOrders();\r\n                this.getReviewedOrderList();\r\n\r\n            } else {\r\n                notification.error({\r\n                    message: 'Error',\r\n                    description: 'Action failed. Try again'\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        } catch (error) {\r\n            notification.error({\r\n                message: 'Error',\r\n                description: (error.cause ? error.cause : \"'Action failed. Try again'\")\r\n            })\r\n\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    hancdleOrderComplete = async (item) => {\r\n        console.log(item)\r\n        try {\r\n            var success = await completeOrder(item);\r\n            if (success) {\r\n                notification.success({\r\n                    message: 'Success',\r\n                    description: 'Order Completed!'\r\n                });\r\n                this.getReviewedOrderList();\r\n                this.getCompletedOrderList();\r\n            } else {\r\n                notification.error({\r\n                    message: 'Error',\r\n                    description: 'Action failed. Try again'\r\n                })\r\n            }\r\n        } catch (error) {\r\n            notification.error({\r\n                message: 'Error',\r\n                description: (error.cause ? error.cause : \"'Action failed. Try again'\")\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    ///// order modal functions\r\n\r\n    showOrderModal = (item) => {\r\n\r\n        if (item) {\r\n            this.setState({\r\n                isOrderModalVisible: true,\r\n                selectedOrder: item\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isOrderModalVisible: false,\r\n                selectedOrder: \"\"\r\n            })\r\n        }\r\n    };\r\n\r\n    handleOrderCancel = async (item, type) => {\r\n\r\n        try {\r\n            var success = await cancelOrder(item);\r\n            if (success) {\r\n\r\n                notification.success({\r\n                    message: 'Success',\r\n                    description: 'Order Canceled!'\r\n                });\r\n\r\n                this.setState({\r\n                    isOrderModalVisible: false,\r\n                    selectedOrder: \"\"\r\n                })\r\n\r\n\r\n                if (type === \"modal\") {\r\n                    this.getNewOrders();\r\n                }\r\n                if (type === \"list\") {\r\n                    this.getReviewedOrderList();\r\n                }\r\n                this.getCompletedOrderList();\r\n\r\n            } else {\r\n                notification.error({\r\n                    message: 'Error',\r\n                    description: 'Action failed. Try again'\r\n                })\r\n            }\r\n        } catch (error) {\r\n            notification.error({\r\n                message: 'Error',\r\n                description: (error.cause ? error.cause : \"'Action failed. Try again'\")\r\n            })\r\n            this.setState({\r\n                popConfirmVisible: false,\r\n                isOrderModalVisible: false,\r\n                selectedOrder: \"\",\r\n            })\r\n        }\r\n    };\r\n\r\n    showPopconfirm = (visible) => {\r\n        this.setState({\r\n            popConfirmVisible: visible\r\n        })\r\n    }\r\n\r\n\r\n    //// customer modal functions\r\n\r\n    showCustomerModal = (cust) => {\r\n        var cust = this.getCustomerById(cust.customerId)\r\n        this.setState({\r\n            isCustomerModalVisible: true,\r\n            selectedCustomer: cust\r\n        })\r\n    };\r\n\r\n    handleCustomerOk = () => {\r\n        this.setState({\r\n            isCustomerModalVisible: false,\r\n            selectedCustomer: \"\"\r\n        })\r\n    };\r\n\r\n    getCustomerById = (cid) => {\r\n        for (var i = 0; i < customers.length; i++) {\r\n            if (customers[i].customerId === cid)\r\n                console.log(customers[i])\r\n                return customers[i]\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    ////////\r\n\r\n    async componentDidMount() {\r\n        await this.getNewOrders();\r\n        this.getReviewedOrderList();\r\n        this.getCompletedOrderList();\r\n        this.setState({\r\n            loading: false\r\n        })\r\n        console.log(this.state.newOrders);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"View Orders\"/>\r\n                    <Card title='New Orders'>\r\n                        <Spin spinning={this.state.loading}>\r\n                            <NewOrders orderList={this.state.newOrders} showModal={this.showOrderModal}\r\n                                       reviewOrder={this.reviewOrder} viewPage={'vieworder'}/>\r\n                        </Spin>\r\n                    </Card>\r\n                    <Divider/>\r\n                    <Card title='Previous Orders'>\r\n                        <Tabs defaultActiveKey=\"1\">\r\n                            <TabPane tab=\"Reviewed\" key=\"1\">\r\n                                {\r\n                                    ((this.state.reviewedOrders.length > 0) ?\r\n                                        <List\r\n                                            itemLayout=\"vertical\"\r\n                                            size='small'\r\n                                            pagination={{\r\n                                                pageSize: 5\r\n                                            }}\r\n                                            dataSource={this.state.reviewedOrders}\r\n                                            renderItem={item => (\r\n                                                <Collapse ghost>\r\n                                                    <Panel header={\r\n                                                        <List.Item\r\n                                                            //  actions={[<Button size='small'>Complete Order</Button>,<Button size='small' style={{color:'red'}}>Cancel Order</Button>]}\r\n                                                        >\r\n                                                            <List.Item.Meta\r\n                                                                description={'Order Number: ' + item.orderId + ' placed on: ' + item.dateOfOrder}\r\n                                                            />\r\n                                                        </List.Item>}>\r\n                                                        <Row>\r\n                                                            <Col span={12}>\r\n                                                                <p><b>Order ID: </b>{item.orderId} </p>\r\n                                                                <p><b>Customer Name:</b> {item.customerName}</p>\r\n                                                                <p><b>Ordered Date:</b> {item.dateOfOrder}</p>\r\n                                                                <p><b>Reviewed By:</b> {item.reviewedBy}</p>\r\n                                                                <p><b>Reviewed Date:</b> {item.reviewedDate}</p>\r\n                                                            </Col>\r\n                                                            <Col span={12}>\r\n                                                                <p><b>Ordered Items:</b> {<List\r\n                                                                    className=\"demo-loadmore-list\"\r\n                                                                    itemLayout=\"horizontal\"\r\n                                                                    dataSource={item.orderItems}\r\n                                                                    renderItem={product => (\r\n                                                                        <List.Item>\r\n                                                                            <div>{product}</div>\r\n                                                                        </List.Item>\r\n                                                                    )}/>}</p>\r\n                                                                <Row> <Col offset={1}><Button\r\n                                                                    onClick={() => this.showCustomerModal(item)}\r\n                                                                    type='primary' size='small'>Customer\r\n                                                                    Details</Button></Col>\r\n                                                                    <Col offset={5}><Button\r\n                                                                        onClick={() => this.handleOrderCancel(item, \"list\")}\r\n                                                                        size='small' style={{color: 'red'}}>Cancel\r\n                                                                        Order</Button></Col>\r\n                                                                    <Col offset={1}><Button size='small'\r\n                                                                                            onClick={() => this.hancdleOrderComplete(item)}>Complete\r\n                                                                        Order</Button></Col> </Row>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Panel>\r\n                                                </Collapse>\r\n                                            )}\r\n                                        /> :\r\n                                        <Empty/>)\r\n                                }\r\n                            </TabPane>\r\n                            <TabPane tab=\"Completed/Canceled\" key=\"2\">\r\n                                {\r\n                                    ((this.state.completedOrders.length > 0) ?\r\n                                        <List\r\n                                            itemLayout=\"vertical\"\r\n                                            size='small'\r\n                                            pagination={{\r\n                                                pageSize: 10\r\n                                            }}\r\n                                            dataSource={this.state.completedOrders}\r\n                                            renderItem={item => (\r\n                                                <Collapse ghost>\r\n                                                    <Panel header={\r\n                                                        <List.Item>\r\n\r\n                                                            <List.Item.Meta\r\n                                                                description={'Order Number: '}\r\n                                                            />\r\n                                                        </List.Item>}>\r\n                                                        <Row>\r\n                                                            <Col span={12}>\r\n                                                                <p>Order ID: {this.state.selectedOrder.orderId} </p>\r\n                                                                <p>Customer\r\n                                                                    Name: {this.state.selectedOrder.customerName}</p>\r\n                                                                <p>Ordered\r\n                                                                    Date: {this.state.selectedOrder.dateOfOrder}</p>\r\n                                                            </Col>\r\n                                                            <Col span={12}>\r\n                                                                {/* <p>Date/time: {Moment(item[1][0].startedTime).format('MMMM Do YYYY, HH:mm:ss')}</p> */}\r\n                                                                <p>Ordered\r\n                                                                    Items:{this.state.selectedOrder.orderItems}</p>\r\n                                                                {/* <p>Status: {item[1].length > 1 ? this.setStatus(item[1]) : item[1][0].statusText}</p> */}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Panel>\r\n                                                </Collapse>\r\n                                            )}\r\n                                        /> :\r\n                                        <Empty/>)\r\n                                }\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </Card>\r\n                </Card>\r\n\r\n\r\n                {/* Order Details Modal */}\r\n\r\n                <Modal title=\"Order Details\"\r\n                       visible={this.state.isOrderModalVisible}\r\n                       onOk={() => this.reviewOrder(this.state.selectedOrder)}\r\n                       onCancel={() => this.showOrderModal(null)}\r\n                       footer={[\r\n                           <Button key=\"back\" onClick={() => this.showOrderModal(null)}>\r\n                               Back\r\n                           </Button>,\r\n                           <Popconfirm\r\n                               title=\"Are you sure to cancel this order?\"\r\n                               // visible={this.state.popConfirmVisible}\r\n                               onConfirm={() => this.handleOrderCancel(this.state.selectedOrder, \"modal\")}\r\n                               onCancel={() => this.showPopconfirm(false)}\r\n                               okText=\"Yes\"\r\n                               cancelText=\"No\">\r\n                               <Button key=\"cancel\" type=\"primary\" danger onClick={() => this.showPopconfirm(true)}>\r\n                                   Cancel Order\r\n                               </Button>\r\n                           </Popconfirm>,\r\n                           <Button key=\"submit\" type=\"primary\"\r\n                                   onClick={() => this.reviewOrder(this.state.selectedOrder)}>\r\n                               Review Order\r\n                           </Button>,\r\n                       ]}>\r\n                    <Form {...layout}>\r\n\r\n                        {/* <Col span={12}> */}\r\n                        <Form.Item {...tailLayout} label='Order ID:'> {this.state.selectedOrder.orderId} </Form.Item>\r\n                        <Form.Item {...tailLayout}\r\n                                   label='Customer Name:'> {this.state.selectedOrder.customerName}</Form.Item>\r\n                        <Form.Item {...tailLayout}\r\n                                   label='Ordered Date:'> {this.state.selectedOrder.dateOfOrder}</Form.Item>\r\n                        {/* </Col> */}\r\n                        {/* <Col span={12}> */}\r\n                        <Form.Item {...tailLayout} label='Ordered Items:'>\r\n                            <List\r\n                                className=\"demo-loadmore-list\"\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={this.state.selectedOrder.orderItems}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <div>{item}</div>\r\n                                    </List.Item>\r\n                                )}/>\r\n                            {/* </Col> */}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                {/* Customer Details Modal */}\r\n\r\n                <Modal title=\"Customer Details\"\r\n                       visible={this.state.isCustomerModalVisible}\r\n                       onOk={this.handleCustomerOk}\r\n                       onCancel={this.handleCustomerOk}\r\n                >\r\n                    <Form {...layout}>\r\n\r\n                        {/* <Col span={12}> */}\r\n                        <Form.Item {...tailLayout}\r\n                                   label='Customer ID:'> {this.state.selectedCustomer.customerId} </Form.Item>\r\n                        <Form.Item {...tailLayout}\r\n                                   label='Customer Name:'> {this.state.selectedCustomer.customerName}</Form.Item>\r\n                        <Form.Item {...tailLayout} label='Email:'> {this.state.selectedCustomer.email}</Form.Item>\r\n                        <Form.Item {...tailLayout} label='Mobile:'> {this.state.selectedCustomer.mobile}</Form.Item>\r\n                        <Form.Item {...tailLayout} label='Address:'> {this.state.selectedCustomer.address}</Form.Item>\r\n                        {/* </Col> */}\r\n                        {/* <Col span={12}> */}\r\n                    </Form>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ViewOrders);\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\OrderService.js",["427","428","429","430","431","432"],"import {newOrders,reviewedOrders,completedOrders} from '../conastant'\r\n\r\n\r\nexport async function getNewOrderList(){\r\n\r\n\tconst endpoint = ''\r\n\t// let api = await API();\r\n\t// return api.get(endpoint);\r\n\treturn newOrders;\r\n}\r\n\r\nexport async function setOrderAsReviewed(order){\r\n\t\r\n\tconst endpoint = ''\r\n\t// \tlet params ={\r\n\t// \torder : order,\r\n\t// \tuserId : getuserId\r\n\t// }\r\n\t// let api = await API();\r\n\t// return api.get(endpoint,params);\r\n\treturn true;\r\n}\r\n\r\nexport async function getReviewedOrderList(){\r\n\r\n\tconst endpoint = ''\r\n\t// let api = await API();\r\n\t// return api.get(endpoint);\r\n\treturn reviewedOrders;\r\n}\r\n\r\nexport async function cancelOrder(order){\r\n\r\n\tconst endpoint = '/'\r\n\t// \tlet params ={\r\n\t// \torder : order.id,\r\n\t// \tuserId : getUserId()\r\n\t// }\r\n\t// let api = await API();\r\n\t// return api.get(endpoint,params);\r\n\treturn true;\r\n}\r\n\r\nexport async function getCompletedOrders(){\r\n\r\n\tconst endpoint = ''\r\n\t// let api = await API();\r\n\t// return api.get(endpoint);\r\n\treturn completedOrders;\r\n}\r\n\r\nexport async function completeOrder(order){\r\n\r\n\tconst endpoint = ''\r\n\t// let params ={\r\n\t// \torder : order,\r\n\t// \tuserId : getuserId\r\n\t// }\r\n\t// let api = await API();\r\n\t// return api.get(endpoint,params);\r\n\treturn true;\t\r\n}","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\StockService.js",["433","434"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\ProductService.js",["435"],"import {productList,Categories} from \"../conastant\";\r\n\r\nexport async function getProductsByType(type){\r\n\r\n    let list = filterProductsByType(type);\r\n    // const endpoint = ''\r\n    // let api = await API();\r\n    // return api.get(endpoint);\r\n    return list;\r\n}\r\n\r\n\r\nexport async function  getProductImageById(id){\r\n    // const endpoint = ''\r\n    // let api = await API();\r\n    // return api.get(endpoint);\r\n    return true;\r\n}\r\n\r\nexport  async function  getCategoriesByProductType(type){\r\n\r\n    let list = [];\r\n    for(let i=0;i<Categories.length;i++){\r\n        if(Categories[i].productType==type){\r\n            list = Categories[i].categories;\r\n        }\r\n    }\r\n\r\n    // const endpoint = ''\r\n    // let api = await API();\r\n    // return api.get(endpoint);\r\n    return list;\r\n}\r\n\r\nexport async function submitProductDetials(product){\r\n    // const endpoint = ''\r\n    // let api = await API();\r\n    // return api.get(endpoint,product);\r\n    return true;\r\n}\r\n\r\n\r\nfunction filterProductsByType(type) {\r\n    var selectedList = [];\r\n    for(var i=0;i<productList.length;i++){\r\n        if(productList[i].productType===type){\r\n            selectedList.push(productList[i]);\r\n        }\r\n    }\r\n    return selectedList;\r\n}","D:\\Simply Web\\src\\index.js",["436","437"],["438","439"],"D:\\Simply Web\\src\\App.js",[],"D:\\Simply Web\\src\\Components\\Layout\\Layout.js",["440","441"],"import React from 'react';\r\nimport { Layout, Breadcrumb, Card} from 'antd';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport TopNav from '../Layout/TopNav';\r\nimport SideMenu from '../Layout/SideMenu';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\n\r\nimport './Layout.css';\r\n\r\nconst { Content,Footer,Sider } = Layout;\r\n\r\n\r\nclass SiteLayout extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  collapsed: false\r\n\t\t};\r\n\t  }\r\n\r\n\t  toggle = () => {\r\n\t\tthis.setState({\r\n\t\t  collapsed: !this.state.collapsed,\r\n\t\t});\r\n\t  };  \r\n\r\n\trender(){\r\n\r\n\t\tconst { location } = this.props;\r\n\t\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\t\tconst extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n\t\t  const url = `${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\t  return (\r\n\t\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t  <Link to={url}>{url}</Link>\r\n\t\t\t</Breadcrumb.Item>\r\n\t\t  );\r\n\t\t});\r\n\t\tconst breadcrumbItems = [\r\n\t\t  <Breadcrumb.Item key=\"home\">\r\n\t\t\t<Link to=\"/\"><HomeOutlined /></Link>\r\n\t\t  </Breadcrumb.Item>,\r\n\t\t].concat(extraBreadcrumbItems);\r\n\r\n\t\treturn(\r\n\t\t<Layout>\r\n\t\t\t<Sider trigger={null} collapsible collapsed={this.state.collapsed}\r\n\t\t\t\t   // style={{backgroundColor:'orange'}}\r\n\t\t\t>\r\n            <div className=\"logo\" >\r\n              <h4 style={{ color: 'white', fontWeight: 'bold' }}>\r\n                Welcome\r\n              </h4>\r\n            </div>\r\n            <SideMenu />\r\n          </Sider>\r\n\t\t  <Layout  className=\"site-layout\" >\r\n\t\t  <TopNav collapsed={this.state.collapsed} onCollapse={this.toggle} />\r\n\t\t\t<Content style={{ margin: '0 16px' }}\r\n\t\t\t>\r\n\t\t\t\t{/*<Breadcrumb style={{ margin: '16px 0' }}>*/}\r\n              {/*  {breadcrumbItems}*/}\r\n              {/*</Breadcrumb>*/}\r\n\t\t\t  <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</Content> \r\n\t\t\t<Footer  style={{ textAlign: 'center' }}>Simply 2021</Footer>\r\n\t\t</Layout>\r\n\t  </Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(SiteLayout)","D:\\Simply Web\\src\\Components\\Login\\Login.js",["442","443","444","445"],"import React from 'react';\r\nimport {Form, Input, Button, Select, Col, Card, Row, notification, Modal, DatePicker} from 'antd';\r\nimport {withRouter} from 'react-router';\r\nimport {getUserDetails, login, signup} from \"../../Services/UserLoginService\";\r\nimport './Login.css';\r\nimport {Header} from \"antd/es/layout/layout\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport moment from 'moment';\r\n\r\nvar _ = require('underscore');\r\n\r\nconst {Option} = Select;\r\nconst {Meta} = Card;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 20,\r\n        span: 4,\r\n    },\r\n};\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: null,\r\n            userName: '',\r\n            email:'',\r\n            password:'',\r\n            loginModalVisible: false,\r\n            signUpModalVisible: false,\r\n        };\r\n    }\r\n\r\n    setEmail = (e) =>{\r\n        let mail = e.target.value\r\n        this.setState({\r\n            email:mail\r\n        })\r\n    }\r\n\r\n    setPassword = (e) =>{\r\n        let pw = e.target.value\r\n        this.setState({\r\n            password:pw\r\n        })\r\n    }\r\n\r\n\r\n    LogIn = async () => {\r\n        let values = {\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        }\r\n        try {\r\n            var session = await login(values)\r\n            var decoded = jwt_decode(session.token);\r\n            var usersession = {\r\n                User: decoded.email,\r\n                Token: session.token,\r\n                Email: decoded.email,\r\n                Id: decoded.userId,\r\n                Role: decoded.roles,\r\n            };\r\n            if (decoded.userId) {\r\n                try {\r\n                    var user = await getUserDetails(decoded.userId);\r\n                    if (user._id) {\r\n                        usersession.User = user\r\n                    }\r\n                } catch (error) {\r\n                    notification.error({\r\n                        message: 'Error!',\r\n                        description: (error.cause ? error.cause : \"Error getting user details!\")\r\n                    });\r\n                }\r\n            }\r\n            localStorage.setItem(\"token\", usersession.Token);\r\n            localStorage.setItem('usersession', JSON.stringify(usersession));\r\n\r\n            if ((session.token !== null) || (session.token !== undefined)) {\r\n                this.props.history.push({\r\n                    pathname: \"/dashboard\",\r\n                    user: usersession\r\n                });\r\n            } else {\r\n                this.props.history.goBack();\r\n            }\r\n        } catch (error) {\r\n            notification.error({message: 'Error!', description: (error.cause ? error.cause : \"\")});\r\n        }\r\n\r\n        this.setState({\r\n            loginModalVisible: false,\r\n            signUpModalVisible: false,\r\n        })\r\n    };\r\n\r\n    signUp = async(values) =>{\r\n        // console.log(values);\r\n        var user = {\r\n            fname: values.fname,\r\n            lname: values.lname,\r\n            email: values.email,\r\n            password: values.password,\r\n            dob: values.dob,\r\n            institute: values.institute,\r\n            xp: values.xp\r\n        }\r\n        try{\r\n            var response = await signup(user);\r\n            if(response){\r\n                notification.success({message:\"Success!\" ,description:'Please login to continue.'})\r\n            }\r\n        }catch (error){\r\n            notification.error({message: 'Error!', description: (error.cause ? error.cause : \"\")});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LoginForm\">\r\n                <div className=\"bg-image\">\r\n                    <div className=\"loginText\">\r\n                        <Row>\r\n                            <Col span={4} offset={7}>\r\n                                <Button size='large' shape=\"round\"\r\n                                        onClick={() => this.setState({signUpModalVisible: true})}>Sign Up</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button size='large' shape=\"round\"\r\n                                        onClick={() => this.setState({loginModalVisible: true})}>Login</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/*   Login Modal */}\r\n\r\n                <Modal\r\n                    title=\"Login\"\r\n                    centered\r\n                    bodyStyle={{backgroundColor: '#eee6fc'}}\r\n                    visible={this.state.loginModalVisible}\r\n                    // onOk={() => this.setModal2Visible(false)}\r\n                    onCancel={() => this.setState({loginModalVisible: false})}\r\n                    footer={[\r\n                        <Button key=\"submit\" shape=\"round\" disabled>\r\n                            Forgot Password\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        onFinish={this.LogIn}\r\n                    >\r\n                        <Form.Item label=\"Email\"\r\n                                   onChange={this.setEmail}\r\n                                   name=\"email\"\r\n                                   value={this.state.email}\r\n                                   rules={[\r\n                                       {\r\n                                           type: 'email',\r\n                                           required: true,\r\n                                           message: 'Please enter valid email!',\r\n                                       },\r\n                                   ]}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Password\"\r\n                                   name=\"password\"\r\n                                   onChange={this.setPassword}\r\n                                   value={this.state.password}\r\n                                   rules={[\r\n                                       {\r\n                                           required: true,\r\n                                           message: 'Please input your password!',\r\n                                       },\r\n                                   ]}\r\n                        >\r\n                            <Input.Password/>\r\n                        </Form.Item>\r\n\r\n                        <Col offset={18}>\r\n                            <Button shape=\"round\" size='large'\r\n                                    // htmlType=\"submit\"\r\n                                    onClick={this.LogIn}>\r\n                                Login\r\n                            </Button>\r\n                        </Col>\r\n                    </Form>\r\n                </Modal>\r\n\r\n\r\n                {/*   SignUp Modal */}\r\n\r\n                <Modal\r\n                    title=\"Sign Up\"\r\n                    centered\r\n                    bodyStyle={{backgroundColor: '#e8f0ff'}}\r\n                    visible={this.state.signUpModalVisible}\r\n                    // onOk={() => this.setModal2Visible(false)}\r\n                    onCancel={() => this.setState({signUpModalVisible: false})}\r\n                    footer={[\r\n                        <span style={{color: '#7fa3eb'}}><b>Continue your journey with Simply...!</b></span>,\r\n                        // <Button key=\"submit\" shape=\"round\" disabled>\r\n                        //     Forgot Password\r\n                        // </Button>,\r\n                    ]}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        onFinish={this.signUp}\r\n                        autoComplete={\"off\"}\r\n                    >\r\n                        <Form.Item label=\"First Name\" name=\"fname\"\r\n                                   rules={[\r\n                                       {\r\n                                           required: true,\r\n                                           message: 'Please enter your first name!',\r\n                                       },\r\n                                   ]}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Last Name\" name=\"lname\"\r\n                                   // rules={[\r\n                                   //     {\r\n                                   //         required: true,\r\n                                   //         message: 'Please enter your last name!',\r\n                                   //     },\r\n                                   // ]}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Email\" name=\"email\"\r\n                                   rules={[\r\n                                       {\r\n                                           type: 'email',\r\n                                           required: true,\r\n                                           message: 'Please enter valid email!',\r\n                                       },\r\n                                   ]}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Date of Birth\" name=\"dob\">\r\n                            <DatePicker\r\n                                format=\"YYYY-MM-DD\"\r\n                                disabledDate={disabledDate}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Institute\" name=\"institute\">\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"xp\" label=\"Experience\"\r\n                                   rules={[\r\n                                       {\r\n                                           required: true,\r\n                                           message: 'Please select your level of expertise!'\r\n                                       }\r\n                                       ]}>\r\n                            <Select\r\n                                placeholder=\"Level of experience in programming\"\r\n                                onChange={this.onGenderChange}\r\n                                allowClear\r\n                            >\r\n                                <Option value=\"Beginner\">Newbie</Option>\r\n                                <Option value=\"Intermediate\">Intermediate</Option>\r\n                                <Option value=\"Advanced\">Expert</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                            ]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            label=\"Confirm Password\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please confirm your password!',\r\n                                },\r\n                                ({getFieldValue}) => ({\r\n                                    validator(_, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                    },\r\n                                }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password/>\r\n                        </Form.Item>\r\n                        <Col offset={18}>\r\n                            <Button shape=\"round\" size='large' htmlType=\"submit\">\r\n                                Sign Up\r\n                            </Button>\r\n                        </Col>\r\n                    </Form>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction disabledDate(current) {\r\n    // Can not select days after today\r\n    return current > moment().endOf('day');\r\n}\r\n\r\nexport default withRouter(Login)","D:\\Simply Web\\src\\Components\\Users\\AddUser.js",["446","447","448","449","450"],"D:\\Simply Web\\src\\Components\\Users\\ManageUsers.js",["451","452"],"D:\\Simply Web\\src\\Routes.js",["453","454","455"],"import React, { useEffect } from 'react';\r\nimport { Switch, Route, Redirect, BrowserRouter, useHistory } from 'react-router-dom';\r\nimport App from './App';\r\nimport DashBoard from './Components/Dashboard/Dashboard';\r\nimport SiteLayout from './Components/Layout/Layout';\r\nimport Login from './Components/Login/Login';\r\nimport AddUser from './Components/Users/AddUser';\r\nimport ManageUser from './Components/Users/ManageUsers';\r\nimport OverviewCourse from './Components/Learn/CourseOverview';\r\nimport OverviewPractice from \"./Components/Practice/PracticeOverview\";\r\nimport CourseDetails from \"./Components/Learn/CourseDetails\";\r\nimport QuestionList from \"./Components/Practice/QuestionsList\";\r\nimport GettingStart from \"./Components/Documentation/GettingStart\";\r\nimport Documentation from \"./Components/Documentation/Documentation\";\r\nimport DevelopersGuide from \"./Components/Documentation/DevelopersGuide\";\r\nimport Visualizer from \"./Components/Visualizer/CodeVisualizer\";\r\nimport Question from \"./Components/Practice/SelectedQuestion\";\r\n\r\n\r\n// function TryPoke() {\r\n//     // Do a POKE and update the ticket\r\n//     PokeSession().then(session => {\r\n//         localStorage.setItem(\"token\", session.token);\r\n//         localStorage.setItem(\"loggedInData\", session.validTo);\r\n//     }).catch(err => {\r\n//         localStorage.removeItem('token');\r\n//         localStorage.removeItem('loggedInData');\r\n//     });\r\n// }\r\n\r\nfunction CheckLogOnStatus() {\r\n    let token = localStorage.getItem('token');\r\n    // let validTime = localStorage.getItem('loggedInData');\r\n\r\n    if (token) {\r\n        // TryPoke();\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    // const history = useHistory();\r\n\r\n    // useEffect(() => {\r\n    //     const timer = setTimeout(() => {\r\n    //         history.push('/login', { directLogin: false });\r\n    //     }, (1000 * 60 * 14));\r\n    //     return () => clearTimeout(timer);\r\n    // }, []);\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            (true)\r\n                ? (<SiteLayout><Component {...props} /></SiteLayout>)\r\n                : (<Redirect to={{\r\n                    pathname: '/login',\r\n                    state: { from: props.location }\r\n                }} />)\r\n        )} />);\r\n}\r\n\r\nconst Routes = () => {\r\n\r\n    // console.log('Application running in ' + process.env.NODE_ENV + ' mode');\r\n    let basePath = \"/simply\";\r\n\r\n    // if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    //     basePath = \"/\"\r\n    // } else {\r\n    //     basePath = \"/DIPS-ANC/ANCDMClient\"\r\n    // }\r\n\r\n    return (\r\n        <BrowserRouter basename={basePath} >\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <PrivateRoute  path='/dashboard' component={DashBoard}/>\r\n                <PrivateRoute  path='/courses/overview' component={OverviewCourse}/>\r\n                <PrivateRoute  path=\"/courses/:courseName\" component={CourseDetails}/>\r\n                <PrivateRoute  path='/practice/overview' component={OverviewPractice}/>\r\n                <PrivateRoute exact path='/practice/:courseName' component={QuestionList}/>\r\n                <PrivateRoute exact path='/question/:questionTitle' component={Question}/>\r\n                <PrivateRoute  path='/learn/gettingStart' component={GettingStart}/>\r\n                <PrivateRoute  path='/learn/documentation' component={Documentation}/>\r\n                <PrivateRoute  path='/learn/developerGuide' component={DevelopersGuide}/>\r\n                <PrivateRoute  path='/codeVisualizer' component={Visualizer}/>\r\n                <PrivateRoute path='/addUser' component={AddUser}/>\r\n                <PrivateRoute path= '/manageUser' component={ManageUser}/>\r\n                <PrivateRoute exact path=\"/\" component={DashBoard} />\r\n                <Route exact path=\"/\" component={App} />\r\n      \r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","D:\\Simply Web\\src\\Components\\Layout\\SideMenu.js",["456","457","458","459","460"],"import {Layout, Menu} from 'antd';\r\n// import Sider from 'antd/lib/layout/Sider';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n    HomeOutlined,\r\n    LaptopOutlined,\r\n    FolderOpenOutlined,\r\n    HighlightOutlined,\r\n    NotificationOutlined,\r\n    ShoppingOutlined,\r\n    ExperimentOutlined,\r\n    GiftOutlined,\r\n    CodeOutlined,\r\n    TrophyOutlined\r\n} from '@ant-design/icons';\r\nimport React from 'react';\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Sider} = Layout;\r\n\r\nclass SideMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: false,\r\n        };\r\n\r\n    }\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({collapsed});\r\n    };\r\n\r\n    render() {\r\n        const {collapsed} = this.state;\r\n        return (\r\n            <Menu\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                // style={{backgroundColor:'orange'}}\r\n                // defaultSelectedKeys={['1']}\r\n                // defaultOpenKeys={['sub1']}\r\n                // style={{ height: '100%', borderRight: 0 }}\r\n            >\r\n                <Menu.Item key=\"1\" icon={<HomeOutlined/>}>\r\n                    <Link to=\"/dashboard\">Dashboard</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='2' icon={< HighlightOutlined/>}>\r\n                    <Link to=\"/courses/overview\">Learn</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\" icon={<ExperimentOutlined/>}>\r\n                    <Link to=\"/practice/overview\">Practice</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<TrophyOutlined />} key=\"4\">\r\n                    <Link>Compete</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<CodeOutlined />} key=\"5\">\r\n                    <Link to=\"/codeVisualizer\">Code VIsializer</Link>\r\n                </Menu.Item>\r\n                <SubMenu key=\"sub4\" icon={< FolderOpenOutlined/>} title=\"Docs\">\r\n                    <Menu.Item key=\"6\">\r\n                        <Link to=\"/learn/gettingStart\">Getting Start with Simply</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"7\">\r\n                        <Link to=\"/learn/documentation\">Simply Documentation</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"8\">\r\n                        <Link to=\"/learn/developerGuide\">Developers Guide</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key='sub5' icon={< ShoppingOutlined/>} title=\"Resources\">\r\n                    <Menu.Item key=\"9\">\r\n                        <Link>Download SDK</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"10\">\r\n                        <Link>Config File Generation</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"11\">\r\n                        <Link>Syntax Highlighter Configs Download</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n// <PrivateRoute path='/categories' component={Categories}/>\r\n// <PrivateRoute path='/addUser' component={AddUser}/>\r\n// <PrivateRoute path= '/manageUser' component={ManageUser}/>\r\n// <PrivateRoute path= '/stocks' component={ManageStocks}/>\r\n\r\n\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\Layout\\TopNav.js",["461","462","463"],"import React, {Component} from 'react';\r\nimport {createHashHistory} from 'history';\r\nimport {ConfigProvider, Layout, Menu, Dropdown, Badge} from 'antd';\r\nimport {\r\n    UserOutlined,\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    PoweroffOutlined, NotificationOutlined,\r\n    TrophyTwoTone,FundTwoTone,CrownTwoTone\r\n} from '@ant-design/icons';\r\n\r\n// import { Logout } from '../../Services/AuthService';\r\nimport './TopNav.css';\r\nimport {logout} from \"../../Services/UserLoginService\";\r\n\r\nconst {Header} = Layout;\r\n\r\nclass TopNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            role: '',\r\n            user: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var usersession = localStorage.getItem('usersession');\r\n        var userSessionObj = JSON.parse(usersession);\r\n        console.log(userSessionObj);\r\n        var user = userSessionObj.User\r\n        this.setState({\r\n            username: user.fname,\r\n            role: userSessionObj.Role[0],\r\n            user: user\r\n        });\r\n    }\r\n\r\n    LogoutClick = e => {\r\n        if (e.key === 'logout') {\r\n            logout();\r\n            const history = createHashHistory();\r\n            history.go(\"/login\");\r\n        }\r\n    };\r\n\r\n    getUserMenu = () => {\r\n        return (\r\n            <Menu>\r\n                <Menu.Item key=\"rank\"  icon={<TrophyTwoTone/>}>\r\n                    Rank: {this.state.user.rank}\r\n                </Menu.Item>\r\n                <Menu.Item key=\"score\"  icon={<FundTwoTone />}>\r\n                    Score: {this.state.user.score}\r\n                </Menu.Item>\r\n                <Menu.Item key=\"score\"  icon={<CrownTwoTone />}>\r\n                    Leaderboards\r\n                </Menu.Item>\r\n                <Menu.Item key=\"logout\" icon={<UserOutlined/>}>\r\n                    My Profile\r\n                </Menu.Item>\r\n                <Menu.Item key=\"logout\" onClick={this.LogoutClick} icon={<PoweroffOutlined/>}>\r\n                    LogOut\r\n                </Menu.Item>\r\n            </Menu>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ConfigProvider locale={this.state.locale}>\r\n                <Header className=\"site-layout-background\">\r\n\r\n                    {React.createElement(this.props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                        className: 'trigger',\r\n                        onClick: this.props.onCollapse,\r\n                    })}\r\n\r\n                    <span role=\"img\" style={{color: 'white', fontSize: '18px', fontWeight: '4px'}}>\r\n                          {/*<img alt={\"Welcome\"} style={{height:'50px',width:'150px'}} src={'http://localhost:3000/simplyLogo.png'}/>*/}\r\n                        Logo Here\r\n                    </span>\r\n\r\n                    <span className=\"top-hosp-name\">\r\n                      <img alt={\"Welcome\"} style={{height: '60px', width: '150px'}}\r\n                           src={'http://localhost:3000/simplyLogo.png'}/>\r\n                    </span>\r\n                    <div className=\"top-right-side\">\r\n                        <span>\r\n                        {/*<Dropdown overlay={menu}>*/}\r\n                            {/*<Badge dot>*/}\r\n                            {/*    <NotificationOutlined />*/}\r\n                            {/*</Badge>*/}\r\n                            {/*</Dropdown>*/}\r\n                            </span>\r\n                        <span id=\"top-user-menu\">\r\n                            <Dropdown.Button overlay={this.getUserMenu()} placement=\"bottomCenter\"\r\n                                             icon={<UserOutlined/>}>\r\n                                 {`${this.state.username} `}\r\n                            </Dropdown.Button>\r\n                        </span>\r\n                    </div>\r\n                </Header>\r\n            </ConfigProvider>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default TopNav\r\n\r\n\r\nconst menu = (\r\n    <Menu>\r\n        <Menu.Item>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\r\n                You have notifications\r\n            </a>\r\n        </Menu.Item>\r\n    </Menu>\r\n);","D:\\Simply Web\\src\\Components\\DashBoard\\dashboard.js",["464","465","466","467","468","469","470","471","472","473"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Select, Form, Card, Space, Row, Divider, List, Carousel, Image} from 'antd';\r\nimport {MinusCircleOutlined,BulbOutlined } from '@ant-design/icons';\r\nimport {withRouter} from 'react-router';\r\n\r\n\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: \"\",\r\n            practicalList: \"\",\r\n            competitionList: '',\r\n            todaysTip:''\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"\"/>\r\n                    <Carousel autoplay effect=\"fade\">\r\n                        <div>\r\n                            <h3 style={contentStyle}><img style={{height: '260px', width: '100%'}}\r\n                                                          src={process.env.PUBLIC_URL + '/Images/Learn-1.jpeg'}/>\r\n                            </h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3 style={contentStyle}>2</h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3 style={contentStyle}>3</h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3 style={contentStyle}>4</h3>\r\n                        </div>\r\n                    </Carousel>\r\n                    <Divider> <b><BulbOutlined /> Today's Tip</b></Divider>\r\n                    <div><span style={{fontSize:'18px',fontWeight:'12px'}}>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                        consequat.\r\n                        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n                        pariatur.\r\n                        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\r\n                        id est laborum.\"</span>\r\n                    </div>\r\n                    <Divider orientation=\"left\"> <b>Get Your Skills Certified</b></Divider>\r\n                    <Row gutter={16}>\r\n                        <Col span={8}>\r\n                            <Card title={<b><span>Learn</span></b>} extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.courses}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.productName}\r\n                                              />\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Card title={<b><span>Practice</span></b>} extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.practicalList}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.pacticalName}\r\n                                              />\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Card title={<b><span>Compete</span></b>} extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.competitionList}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.competitionName}\r\n                                              />\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DashBoard);\r\n\r\n\r\n",["474","475"],"D:\\Simply Web\\src\\constant.js",[],["476","477"],"D:\\Simply Web\\src\\Services\\UserLoginService.js",[],"D:\\Simply Web\\src\\Services\\APICallService.js",[],"D:\\Simply Web\\src\\Components\\Learn\\courseOverview.js",["478","479"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Card, Row, Spin, List, Progress} from 'antd';\r\nimport {\r\n    LockTwoTone,\r\n    UnlockTwoTone,\r\n    CheckCircleTwoTone,\r\n    RightCircleTwoTone,\r\n    ReloadOutlined,\r\n    CloudSyncOutlined\r\n} from '@ant-design/icons'\r\nimport {withRouter} from 'react-router';\r\nimport {getCourses} from \"../../Services/learningService\";\r\n\r\nconst {Meta} = Card;\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass OverviewCourse extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseList: [],\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    getCourseList = async () => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        var user = null; //get userId from localStorage\r\n        try {\r\n            var list = await getCourses(user);\r\n            console.log(list);\r\n            this.setState({\r\n                courseList: list\r\n            })\r\n        } catch (e) {\r\n\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    goToCourse =(course) =>{\r\n        console.log(course)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getCourseList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"Courses\"/>\r\n                    <div className=\"site-card-wrapper\">\r\n                        <Row style={{marginBottom: '40px'}}>\r\n                            <Col offset={20}>\r\n                                <Button onClick={this.getCourseList}><ReloadOutlined/> Refresh</Button>\r\n                                <Button disabled danger><CloudSyncOutlined/> Reset</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Spin spinning={this.state.loading} tip=\"Loading courses...\">\r\n                            <List\r\n                                grid={{gutter: 16, column: 3}}\r\n                                dataSource={this.state.courseList}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <Card\r\n                                            headStyle={item.status === 'locked' ? {backgroundColor: '#c7c7c7'} : {}}\r\n                                            bodyStyle={item.status === 'locked' ? {backgroundColor: '#ededed'} : {}}\r\n                                            extra={item.status === 'locked' ? <LockTwoTone twoToneColor={'grey'}/> :\r\n                                                item.status === 'unlocked' ? <UnlockTwoTone/> :\r\n                                                    <CheckCircleTwoTone twoToneColor=\"#52c41a\"/>}\r\n                                            hoverable\r\n                                            // cover={<img alt=\"example\" style={{height:'150px'}} src=\"\" />}\r\n                                            title={<span>Level {item.level}: {item.courseName}</span>}\r\n                                        >\r\n                                            <Meta title={item.description} description=\"Your progress\"/>\r\n                                            <Progress percent={(100 / item.steps) * item.completed} size=\"small\"/>\r\n                                            <Col offset={20} style={{paddingTop: '15px'}}>\r\n                                                {item.status === \"locked\" ? '' : <Button onClick={()=>this.goToCourse(item)}><RightCircleTwoTone/></Button>}\r\n                                            </Col>\r\n                                            {item.status === 'locked' ? \"Complete previous to unlock this level!\" : \"\"}\r\n                                        </Card>\r\n                                    </List.Item>\r\n                                )}\r\n\r\n                            />\r\n                        </Spin>\r\n                    </div>\r\n                    ,\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(OverviewCourse);\r\n\r\n\r\n","D:\\Simply Web\\src\\Services\\learningService.js",["480"],"import {API} from \"./APICallService\";\r\nimport {courses,courseDetails} from '../constant'\r\n\r\nexport async function getCourses(user){\r\n\r\n    // const endpoint = '';\r\n    // let params = {\r\n    //     userId:user.userId\r\n    // }\r\n    // let api = await API();\r\n    // var response = await api.get(endpoint,user);\r\n    return courses;\r\n}\r\n\r\nexport async function getCourseDetails(cid){\r\n\r\n    var course = ''\r\n    for(let i =0;i<courseDetails.length;i++){\r\n        if(courseDetails[i].courseId===cid){\r\n            course = courseDetails[i]\r\n            break;\r\n        }\r\n    }\r\n\r\n    // const endpoint = '';\r\n    // let api = await API();\r\n    // var response = await api.get(endpoint,data);\r\n    return course;\r\n}\r\n","D:\\Simply Web\\src\\Components\\Practice\\practiceOverview.js",["481","482"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Card, Row, Spin, List, Progress} from 'antd';\r\nimport {\r\n    LockTwoTone,\r\n    UnlockTwoTone,\r\n    CheckCircleTwoTone,\r\n    RightCircleTwoTone,\r\n    ReloadOutlined,\r\n    CloudSyncOutlined\r\n} from '@ant-design/icons'\r\nimport {withRouter} from 'react-router';\r\nimport {getCourses} from \"../../Services/learningService\";\r\n\r\nconst {Meta} = Card;\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass OverviewPractice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseList: [],\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    getCourseList = async () => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        var user = null; //get userId from localStorage\r\n        try {\r\n            var list = await getCourses(user);\r\n            console.log(list);\r\n            this.setState({\r\n                courseList: list\r\n            })\r\n        } catch (e) {\r\n\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    goToCourse =(course) =>{\r\n        console.log(course)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getCourseList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"Courses\"/>\r\n                    <Row style={{marginBottom: '40px'}}>\r\n                        <Col offset={22}>\r\n                            <Button onClick={this.getCourseList}><ReloadOutlined/> Refresh</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"site-card-wrapper\">\r\n                        <Spin spinning={this.state.loading} tip=\"Loading courses...\">\r\n                            <List\r\n                                grid={{gutter: 16, column: 3}}\r\n                                dataSource={this.state.courseList}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <Card\r\n                                            headStyle={item.status === 'locked' ? {backgroundColor: '#c7c7c7'} : {}}\r\n                                            bodyStyle={item.status === 'locked' ? {backgroundColor: '#ededed'} : {}}\r\n                                            extra={item.status === 'locked' ? <LockTwoTone twoToneColor={'grey'}/> :\r\n                                                item.status === 'unlocked' ? <UnlockTwoTone/> :\r\n                                                    <CheckCircleTwoTone twoToneColor=\"#52c41a\"/>}\r\n                                            hoverable\r\n                                            // cover={<img alt=\"example\" style={{height:'150px'}} src=\"\" />}\r\n                                            title={<span>Level {item.level}: {item.courseName}</span>}\r\n                                        >\r\n                                            <Meta title={item.description} description=\"Your progress\"/>\r\n                                            <Progress percent={(100 / item.steps) * item.completed} size=\"small\"/>\r\n                                            <Col offset={20} style={{paddingTop: '15px'}}>\r\n                                                {item.status === \"locked\" ? '' : <Button onClick={()=>this.goToCourse(item)}><RightCircleTwoTone/></Button>}\r\n                                            </Col>\r\n                                            {item.status === 'locked' ? \"Complete previous to unlock this level!\" : \"\"}\r\n                                        </Card>\r\n                                    </List.Item>\r\n                                )}\r\n\r\n                            />\r\n                        </Spin>\r\n                    </div>\r\n                    ,\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(OverviewPractice);\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\DashBoard\\Dashboard.js",["483","484","485","486","487","488","489","490","491","492"],"D:\\Simply Web\\src\\Components\\Learn\\CourseOverview.js",["493","494"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Card, Row, Spin, List, Progress} from 'antd';\r\nimport {\r\n    LockTwoTone,\r\n    UnlockTwoTone,\r\n    CheckCircleTwoTone,\r\n    RightCircleTwoTone,\r\n    ReloadOutlined,\r\n    CloudSyncOutlined\r\n} from '@ant-design/icons'\r\nimport {withRouter} from 'react-router';\r\nimport {getCourses} from \"../../Services/learningService\";\r\nimport CourseDetails from \"./CourseDetails\";\r\n\r\nconst {Meta} = Card;\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass OverviewCourse extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseList: [],\r\n            loading: false,\r\n            isCourseSelected:false\r\n        };\r\n    }\r\n\r\n    getCourseList = async () => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        var user = null; //get userId from localStorage\r\n        try {\r\n            var list = await getCourses(user);\r\n            this.setState({\r\n                courseList: list\r\n            })\r\n        } catch (e) {\r\n\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    goToCourse =(course) =>{\r\n        this.setState({\r\n            isCourseSelected:true\r\n        })\r\n        var c = course.courseName.split(\" \").join(\"\")\r\n        this.props.history.push({\r\n            pathname: `/courses/${c}`,\r\n            state: course\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getCourseList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"Modules\"/>\r\n                    <div className=\"site-card-wrapper\">\r\n                        <Row style={{marginBottom: '40px'}}>\r\n                            <Col offset={20}>\r\n                                <Button onClick={this.getCourseList}><ReloadOutlined/> Refresh</Button>\r\n                                <Button disabled danger><CloudSyncOutlined/> Reset</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Spin spinning={this.state.loading} tip=\"Loading courses...\">\r\n                            <List\r\n                                grid={{gutter: 16, column: 3}}\r\n                                dataSource={this.state.courseList}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <Card\r\n                                            headStyle={item.status === 'locked' ? {backgroundColor: '#c7c7c7'} : {}}\r\n                                            bodyStyle={item.status === 'locked' ? {backgroundColor: '#ededed'} : {}}\r\n                                            extra={item.status === 'locked' ? <LockTwoTone twoToneColor={'grey'}/> :\r\n                                                item.status === 'unlocked' ? <UnlockTwoTone/> :\r\n                                                    <CheckCircleTwoTone twoToneColor=\"#52c41a\"/>}\r\n                                            hoverable\r\n                                            onClick={()=>this.goToCourse(item)}\r\n                                            // cover={<img alt=\"example\" style={{height:'150px'}} src=\"\" />}\r\n                                            title={<span>Level {item.level}: {item.courseName}</span>}\r\n                                        >\r\n                                            <Meta title={item.description} description=\"Your progress\"/>\r\n                                            <Progress percent={(100 / item.questions) * item.completed} size=\"small\"/>\r\n                                            <Col offset={20} style={{paddingTop: '15px'}}>\r\n                                                {item.status === \"locked\" ? '' : <Button onClick={()=>this.goToCourse(item)}><RightCircleTwoTone/></Button>}\r\n                                            </Col>\r\n                                            {item.status === 'locked' ? \"Complete previous to unlock this level!\" : \"\"}\r\n                                        </Card>\r\n                                    </List.Item>\r\n                                )}\r\n\r\n                            />\r\n                        </Spin>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(OverviewCourse);\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\Practice\\PracticeOverview.js",["495","496"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Card, Row, Spin, List, Progress, notification} from 'antd';\r\nimport {\r\n    LockTwoTone,\r\n    UnlockTwoTone,\r\n    CheckCircleTwoTone,\r\n    RightCircleTwoTone,\r\n    ReloadOutlined,\r\n    CloudSyncOutlined\r\n} from '@ant-design/icons'\r\nimport {withRouter} from 'react-router';\r\nimport {getCourses} from \"../../Services/learningService\";\r\nimport {getQuestionByLevel} from \"../../Services/PracticeService\";\r\n\r\nconst {Meta} = Card;\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass OverviewPractice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseList: [],\r\n            loading: false,\r\n            queByLevel:''\r\n        };\r\n    }\r\n\r\n    getCourseList = async () => {\r\nconsole.log(\"works\")\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        var user = null; //get userId from localStorage\r\n        try {\r\n            var list = await getCourses(user);\r\n            console.log(list);\r\n            this.setState({\r\n                courseList: list\r\n            })\r\n        } catch (e) {\r\n\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    getQuestionLevel = async(level) =>{\r\n        try{\r\n        var obj = await getQuestionByLevel();\r\n        var le =''\r\n        this.setState({\r\n            queByLevel:obj\r\n        })\r\n           for(let i=0;i<obj.levelCount;i++){\r\n               if(level===obj.levels[i].level){\r\n                   le = obj.levels[i];\r\n                   break;\r\n               }\r\n           }\r\n            return le;\r\n        }catch (e) {\r\n            notification.error({message:\"Error!\"})\r\n        }\r\n\r\n    }\r\n    viewQuestions =async(quiz) =>{\r\n         var level = await this.getQuestionLevel(quiz.level);\r\n        var name = quiz.courseName.split(\" \").join(\"\")\r\n        this.props.history.push({\r\n            pathname: `/practice/${name}`,\r\n            state: quiz,\r\n            QByLevel : level\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getCourseList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"Practice\"/>\r\n                    <Row style={{marginBottom: '40px'}}>\r\n                        <Col offset={22}>\r\n                            <Button onClick={this.getCourseList}><ReloadOutlined/> Refresh</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"site-card-wrapper\">\r\n                        <Spin spinning={this.state.loading} tip=\"Loading courses...\">\r\n                            <List\r\n                                grid={{gutter: 16, column: 3}}\r\n                                dataSource={this.state.courseList}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <Card\r\n                                            headStyle={item.status === 'locked' ? {backgroundColor: '#c7c7c7'} : {}}\r\n                                            bodyStyle={item.status === 'locked' ? {backgroundColor: '#ededed'} : {}}\r\n                                            extra={item.status === 'locked' ? <LockTwoTone twoToneColor={'grey'}/> :\r\n                                                item.status === 'unlocked' ? <UnlockTwoTone/> :\r\n                                                    <CheckCircleTwoTone twoToneColor=\"#52c41a\"/>}\r\n                                            hoverable\r\n                                            onClick={()=>this.viewQuestions(item)}\r\n                                            // cover={<img alt=\"example\" style={{height:'150px'}} src=\"\" />}\r\n                                            title={<span>Practice Level {item.level}: {item.courseName}</span>}\r\n                                        >\r\n                                            <Meta title={item.description} description=\"Your progress\"/>\r\n                                            <Progress percent={(100 / item.questions) * item.completed} size=\"small\"/>\r\n                                            <Col offset={20} style={{paddingTop: '15px'}}>\r\n                                                {item.status === \"locked\" ? '' : <Button onClick={()=>this.viewQuestions(item)}><RightCircleTwoTone/></Button>}\r\n                                            </Col>\r\n                                            {item.status === 'locked' ? \"Complete previous to unlock this level!\" : \"\"}\r\n                                        </Card>\r\n                                    </List.Item>\r\n                                )}\r\n\r\n                            />\r\n                        </Spin>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(OverviewPractice);\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\Dashboard\\Dashboard.js",["497","498","499","500","501","502","503","504","505","506"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Select, Form, Card, Space, Row, Divider, List, Carousel, Image} from 'antd';\r\nimport {MinusCircleOutlined, BulbOutlined} from '@ant-design/icons';\r\nimport {withRouter} from 'react-router';\r\n\r\n\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: \"\",\r\n            practicalList: \"\",\r\n            competitionList: '',\r\n            todaysTip: ''\r\n        };\r\n    }\r\n\r\n    setComponents =()=> {\r\n        var user = JSON.parse(localStorage.getItem('usersession'));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setComponents()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"\"/>\r\n                    <Carousel autoplay effect=\"fade\">\r\n                        <div>\r\n                            <h3 style={contentStyle}><img style={{height: '260px', width: '100%'}}\r\n                                                          src={process.env.PUBLIC_URL + '/Images/Learn-1.jpeg'}/>\r\n                            </h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3 style={contentStyle}>2</h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3 style={contentStyle}>3</h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3 style={contentStyle}>4</h3>\r\n                        </div>\r\n                    </Carousel>\r\n                    <Divider> <b><BulbOutlined/> Today's Tip</b></Divider>\r\n                    <div><span style={{fontSize: '18px', fontWeight: '12px'}}>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                        consequat.\r\n                        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n                        pariatur.\r\n                        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\r\n                        id est laborum.\"</span>\r\n                    </div>\r\n                    <Divider orientation=\"left\"> <b>Get Your Skills Certified</b></Divider>\r\n                    <Row gutter={16}>\r\n                        <Col span={8}>\r\n                            <Card title={<b><span>Learn</span></b>} extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.courses}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.productName}\r\n                                              />\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Card title={<b><span>Practice</span></b>} extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.practicalList}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.pacticalName}\r\n                                              />\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Card title={<b><span>Compete</span></b>} extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.competitionList}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.competitionName}\r\n                                              />\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DashBoard);\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\Learn\\CourseDetails.js",["507","508","509","510","511","512","513"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Button, Col, PageHeader, Card, Row, Spin, List, Progress, notification} from 'antd';\r\nimport {LeftCircleOutlined, ExperimentOutlined } from '@ant-design/icons'\r\nimport {withRouter} from 'react-router';\r\nimport {getCourseDetails, getCourses} from \"../../Services/learningService\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nclass CourseDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseList: [],\r\n            loading: false,\r\n            course:'',\r\n            selectedCourse:''\r\n        };\r\n    }\r\n\r\n    goToPrevious = () =>{\r\n        this.props.history.push({\r\n            pathname:'/courses/overview',\r\n            state:''\r\n        })\r\n    }\r\n    getCourseList = async () => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        var user = null; //get userId from localStorage\r\n        try {\r\n            var list = await getCourses(user);\r\n            this.setState({\r\n                courseList: list\r\n            })\r\n        } catch (e) {\r\n\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    getCourseDetails = async(selectedCourse) => {\r\n        try{\r\n            var course = await getCourseDetails(selectedCourse.courseId);\r\n            if(!course){\r\n                notification.error({message:\"Error!\",description:\"Something went wrong please try again!\"})\r\n            }else {\r\n                this.setState({\r\n                    selectedCourse:course\r\n                })\r\n            }\r\n\r\n        }catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var course = this.props.location.state\r\n        this.setState({course:course})\r\n        await this.getCourseDetails(course);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title={this.state.course.courseName}/>\r\n                    <div className=\"site-card-wrapper\">\r\n                        <div className=\"content\">\r\n                            {\r\n                                ReactHtmlParser(this.state.selectedCourse.description)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <Row style={{marginBottom: '40px'}}>\r\n                        <Col offset={20}>\r\n                            <Button onClick={this.goToPrevious}><LeftCircleOutlined /> Back</Button>\r\n                            <Button disabled danger><ExperimentOutlined />Practice</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(CourseDetails);\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\Practice\\QuestionsList.js",["514","515","516","517","518","519","520","521","522"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Card, Row, Spin, List, Progress, notification,Badge} from 'antd';\r\nimport {\r\n    LockTwoTone,\r\n    UnlockTwoTone,\r\n    CheckCircleTwoTone,\r\n    RightCircleTwoTone,\r\n    ReloadOutlined,\r\n    CloudSyncOutlined\r\n} from '@ant-design/icons'\r\nimport {withRouter} from 'react-router';\r\nimport {getCourses} from \"../../Services/learningService\";\r\nimport {getQuestionList} from \"../../Services/PracticeService\";\r\n\r\nconst {Meta} = Card;\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass QuestionList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            course: '',\r\n            quizList: [],\r\n            loading: false,\r\n            queByLevel:''\r\n        };\r\n    }\r\n\r\n    getQuizList = async (state) => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        var user = null; //get userId from localStorage\r\n        try {\r\n            var list = await getQuestionList(user, state.quizId);\r\n            this.setState({\r\n                quizList: list\r\n            })\r\n        } catch (e) {\r\n\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    goToQuestion = (question) => {\r\n        var qL = this.state.queByLevel.questions[0];\r\n        var questionName = question.title.split(\" \").join(\"\");\r\n        console.log(\"ql\",qL);\r\n        this.props.history.push({\r\n            pathname: `/question/${questionName}`,\r\n            state: question,\r\n            course:this.state.course,\r\n            ques:qL\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        var state = this.props.location.state;\r\n        if (!state) {\r\n            this.props.history.push({\r\n                pathname:'/practice/overview',\r\n            });\r\n        } else {\r\n            await this.getQuizList(state);\r\n        }\r\n        var qLevels = this.props.location.QByLevel;\r\n        console.log(\"C\", state);\r\n        this.setState({\r\n            course: state,\r\n            queByLevel:qLevels\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\"\r\n                                title={this.state.course.courseName + \" - \" + \"Practice Questions\"}/>\r\n                    <Row style={{marginBottom: '40px'}}>\r\n                        <Col offset={22}>\r\n                            <Button\r\n                                onClick={() => this.getQuizList(this.state.course)}><ReloadOutlined/> Refresh</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"site-card-wrapper\">\r\n                        <Spin spinning={this.state.loading} tip=\"Loading courses...\">\r\n                            <List\r\n                                grid={{gutter: 16, column: 3}}\r\n                                dataSource={this.state.quizList.questionList}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <Badge.Ribbon\r\n                                            color={item.attempts>0?(item.status===\"completed\"?\"#f2c53d\":\"#3d99f5\"):'#29e34b'}\r\n                                            text={item.attempts>0?(item.status===\"completed\"?\"Completed\":\"Attempted\"):\"New\"}>\r\n                                        <Card\r\n                                            headStyle={item.difficulty === \"Easy\" ? {backgroundColor: '#c8ffb8'} : item.difficulty === \"Medium\"?\r\n                                                {backgroundColor: '#faffb8'}:{backgroundColor: '#ffdaad'}}\r\n                                            hoverable\r\n                                            title={<span style={{fontSize:'13px'}}>Difficulty : {item.difficulty}</span>}\r\n                                            onClick={() => this.goToQuestion(item)}\r\n                                        >\r\n                                            <Meta title={item.title} description={\"Marks: \"}/>\r\n                                            {/*<Progress percent={(100 / item.questions) * item.completed} size=\"small\"/>*/}\r\n                                            <Col offset={20} style={{paddingTop: '15px'}}>\r\n                                                    <Button onClick={() => this.goToQuestion(item)}><RightCircleTwoTone/></Button>\r\n                                            </Col>\r\n                                            {item.status === 'locked' ? \"Complete previous to unlock this level!\" : \"\"}\r\n                                        </Card>\r\n                                        </Badge.Ribbon>\r\n                                    </List.Item>\r\n                                )}\r\n\r\n                            />\r\n                        </Spin>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(QuestionList);\r\n\r\n\r\n","D:\\Simply Web\\src\\Services\\PracticeService.js",["523"],"import {API} from \"./APICallService\";\r\nimport {quizzes} from \"../constant\";\r\n\r\nexport async function getQuestionList(user,quizID) {\r\n\r\n    var questions = [];\r\n    for (let i = 0; i < quizzes.length; i++) {\r\n    if(quizzes[i].quizId===quizID){\r\n        return quizzes[i]\r\n    }\r\n    }\r\n    //  const endpoint = '';\r\n    //  var data = {\r\n    // userId:user.userId,\r\n    //     quizId:quizID\r\n    //  }\r\n    //  let api = await API();\r\n    //  var response = await api.get(endpoint,data);\r\n    // return response\r\n}\r\n\r\nexport async function getQuestionById (qId){\r\n    const endpoint = `/questions/${qId}`;\r\n    let api = await API();\r\n    var response = await api.get(endpoint);\r\n    return response;\r\n}\r\n\r\nexport async function getQuestionByLevel (){\r\n    const endpoint = `/questions/bylevel`;\r\n    let api = await API();\r\n    var response = await api.get(endpoint);\r\n    return response;\r\n}\r\n","D:\\Simply Web\\src\\Components\\Documentation\\GettingStart.js",["524","525","526","527"],"import React from 'react';\r\nimport {PageHeader, Card, Anchor, Col, Row, Space} from 'antd';\r\nimport {MinusCircleOutlined, BulbOutlined} from '@ant-design/icons';\r\nimport {withRouter} from 'react-router';\r\n\r\nconst {Link} = Anchor;\r\n\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass GettingStart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n\r\n                    <PageHeader className=\"site-page-header\" title=\"Getting start with Simply\"/>\r\n                    <Row>\r\n                        <Col span={20}>\r\n<div id=\"getting_start\">\r\n                            <p>This page is an overview of the Simply documentation and related resources.\r\n                                Simply is a JavaScript library for building user interfaces. Learn what Simply is all\r\n                                about on our homepage or in the tutorial.</p>\r\n</div>\r\n                            <br/> <br/>\r\n                            <div id=\"Try_Simply\">\r\n                                <h3> Try Simply</h3>\r\n                                Simply has been designed from the start for gradual adoption, and you can use as little\r\n                                or as much Simply as you need. Whether you want to get a taste of Simply, add some\r\n                                interactivity to a simple HTML page, or start a complex Simply-powered app, the links in\r\n                                this section will help you get started.\r\n                            </div>\r\n                            <br/>\r\n                            <div id='Online_Playgrounds'>\r\n                                <h3> Online Playgrounds</h3>\r\n                                If you’re interested in playing around with Simply, you can use an online code\r\n                                playground. Try a Hello World template on CodePen, CodeSandbox, or Stackblitz.\r\n\r\n\r\n                                If you prefer to use your own text editor, you can also download this HTML file, edit\r\n                                it, and open it from the local filesystem in your browser. It does a slow runtime code\r\n                                transformation, so we’d only recommend using this for simple demos.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Add_Simply_Website\">\r\n                                <h3> Add Simply to a Website</h3>\r\n                                You can add Simply to an HTML page in one minute. You can then either gradually expand\r\n                                its presence, or keep it contained to a few dynamic widgets.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"New_Simply_App\">\r\n                                <h3> Create a New Simply App</h3>\r\n                                When starting a Simply project, a simple HTML page with script tags might still be the\r\n                                best option. It only takes a minute to set up!\r\n\r\n                                As your application grows, you might want to consider a more integrated setup. There are\r\n                                several JavaScript toolchains we recommend for larger applications. Each of them can\r\n                                work with little to no configuration and lets you take full advantage of the rich Simply\r\n                                ecosystem. Learn how.\r\n\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Learn_Simply\">\r\n                                <h3> Learn Simply </h3>\r\n                                People come to Simply from different backgrounds and with different learning styles.\r\n                                Whether you prefer a more theoretical or a practical approach, we hope you’ll find this\r\n                                section helpful.\r\n\r\n                                If you prefer to learn by doing, start with our practical tutorial.\r\n                                If you prefer to learn concepts step by step, start with our guide to main concepts.\r\n                                Like any unfamiliar technology, Simply does have a learning curve. With practice and some\r\n                                patience, you will get the hang of it.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"First_Examples\">\r\n                                <h3> First Examples</h3>\r\n                                The Simply homepage contains a few small Simply examples with a live editor. Even if you\r\n                                don’t know anything about Simply yet, try changing their code and see how it affects the\r\n                                result.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Simply_for_Beginners\">\r\n\r\n                                <h3>Simply for Beginners</h3>\r\n                                If you feel that the Simply documentation goes at a faster pace than you’re comfortable\r\n                                with, check out this overview of Simply by Tania Rascia. It introduces the most important\r\n                                Simply concepts in a detailed, beginner-friendly way. Once you’re done, give the\r\n                                documentation another try!\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Simply_for_Designers\">\r\n                                <h3>Simply for Designers</h3>\r\n                                If you’re coming from a design background, these resources are a great place to get\r\n                                started.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"JavaScript_Resources\">\r\n                                <h3>JavaScript Resources</h3>\r\n                                The Simply documentation assumes some familiarity with programming in the JavaScript\r\n                                language. You don’t have to be an expert, but it’s harder to learn both Simply and\r\n                                JavaScript at the same time.\r\n                            </div>\r\n                            <br/>\r\n                            <p> We recommend going through this JavaScript overview to check your knowledge level.\r\n                                It will take you between 30 minutes and an hour but you will feel more confident\r\n                                learning Simply.</p>\r\n                        </Col>\r\n                        <Col span={3} offset={1}>\r\n                            <Anchor>\r\n                                <Link href=\"#getting_start\" title=\"Getting Start\"/>\r\n                                <Link href=\"#Try_Simply\" title=\"Try Simply\"/>\r\n                                <Link href=\"#Online_Playgrounds\" title=\"Online Playgrounds\"/>\r\n                                <Link href=\"#Simply_for_Beginners\" title=\"Simply for Beginners\"/>\r\n                                <Link href=\"#Simply_for_Designers\" title=\"Simply for Designers\"/>\r\n                                <Link href=\"#JavaScript_Resources\" title=\"JavaScript Resources\"/>\r\n                            </Anchor>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(GettingStart);\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\Documentation\\Documentation.js",["528","529","530","531"],"import React from 'react';\r\nimport {PageHeader, Card, Anchor, Col, Row, Space} from 'antd';\r\nimport {MinusCircleOutlined, BulbOutlined} from '@ant-design/icons';\r\nimport {withRouter} from 'react-router';\r\n\r\nconst {Link} = Anchor;\r\n\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass Documentation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n\r\n                    <PageHeader className=\"site-page-header\" title=\"Documentation\"/>\r\n                    <Row>\r\n                        <Col span={20}>\r\n                            <div id=\"how_to\">\r\n                                <h3>How to Read This Guide</h3>\r\n                                <p>This is the first chapter in a step-by-step guide about main React concepts. You can find a list of all its chapters in the navigation sidebar. If you’re reading this from a mobile device, you can access the navigation by pressing the button in the bottom right corner of your screen.\r\n\r\n                                    Every chapter in this guide builds on the knowledge introduced in earlier chapters. You can learn most of React by reading the “Main Concepts” guide chapters in the order they appear in the sidebar. For example, “Introducing JSX” is the next chapter after this one.</p>\r\n                            </div>\r\n                            <br/> <br/>\r\n                            <div id=\"Try_Simply\">\r\n                                <h3> Try Simply</h3>\r\n                                Simply has been designed from the start for gradual adoption, and you can use as little\r\n                                or as much Simply as you need. Whether you want to get a taste of Simply, add some\r\n                                interactivity to a simple HTML page, or start a complex Simply-powered app, the links in\r\n                                this section will help you get started.\r\n                            </div>\r\n                            <br/>\r\n                            <div id='Online_Playgrounds'>\r\n                                <h3> Online Playgrounds</h3>\r\n                                If you’re interested in playing around with Simply, you can use an online code\r\n                                playground. Try a Hello World template on CodePen, CodeSandbox, or Stackblitz.\r\n\r\n\r\n                                If you prefer to use your own text editor, you can also download this HTML file, edit\r\n                                it, and open it from the local filesystem in your browser. It does a slow runtime code\r\n                                transformation, so we’d only recommend using this for simple demos.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Add_Simply_Website\">\r\n                                <h3> Add Simply to a Website</h3>\r\n                                You can add Simply to an HTML page in one minute. You can then either gradually expand\r\n                                its presence, or keep it contained to a few dynamic widgets.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"New_Simply_App\">\r\n                                <h3> Create a New Simply App</h3>\r\n                                When starting a Simply project, a simple HTML page with script tags might still be the\r\n                                best option. It only takes a minute to set up!\r\n\r\n                                As your application grows, you might want to consider a more integrated setup. There are\r\n                                several JavaScript toolchains we recommend for larger applications. Each of them can\r\n                                work with little to no configuration and lets you take full advantage of the rich Simply\r\n                                ecosystem. Learn how.\r\n\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Learn_Simply\">\r\n                                <h3> Learn Simply </h3>\r\n                                People come to Simply from different backgrounds and with different learning styles.\r\n                                Whether you prefer a more theoretical or a practical approach, we hope you’ll find this\r\n                                section helpful.\r\n\r\n                                If you prefer to learn by doing, start with our practical tutorial.\r\n                                If you prefer to learn concepts step by step, start with our guide to main concepts.\r\n                                Like any unfamiliar technology, Simply does have a learning curve. With practice and some\r\n                                patience, you will get the hang of it.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"First_Examples\">\r\n                                <h3> First Examples</h3>\r\n                                The Simply homepage contains a few small Simply examples with a live editor. Even if you\r\n                                don’t know anything about Simply yet, try changing their code and see how it affects the\r\n                                result.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Simply_for_Beginners\">\r\n\r\n                                <h3>Simply for Beginners</h3>\r\n                                If you feel that the Simply documentation goes at a faster pace than you’re comfortable\r\n                                with, check out this overview of Simply by Tania Rascia. It introduces the most important\r\n                                Simply concepts in a detailed, beginner-friendly way. Once you’re done, give the\r\n                                documentation another try!\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Simply_for_Designers\">\r\n                                <h3>Simply for Designers</h3>\r\n                                If you’re coming from a design background, these resources are a great place to get\r\n                                started.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"JavaScript_Resources\">\r\n                                <h3>JavaScript Resources</h3>\r\n                                The Simply documentation assumes some familiarity with programming in the JavaScript\r\n                                language. You don’t have to be an expert, but it’s harder to learn both Simply and\r\n                                JavaScript at the same time.\r\n                            </div>\r\n                            <br/>\r\n                            <p> We recommend going through this JavaScript overview to check your knowledge level.\r\n                                It will take you between 30 minutes and an hour but you will feel more confident\r\n                                learning Simply.</p>\r\n                        </Col>\r\n                        <Col span={3} offset={1}>\r\n                            <Anchor>\r\n                                <Link href=\"#how_to\" title=\"How to..\"/>\r\n                                <Link href=\"#Try_Simply\" title=\"Try Simply\"/>\r\n                                <Link href=\"#Online_Playgrounds\" title=\"Online Playgrounds\"/>\r\n                                <Link href=\"#Simply_for_Beginners\" title=\"Simply for Beginners\"/>\r\n                                <Link href=\"#Simply_for_Designers\" title=\"Simply for Designers\"/>\r\n                                <Link href=\"#JavaScript_Resources\" title=\"JavaScript Resources\"/>\r\n                            </Anchor>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Documentation);\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\Documentation\\DevelopersGuide.js",["532","533","534","535"],"import React from 'react';\r\nimport {PageHeader, Card, Anchor, Col, Row, Space} from 'antd';\r\nimport {MinusCircleOutlined, BulbOutlined} from '@ant-design/icons';\r\nimport {withRouter} from 'react-router';\r\n\r\nconst {Link} = Anchor;\r\n\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass DevelopGuide extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n\r\n                    <PageHeader className=\"site-page-header\" title=\"Developers Guide\"/>\r\n                    <Row>\r\n                        <Col span={20}>\r\n                            <div id=\"how_to\">\r\n                                <h3>How to Read This Guide</h3>\r\n                                <p>This is the first chapter in a step-by-step guide about main React concepts. You can find a list of all its chapters in the navigation sidebar. If you’re reading this from a mobile device, you can access the navigation by pressing the button in the bottom right corner of your screen.\r\n\r\n                                    Every chapter in this guide builds on the knowledge introduced in earlier chapters. You can learn most of React by reading the “Main Concepts” guide chapters in the order they appear in the sidebar. For example, “Introducing JSX” is the next chapter after this one.</p>\r\n                            </div>\r\n                            <br/> <br/>\r\n                            <div id=\"Try_Simply\">\r\n                                <h3> Try Simply</h3>\r\n                                Simply has been designed from the start for gradual adoption, and you can use as little\r\n                                or as much Simply as you need. Whether you want to get a taste of Simply, add some\r\n                                interactivity to a simple HTML page, or start a complex Simply-powered app, the links in\r\n                                this section will help you get started.\r\n                            </div>\r\n                            <br/>\r\n                            <div id='Online_Playgrounds'>\r\n                                <h3> Online Playgrounds</h3>\r\n                                If you’re interested in playing around with Simply, you can use an online code\r\n                                playground. Try a Hello World template on CodePen, CodeSandbox, or Stackblitz.\r\n\r\n\r\n                                If you prefer to use your own text editor, you can also download this HTML file, edit\r\n                                it, and open it from the local filesystem in your browser. It does a slow runtime code\r\n                                transformation, so we’d only recommend using this for simple demos.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Add_Simply_Website\">\r\n                                <h3> Add Simply to a Website</h3>\r\n                                You can add Simply to an HTML page in one minute. You can then either gradually expand\r\n                                its presence, or keep it contained to a few dynamic widgets.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"New_Simply_App\">\r\n                                <h3> Create a New Simply App</h3>\r\n                                When starting a Simply project, a simple HTML page with script tags might still be the\r\n                                best option. It only takes a minute to set up!\r\n\r\n                                As your application grows, you might want to consider a more integrated setup. There are\r\n                                several JavaScript toolchains we recommend for larger applications. Each of them can\r\n                                work with little to no configuration and lets you take full advantage of the rich Simply\r\n                                ecosystem. Learn how.\r\n\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Learn_Simply\">\r\n                                <h3> Learn Simply </h3>\r\n                                People come to Simply from different backgrounds and with different learning styles.\r\n                                Whether you prefer a more theoretical or a practical approach, we hope you’ll find this\r\n                                section helpful.\r\n\r\n                                If you prefer to learn by doing, start with our practical tutorial.\r\n                                If you prefer to learn concepts step by step, start with our guide to main concepts.\r\n                                Like any unfamiliar technology, Simply does have a learning curve. With practice and some\r\n                                patience, you will get the hang of it.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"First_Examples\">\r\n                                <h3> First Examples</h3>\r\n                                The Simply homepage contains a few small Simply examples with a live editor. Even if you\r\n                                don’t know anything about Simply yet, try changing their code and see how it affects the\r\n                                result.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Simply_for_Beginners\">\r\n\r\n                                <h3>Simply for Beginners</h3>\r\n                                If you feel that the Simply documentation goes at a faster pace than you’re comfortable\r\n                                with, check out this overview of Simply by Tania Rascia. It introduces the most important\r\n                                Simply concepts in a detailed, beginner-friendly way. Once you’re done, give the\r\n                                documentation another try!\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"Simply_for_Designers\">\r\n                                <h3>Simply for Designers</h3>\r\n                                If you’re coming from a design background, these resources are a great place to get\r\n                                started.\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"JavaScript_Resources\">\r\n                                <h3>JavaScript Resources</h3>\r\n                                The Simply documentation assumes some familiarity with programming in the JavaScript\r\n                                language. You don’t have to be an expert, but it’s harder to learn both Simply and\r\n                                JavaScript at the same time.\r\n                            </div>\r\n                            <br/>\r\n                            <p> We recommend going through this JavaScript overview to check your knowledge level.\r\n                                It will take you between 30 minutes and an hour but you will feel more confident\r\n                                learning Simply.</p>\r\n                        </Col>\r\n                        <Col span={3} offset={1}>\r\n                            <Anchor>\r\n                                <Link href=\"#how_to\" title=\"How to..\"/>\r\n                                <Link href=\"#Try_Simply\" title=\"Try Simply\"/>\r\n                                <Link href=\"#Online_Playgrounds\" title=\"Online Playgrounds\"/>\r\n                                <Link href=\"#Simply_for_Beginners\" title=\"Simply for Beginners\"/>\r\n                                <Link href=\"#Simply_for_Designers\" title=\"Simply for Designers\"/>\r\n                                <Link href=\"#JavaScript_Resources\" title=\"JavaScript Resources\"/>\r\n                            </Anchor>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DevelopGuide);\r\n\r\n\r\n","D:\\Simply Web\\src\\Components\\Visualizer\\CodeVisualizer.js",[],"D:\\Simply Web\\src\\Components\\Practice\\SelectedQuestion.js",["536","537","538","539"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Card, Row, Tabs, Descriptions, notification, Spin, Result,Input} from 'antd';\r\nimport {ReloadOutlined} from '@ant-design/icons'\r\nimport {withRouter} from 'react-router';\r\nimport {getQuestionById} from \"../../Services/PracticeService\";\r\n\r\nconst {Meta} = Card;\r\nconst {TabPane} = Tabs;\r\nconst { TextArea } = Input;\r\n\r\nconst spinStyle = {\r\n    margin: \"20px 0\",\r\n    marginBottom: \"20px\",\r\n    padding: \"30px 50px\",\r\n    textAlign: \"center\",\r\n    borderRadius: \"4px\",\r\n}\r\n\r\nclass Question extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            course:'',\r\n            question: '',\r\n            qL:'',\r\n            selectedQuestion: '',\r\n            loading: false,\r\n            answerCode:''\r\n        };\r\n    }\r\n\r\n    getQuestion = async (ques) => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        console.log(ques)\r\n        try {\r\n            var question = await getQuestionById(ques._id);\r\n            console.log(\"returned\",question)\r\n            if (!question) {\r\n                notification.error({message: \"Error\", description: \"Something went wrong please try again!\"})\r\n                // this.props.history.goBack();\r\n            } else {\r\n                this.setState({\r\n                    selectedQuestion: question,\r\n                })\r\n            }\r\n\r\n        } catch (e) {\r\n            notification.error({message: \"Error\", description: e.cause ? e.cause : \"\"})\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    setCode = (e) =>{\r\n        this.setState({\r\n            answerCode:e.target.value\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (!this.props.location.state || !this.props.location.course || !this.props.location.ques) {\r\n            this.props.history.push({\r\n               pathname: '/practice/overview'\r\n            });\r\n        }\r\n\r\n        var state = this.props.location.state;\r\n        var course = this.props.location.course;\r\n        var question = this.props.location.ques;\r\n        this.setState({\r\n            question: state,\r\n            course: course,\r\n            qL:question\r\n        })\r\n\r\n        this.getQuestion(question);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title={<PageHeader className=\"site-page-header\"\r\n                                         title={this.state.question.title}/>}\r\n                      extra={\"Points: \" + \"10\"}>\r\n\r\n                    <div className=\"site-card-wrapper\">\r\n                        <Row>\r\n                            <Col span={18}>\r\n                                <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n                                    <TabPane tab=\"Problem\" key=\"1\">\r\n                                        <Spin spinning={this.state.loading}>\r\n                                            {!this.state.selectedQuestion?\r\n                                            (\r\n                                            <Result\r\n                                                status=\"500\"\r\n                                                title=\"500\"\r\n                                                subTitle=\"Sorry, something went wrong.\"\r\n                                                // extra={<Button type=\"primary\">Back Home</Button>}\r\n                                            />\r\n                                            )\r\n                                            :(\r\n                                            <div>\r\n                                                <h3>Description:</h3>\r\n                                                <div>\r\n                                                    {this.state.selectedQuestion.description}\r\n                                                    {/*\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do*/}\r\n                                                    {/*eiusmod*/}\r\n                                                    {/*tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim*/}\r\n                                                    {/*veniam,*/}\r\n                                                    {/*quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea*/}\r\n                                                    {/*commodo*/}\r\n                                                    {/*consequat. Duis aute irure dolor in reprehenderit in voluptate velit*/}\r\n                                                    {/*esse*/}\r\n                                                    {/*cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat*/}\r\n                                                    {/*cupidatat*/}\r\n                                                    {/*non proident, sunt in culpa qui officia deserunt mollit anim id est*/}\r\n                                                    {/*laborum.\"*/}\r\n                                                </div>\r\n                                                <br/>\r\n                                                <h3>Input Format:</h3>\r\n                                                <div>\r\n                                                    {/*\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do*/}\r\n                                                    {/*eiusmod*/}\r\n                                                    {/*tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim*/}\r\n                                                    {/*veniam,*/}\r\n                                                    {/*quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea*/}\r\n                                                    {/*commodo*/}\r\n                                                    {/*consequat. Duis aute irure dolor in reprehenderit in voluptate velit*/}\r\n                                                    {/*esse*/}\r\n                                                    {/*cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat*/}\r\n                                                    {/*cupidatat*/}\r\n                                                    {/*non proident, sunt in culpa qui officia deserunt mollit anim id est*/}\r\n                                                    {/*laborum.\"*/}\r\n                                                    {this.state.selectedQuestion.inputs}\r\n                                                </div>\r\n                                                <br/>\r\n                                                <h3>Expected Output:</h3>\r\n                                                <div>\r\n                                                    {/*\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do*/}\r\n                                                    {/*eiusmod*/}\r\n                                                    {/*tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim*/}\r\n                                                    {/*veniam,*/}\r\n                                                    {/*quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea*/}\r\n                                                    {/*commodo*/}\r\n                                                    {/*consequat. Duis aute irure dolor in reprehenderit in voluptate velit*/}\r\n                                                    {/*esse*/}\r\n                                                    {/*cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat*/}\r\n                                                    {/*cupidatat*/}\r\n                                                    {/*non proident, sunt in culpa qui officia deserunt mollit anim id est*/}\r\n                                                    {/*laborum.\"*/}\r\n                                                    {this.state.selectedQuestion.outputs}\r\n                                                </div><br/><br/>\r\n                                                <h3>Code here:</h3>\r\n                                                <TextArea rows={10} showCount\r\n                                                          value={this.state.answerCode}\r\n                                                          onChange={this.setCode}/>\r\n                                                {this.state.answerCode}\r\n                                                <br/>\r\n                                                <Row>\r\n                                                    <Col offset={18}>\r\n                                                    <Button><b>Run Code</b></Button>\r\n                                                    </Col>\r\n                                                    <Col >\r\n                                                    <Button style={{background:'#ffba59'}}><b>Submit Code</b></Button>\r\n                                                    </Col>\r\n\r\n                                                </Row>\r\n                                                <br/><br/>\r\n                                                <div className=\"result\">\r\n                                                    <Result\r\n                                                        status=\"success\"\r\n                                                        title=\"Test cases Passed!\"\r\n                                                    />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            )}\r\n                                        </Spin>\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Visualizer\" key=\"3\">\r\n                                        visualize your code\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Submissions\" key=\"2\" disabled>\r\n                                        No submissions\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                            </Col>\r\n                            <Col offset={1} span={5}>\r\n                                <Card>\r\n                                    <Descriptions title={this.state.question.title} size={'small'} column={1}>\r\n                                        <Descriptions.Item label=\"Level\">Easy</Descriptions.Item><br/>\r\n                                        <Descriptions.Item label=\"Category\">{this.state.course.courseName}</Descriptions.Item><br/>\r\n                                        <Descriptions.Item label=\"Difficulty\"> {this.state.question.difficulty}</Descriptions.Item><br/>\r\n                                        <Descriptions.Item label=\"Points\">10</Descriptions.Item><br/>\r\n                                    </Descriptions>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Question);\r\n\r\n\r\n","D:\\sanctum\\src\\index.js",["540","541"],"D:\\sanctum\\src\\App.js",[],"D:\\sanctum\\src\\Components\\Layout\\Layout.js",["542","543"],"D:\\sanctum\\src\\Components\\Users\\AddUser.js",["544","545","546","547","548"],"D:\\sanctum\\src\\Components\\Users\\ManageUsers.js",["549","550"],"D:\\sanctum\\src\\Components\\Login\\Login.js",["551","552","553","554"],"D:\\sanctum\\src\\Routes.js",["555","556","557"],"D:\\sanctum\\src\\Components\\Layout\\TopNav.js",["558","559","560"],"D:\\sanctum\\src\\Components\\Layout\\SideMenu.js",["561","562","563","564","565"],"D:\\sanctum\\src\\Services\\UserLoginService.js",[],"D:\\sanctum\\src\\Components\\Learn\\CourseOverview.js",["566","567"],"D:\\sanctum\\src\\Components\\Dashboard\\Dashboard.js",["568","569","570","571","572","573","574","575","576","577","578"],"D:\\sanctum\\src\\Components\\Practice\\PracticeOverview.js",["579","580"],"D:\\sanctum\\src\\Components\\Learn\\CourseDetails.js",["581","582","583","584","585","586","587"],"D:\\sanctum\\src\\Components\\Practice\\QuestionsList.js",["588","589","590","591","592","593","594","595","596"],"D:\\sanctum\\src\\Components\\Documentation\\GettingStart.js",["597","598","599","600"],"D:\\sanctum\\src\\Components\\Visualizer\\CodeVisualizer.js",[],"D:\\sanctum\\src\\Components\\Documentation\\DevelopersGuide.js",["601","602","603","604"],"D:\\sanctum\\src\\Components\\Practice\\SelectedQuestion.js",["605","606","607","608"],"D:\\sanctum\\src\\Components\\Documentation\\Documentation.js",["609","610","611","612"],"D:\\sanctum\\src\\Services\\APICallService.js",[],"D:\\sanctum\\src\\Services\\PracticeService.js",["613"],"D:\\sanctum\\src\\Services\\learningService.js",["614"],"D:\\sanctum\\src\\constant.js",[],{"ruleId":"615","severity":1,"message":"616","line":3,"column":17,"nodeType":"617","messageId":"618","endLine":3,"endColumn":21},{"ruleId":"615","severity":1,"message":"619","line":14,"column":7,"nodeType":"617","messageId":"618","endLine":14,"endColumn":14},{"ruleId":"620","replacedBy":"621"},{"ruleId":"622","replacedBy":"623"},{"ruleId":"615","severity":1,"message":"624","line":2,"column":30,"nodeType":"617","messageId":"618","endLine":2,"endColumn":34},{"ruleId":"615","severity":1,"message":"625","line":4,"column":54,"nodeType":"617","messageId":"618","endLine":4,"endColumn":74},{"ruleId":"615","severity":1,"message":"626","line":8,"column":9,"nodeType":"617","messageId":"618","endLine":8,"endColumn":14},{"ruleId":"615","severity":1,"message":"627","line":24,"column":11,"nodeType":"617","messageId":"618","endLine":24,"endColumn":20},{"ruleId":"628","severity":1,"message":"629","line":16,"column":13,"nodeType":"630","messageId":"631","endLine":16,"endColumn":36},{"ruleId":"628","severity":1,"message":"629","line":18,"column":12,"nodeType":"630","messageId":"631","endLine":18,"endColumn":44},{"ruleId":"628","severity":1,"message":"629","line":19,"column":13,"nodeType":"630","messageId":"631","endLine":19,"endColumn":46},{"ruleId":"628","severity":1,"message":"629","line":22,"column":12,"nodeType":"630","messageId":"631","endLine":22,"endColumn":56},{"ruleId":"632","severity":1,"message":"633","line":27,"column":2,"nodeType":"634","messageId":"635","endLine":29,"endColumn":5},{"ruleId":"636","severity":1,"message":"637","line":10,"column":22,"nodeType":"638","endLine":10,"endColumn":25},{"ruleId":"615","severity":1,"message":"639","line":53,"column":11,"nodeType":"617","messageId":"618","endLine":53,"endColumn":18},{"ruleId":"615","severity":1,"message":"640","line":1,"column":10,"nodeType":"617","messageId":"618","endLine":1,"endColumn":16},{"ruleId":"615","severity":1,"message":"641","line":2,"column":10,"nodeType":"617","messageId":"618","endLine":2,"endColumn":29},{"ruleId":"615","severity":1,"message":"642","line":70,"column":15,"nodeType":"617","messageId":"618","endLine":70,"endColumn":18},{"ruleId":"615","severity":1,"message":"643","line":99,"column":23,"nodeType":"617","messageId":"618","endLine":99,"endColumn":27},{"ruleId":"636","severity":1,"message":"637","line":168,"column":25,"nodeType":"638","endLine":174,"endColumn":26},{"ruleId":"636","severity":1,"message":"637","line":178,"column":25,"nodeType":"638","endLine":178,"endColumn":53},{"ruleId":"636","severity":1,"message":"637","line":182,"column":25,"nodeType":"638","endLine":182,"endColumn":86},{"ruleId":"615","severity":1,"message":"644","line":1,"column":38,"nodeType":"617","messageId":"618","endLine":1,"endColumn":44},{"ruleId":"615","severity":1,"message":"640","line":1,"column":9,"nodeType":"617","messageId":"618","endLine":1,"endColumn":15},{"ruleId":"615","severity":1,"message":"645","line":4,"column":9,"nodeType":"617","messageId":"618","endLine":4,"endColumn":19},{"ruleId":"615","severity":1,"message":"646","line":1,"column":17,"nodeType":"617","messageId":"618","endLine":1,"endColumn":25},{"ruleId":"615","severity":1,"message":"647","line":2,"column":43,"nodeType":"617","messageId":"618","endLine":2,"endColumn":55},{"ruleId":"615","severity":1,"message":"648","line":2,"column":64,"nodeType":"617","messageId":"618","endLine":2,"endColumn":67},{"ruleId":"615","severity":1,"message":"649","line":2,"column":77,"nodeType":"617","messageId":"618","endLine":2,"endColumn":82},{"ruleId":"615","severity":1,"message":"650","line":4,"column":10,"nodeType":"617","messageId":"618","endLine":4,"endColumn":35},{"ruleId":"615","severity":1,"message":"651","line":8,"column":9,"nodeType":"617","messageId":"618","endLine":8,"endColumn":16},{"ruleId":"636","severity":1,"message":"637","line":70,"column":25,"nodeType":"638","endLine":70,"endColumn":56},{"ruleId":"636","severity":1,"message":"637","line":74,"column":29,"nodeType":"638","endLine":74,"endColumn":109},{"ruleId":"615","severity":1,"message":"652","line":25,"column":8,"nodeType":"617","messageId":"618","endLine":25,"endColumn":18},{"ruleId":"615","severity":1,"message":"653","line":26,"column":9,"nodeType":"617","messageId":"618","endLine":26,"endColumn":28},{"ruleId":"615","severity":1,"message":"654","line":28,"column":8,"nodeType":"617","messageId":"618","endLine":28,"endColumn":14},{"ruleId":"615","severity":1,"message":"655","line":39,"column":7,"nodeType":"617","messageId":"618","endLine":39,"endColumn":19},{"ruleId":"615","severity":1,"message":"656","line":43,"column":7,"nodeType":"617","messageId":"618","endLine":43,"endColumn":17},{"ruleId":"628","severity":1,"message":"629","line":49,"column":15,"nodeType":"630","messageId":"631","endLine":49,"endColumn":38},{"ruleId":"628","severity":1,"message":"629","line":51,"column":16,"nodeType":"630","messageId":"631","endLine":51,"endColumn":48},{"ruleId":"628","severity":1,"message":"629","line":52,"column":17,"nodeType":"630","messageId":"631","endLine":52,"endColumn":50},{"ruleId":"628","severity":1,"message":"629","line":55,"column":16,"nodeType":"630","messageId":"631","endLine":55,"endColumn":60},{"ruleId":"615","severity":1,"message":"657","line":5,"column":7,"nodeType":"617","messageId":"618","endLine":5,"endColumn":13},{"ruleId":"615","severity":1,"message":"658","line":1,"column":17,"nodeType":"617","messageId":"618","endLine":1,"endColumn":26},{"ruleId":"615","severity":1,"message":"659","line":2,"column":50,"nodeType":"617","messageId":"618","endLine":2,"endColumn":60},{"ruleId":"615","severity":1,"message":"640","line":2,"column":9,"nodeType":"617","messageId":"618","endLine":2,"endColumn":15},{"ruleId":"615","severity":1,"message":"644","line":2,"column":34,"nodeType":"617","messageId":"618","endLine":2,"endColumn":40},{"ruleId":"615","severity":1,"message":"660","line":2,"column":42,"nodeType":"617","messageId":"618","endLine":2,"endColumn":46},{"ruleId":"615","severity":1,"message":"649","line":2,"column":54,"nodeType":"617","messageId":"618","endLine":2,"endColumn":59},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"615","severity":1,"message":"661","line":8,"column":25,"nodeType":"617","messageId":"618","endLine":8,"endColumn":42},{"ruleId":"615","severity":1,"message":"662","line":10,"column":7,"nodeType":"617","messageId":"618","endLine":10,"endColumn":11},{"ruleId":"636","severity":1,"message":"663","line":52,"column":63,"nodeType":"638","endLine":52,"endColumn":75},{"ruleId":"636","severity":1,"message":"663","line":66,"column":63,"nodeType":"638","endLine":66,"endColumn":75},{"ruleId":"615","severity":1,"message":"640","line":1,"column":9,"nodeType":"617","messageId":"618","endLine":1,"endColumn":15},{"ruleId":"615","severity":1,"message":"645","line":4,"column":9,"nodeType":"617","messageId":"618","endLine":4,"endColumn":19},{"ruleId":"664","severity":1,"message":"665","line":27,"column":46,"nodeType":"666","messageId":"667","endLine":27,"endColumn":48},{"ruleId":"664","severity":1,"message":"665","line":28,"column":45,"nodeType":"666","messageId":"667","endLine":28,"endColumn":47},{"ruleId":"615","severity":1,"message":"668","line":2,"column":38,"nodeType":"617","messageId":"618","endLine":2,"endColumn":49},{"ruleId":"615","severity":1,"message":"660","line":2,"column":51,"nodeType":"617","messageId":"618","endLine":2,"endColumn":55},{"ruleId":"615","severity":1,"message":"647","line":2,"column":57,"nodeType":"617","messageId":"618","endLine":2,"endColumn":69},{"ruleId":"615","severity":1,"message":"669","line":2,"column":71,"nodeType":"617","messageId":"618","endLine":2,"endColumn":76},{"ruleId":"615","severity":1,"message":"670","line":2,"column":83,"nodeType":"617","messageId":"618","endLine":2,"endColumn":86},{"ruleId":"615","severity":1,"message":"671","line":2,"column":88,"nodeType":"617","messageId":"618","endLine":2,"endColumn":93},{"ruleId":"615","severity":1,"message":"672","line":6,"column":9,"nodeType":"617","messageId":"618","endLine":6,"endColumn":15},{"ruleId":"636","severity":1,"message":"637","line":73,"column":48,"nodeType":"638","endLine":73,"endColumn":95},{"ruleId":"615","severity":1,"message":"673","line":80,"column":13,"nodeType":"617","messageId":"618","endLine":80,"endColumn":19},{"ruleId":"615","severity":1,"message":"674","line":173,"column":15,"nodeType":"617","messageId":"618","endLine":173,"endColumn":27},{"ruleId":"636","severity":1,"message":"637","line":28,"column":73,"nodeType":"638","endLine":29,"endColumn":119},{"ruleId":"636","severity":1,"message":"637","line":30,"column":29,"nodeType":"638","endLine":30,"endColumn":102},{"ruleId":"615","severity":1,"message":"644","line":6,"column":5,"nodeType":"617","messageId":"618","endLine":6,"endColumn":11},{"ruleId":"615","severity":1,"message":"649","line":9,"column":5,"nodeType":"617","messageId":"618","endLine":9,"endColumn":10},{"ruleId":"615","severity":1,"message":"675","line":17,"column":5,"nodeType":"617","messageId":"618","endLine":17,"endColumn":13},{"ruleId":"615","severity":1,"message":"641","line":22,"column":9,"nodeType":"617","messageId":"618","endLine":22,"endColumn":28},{"ruleId":"615","severity":1,"message":"676","line":23,"column":9,"nodeType":"617","messageId":"618","endLine":23,"endColumn":18},{"ruleId":"615","severity":1,"message":"677","line":23,"column":20,"nodeType":"617","messageId":"618","endLine":23,"endColumn":34},{"ruleId":"615","severity":1,"message":"678","line":23,"column":36,"nodeType":"617","messageId":"618","endLine":23,"endColumn":51},{"ruleId":"615","severity":1,"message":"662","line":39,"column":7,"nodeType":"617","messageId":"618","endLine":39,"endColumn":11},{"ruleId":"679","severity":1,"message":"680","line":248,"column":13,"nodeType":"617","messageId":"681","endLine":248,"endColumn":17},{"ruleId":"615","severity":1,"message":"682","line":6,"column":8,"nodeType":"617","messageId":"618","endLine":6,"endColumn":16},{"ruleId":"615","severity":1,"message":"682","line":14,"column":8,"nodeType":"617","messageId":"618","endLine":14,"endColumn":16},{"ruleId":"615","severity":1,"message":"682","line":26,"column":8,"nodeType":"617","messageId":"618","endLine":26,"endColumn":16},{"ruleId":"615","severity":1,"message":"682","line":34,"column":8,"nodeType":"617","messageId":"618","endLine":34,"endColumn":16},{"ruleId":"615","severity":1,"message":"682","line":46,"column":8,"nodeType":"617","messageId":"618","endLine":46,"endColumn":16},{"ruleId":"615","severity":1,"message":"682","line":54,"column":8,"nodeType":"617","messageId":"618","endLine":54,"endColumn":16},{"ruleId":"615","severity":1,"message":"682","line":5,"column":11,"nodeType":"617","messageId":"618","endLine":5,"endColumn":19},{"ruleId":"615","severity":1,"message":"682","line":13,"column":11,"nodeType":"617","messageId":"618","endLine":13,"endColumn":19},{"ruleId":"683","severity":1,"message":"684","line":24,"column":37,"nodeType":"685","messageId":"686","endLine":24,"endColumn":39},{"ruleId":"615","severity":1,"message":"616","line":3,"column":17,"nodeType":"617","messageId":"618","endLine":3,"endColumn":21},{"ruleId":"615","severity":1,"message":"619","line":14,"column":7,"nodeType":"617","messageId":"618","endLine":14,"endColumn":14},{"ruleId":"620","replacedBy":"687"},{"ruleId":"622","replacedBy":"688"},{"ruleId":"615","severity":1,"message":"624","line":2,"column":30,"nodeType":"617","messageId":"618","endLine":2,"endColumn":34},{"ruleId":"615","severity":1,"message":"689","line":41,"column":9,"nodeType":"617","messageId":"618","endLine":41,"endColumn":24},{"ruleId":"615","severity":1,"message":"690","line":6,"column":9,"nodeType":"617","messageId":"618","endLine":6,"endColumn":15},{"ruleId":"615","severity":1,"message":"691","line":10,"column":5,"nodeType":"617","messageId":"618","endLine":10,"endColumn":6},{"ruleId":"615","severity":1,"message":"692","line":13,"column":8,"nodeType":"617","messageId":"618","endLine":13,"endColumn":12},{"ruleId":"615","severity":1,"message":"656","line":23,"column":7,"nodeType":"617","messageId":"618","endLine":23,"endColumn":17},{"ruleId":"628","severity":1,"message":"629","line":16,"column":13,"nodeType":"630","messageId":"631","endLine":16,"endColumn":36},{"ruleId":"628","severity":1,"message":"629","line":18,"column":12,"nodeType":"630","messageId":"631","endLine":18,"endColumn":44},{"ruleId":"628","severity":1,"message":"629","line":19,"column":13,"nodeType":"630","messageId":"631","endLine":19,"endColumn":46},{"ruleId":"628","severity":1,"message":"629","line":22,"column":12,"nodeType":"630","messageId":"631","endLine":22,"endColumn":56},{"ruleId":"632","severity":1,"message":"633","line":27,"column":2,"nodeType":"634","messageId":"635","endLine":29,"endColumn":5},{"ruleId":"636","severity":1,"message":"637","line":10,"column":22,"nodeType":"638","endLine":10,"endColumn":25},{"ruleId":"615","severity":1,"message":"639","line":53,"column":11,"nodeType":"617","messageId":"618","endLine":53,"endColumn":18},{"ruleId":"615","severity":1,"message":"658","line":1,"column":17,"nodeType":"617","messageId":"618","endLine":1,"endColumn":26},{"ruleId":"615","severity":1,"message":"659","line":2,"column":50,"nodeType":"617","messageId":"618","endLine":2,"endColumn":60},{"ruleId":"615","severity":1,"message":"693","line":31,"column":10,"nodeType":"617","messageId":"618","endLine":31,"endColumn":26},{"ruleId":"615","severity":1,"message":"694","line":6,"column":5,"nodeType":"617","messageId":"618","endLine":6,"endColumn":19},{"ruleId":"615","severity":1,"message":"625","line":9,"column":5,"nodeType":"617","messageId":"618","endLine":9,"endColumn":25},{"ruleId":"615","severity":1,"message":"695","line":12,"column":5,"nodeType":"617","messageId":"618","endLine":12,"endColumn":17},{"ruleId":"615","severity":1,"message":"626","line":19,"column":8,"nodeType":"617","messageId":"618","endLine":19,"endColumn":13},{"ruleId":"615","severity":1,"message":"627","line":36,"column":16,"nodeType":"617","messageId":"618","endLine":36,"endColumn":25},{"ruleId":"615","severity":1,"message":"671","line":3,"column":49,"nodeType":"617","messageId":"618","endLine":3,"endColumn":54},{"ruleId":"615","severity":1,"message":"625","line":8,"column":23,"nodeType":"617","messageId":"618","endLine":8,"endColumn":43},{"ruleId":"615","severity":1,"message":"696","line":113,"column":7,"nodeType":"617","messageId":"618","endLine":113,"endColumn":11},{"ruleId":"615","severity":1,"message":"640","line":2,"column":9,"nodeType":"617","messageId":"618","endLine":2,"endColumn":15},{"ruleId":"615","severity":1,"message":"644","line":2,"column":34,"nodeType":"617","messageId":"618","endLine":2,"endColumn":40},{"ruleId":"615","severity":1,"message":"660","line":2,"column":42,"nodeType":"617","messageId":"618","endLine":2,"endColumn":46},{"ruleId":"615","severity":1,"message":"649","line":2,"column":54,"nodeType":"617","messageId":"618","endLine":2,"endColumn":59},{"ruleId":"615","severity":1,"message":"697","line":2,"column":91,"nodeType":"617","messageId":"618","endLine":2,"endColumn":96},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"698","severity":1,"message":"699","line":38,"column":54,"nodeType":"638","endLine":39,"endColumn":114},{"ruleId":"636","severity":1,"message":"663","line":65,"column":76,"nodeType":"638","endLine":65,"endColumn":88},{"ruleId":"636","severity":1,"message":"663","line":79,"column":79,"nodeType":"638","endLine":79,"endColumn":91},{"ruleId":"636","severity":1,"message":"663","line":93,"column":78,"nodeType":"638","endLine":93,"endColumn":90},{"ruleId":"620","replacedBy":"700"},{"ruleId":"622","replacedBy":"701"},{"ruleId":"620","replacedBy":"702"},{"ruleId":"622","replacedBy":"703"},{"ruleId":"615","severity":1,"message":"704","line":13,"column":9,"nodeType":"617","messageId":"618","endLine":13,"endColumn":16},{"ruleId":"615","severity":1,"message":"705","line":16,"column":7,"nodeType":"617","messageId":"618","endLine":16,"endColumn":19},{"ruleId":"615","severity":1,"message":"706","line":1,"column":9,"nodeType":"617","messageId":"618","endLine":1,"endColumn":12},{"ruleId":"615","severity":1,"message":"707","line":9,"column":5,"nodeType":"617","messageId":"618","endLine":9,"endColumn":22},{"ruleId":"615","severity":1,"message":"705","line":15,"column":7,"nodeType":"617","messageId":"618","endLine":15,"endColumn":19},{"ruleId":"615","severity":1,"message":"640","line":2,"column":9,"nodeType":"617","messageId":"618","endLine":2,"endColumn":15},{"ruleId":"615","severity":1,"message":"644","line":2,"column":34,"nodeType":"617","messageId":"618","endLine":2,"endColumn":40},{"ruleId":"615","severity":1,"message":"660","line":2,"column":42,"nodeType":"617","messageId":"618","endLine":2,"endColumn":46},{"ruleId":"615","severity":1,"message":"649","line":2,"column":54,"nodeType":"617","messageId":"618","endLine":2,"endColumn":59},{"ruleId":"615","severity":1,"message":"697","line":2,"column":91,"nodeType":"617","messageId":"618","endLine":2,"endColumn":96},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"698","severity":1,"message":"699","line":38,"column":54,"nodeType":"638","endLine":39,"endColumn":114},{"ruleId":"636","severity":1,"message":"663","line":65,"column":76,"nodeType":"638","endLine":65,"endColumn":88},{"ruleId":"636","severity":1,"message":"663","line":79,"column":79,"nodeType":"638","endLine":79,"endColumn":91},{"ruleId":"636","severity":1,"message":"663","line":93,"column":78,"nodeType":"638","endLine":93,"endColumn":90},{"ruleId":"615","severity":1,"message":"708","line":13,"column":8,"nodeType":"617","messageId":"618","endLine":13,"endColumn":21},{"ruleId":"615","severity":1,"message":"705","line":16,"column":7,"nodeType":"617","messageId":"618","endLine":16,"endColumn":19},{"ruleId":"615","severity":1,"message":"707","line":9,"column":5,"nodeType":"617","messageId":"618","endLine":9,"endColumn":22},{"ruleId":"615","severity":1,"message":"705","line":16,"column":7,"nodeType":"617","messageId":"618","endLine":16,"endColumn":19},{"ruleId":"615","severity":1,"message":"640","line":2,"column":9,"nodeType":"617","messageId":"618","endLine":2,"endColumn":15},{"ruleId":"615","severity":1,"message":"644","line":2,"column":34,"nodeType":"617","messageId":"618","endLine":2,"endColumn":40},{"ruleId":"615","severity":1,"message":"660","line":2,"column":42,"nodeType":"617","messageId":"618","endLine":2,"endColumn":46},{"ruleId":"615","severity":1,"message":"649","line":2,"column":54,"nodeType":"617","messageId":"618","endLine":2,"endColumn":59},{"ruleId":"615","severity":1,"message":"697","line":2,"column":91,"nodeType":"617","messageId":"618","endLine":2,"endColumn":96},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"698","severity":1,"message":"699","line":42,"column":54,"nodeType":"638","endLine":43,"endColumn":114},{"ruleId":"636","severity":1,"message":"663","line":69,"column":76,"nodeType":"638","endLine":69,"endColumn":88},{"ruleId":"636","severity":1,"message":"663","line":83,"column":79,"nodeType":"638","endLine":83,"endColumn":91},{"ruleId":"636","severity":1,"message":"663","line":97,"column":78,"nodeType":"638","endLine":97,"endColumn":90},{"ruleId":"615","severity":1,"message":"709","line":2,"column":8,"nodeType":"617","messageId":"618","endLine":2,"endColumn":16},{"ruleId":"615","severity":1,"message":"710","line":3,"column":45,"nodeType":"617","messageId":"618","endLine":3,"endColumn":49},{"ruleId":"615","severity":1,"message":"711","line":3,"column":51,"nodeType":"617","messageId":"618","endLine":3,"endColumn":55},{"ruleId":"615","severity":1,"message":"712","line":3,"column":57,"nodeType":"617","messageId":"618","endLine":3,"endColumn":65},{"ruleId":"615","severity":1,"message":"713","line":7,"column":27,"nodeType":"617","messageId":"618","endLine":7,"endColumn":39},{"ruleId":"615","severity":1,"message":"714","line":7,"column":41,"nodeType":"617","messageId":"618","endLine":7,"endColumn":61},{"ruleId":"615","severity":1,"message":"715","line":7,"column":63,"nodeType":"617","messageId":"618","endLine":7,"endColumn":74},{"ruleId":"615","severity":1,"message":"712","line":2,"column":57,"nodeType":"617","messageId":"618","endLine":2,"endColumn":65},{"ruleId":"615","severity":1,"message":"647","line":2,"column":67,"nodeType":"617","messageId":"618","endLine":2,"endColumn":79},{"ruleId":"615","severity":1,"message":"716","line":4,"column":5,"nodeType":"617","messageId":"618","endLine":4,"endColumn":16},{"ruleId":"615","severity":1,"message":"717","line":5,"column":5,"nodeType":"617","messageId":"618","endLine":5,"endColumn":18},{"ruleId":"615","severity":1,"message":"718","line":6,"column":5,"nodeType":"617","messageId":"618","endLine":6,"endColumn":23},{"ruleId":"615","severity":1,"message":"707","line":9,"column":5,"nodeType":"617","messageId":"618","endLine":9,"endColumn":22},{"ruleId":"615","severity":1,"message":"719","line":12,"column":9,"nodeType":"617","messageId":"618","endLine":12,"endColumn":19},{"ruleId":"615","severity":1,"message":"705","line":16,"column":7,"nodeType":"617","messageId":"618","endLine":16,"endColumn":19},{"ruleId":"720","severity":1,"message":"721","line":91,"column":77,"nodeType":"685","messageId":"722","endLine":91,"endColumn":78},{"ruleId":"615","severity":1,"message":"723","line":6,"column":9,"nodeType":"617","messageId":"618","endLine":6,"endColumn":18},{"ruleId":"615","severity":1,"message":"649","line":2,"column":45,"nodeType":"617","messageId":"618","endLine":2,"endColumn":50},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"615","severity":1,"message":"724","line":3,"column":30,"nodeType":"617","messageId":"618","endLine":3,"endColumn":42},{"ruleId":"615","severity":1,"message":"705","line":8,"column":7,"nodeType":"617","messageId":"618","endLine":8,"endColumn":19},{"ruleId":"615","severity":1,"message":"649","line":2,"column":45,"nodeType":"617","messageId":"618","endLine":2,"endColumn":50},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"615","severity":1,"message":"724","line":3,"column":30,"nodeType":"617","messageId":"618","endLine":3,"endColumn":42},{"ruleId":"615","severity":1,"message":"705","line":8,"column":7,"nodeType":"617","messageId":"618","endLine":8,"endColumn":19},{"ruleId":"615","severity":1,"message":"649","line":2,"column":45,"nodeType":"617","messageId":"618","endLine":2,"endColumn":50},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"615","severity":1,"message":"724","line":3,"column":30,"nodeType":"617","messageId":"618","endLine":3,"endColumn":42},{"ruleId":"615","severity":1,"message":"705","line":8,"column":7,"nodeType":"617","messageId":"618","endLine":8,"endColumn":19},{"ruleId":"615","severity":1,"message":"725","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":23},{"ruleId":"615","severity":1,"message":"692","line":7,"column":8,"nodeType":"617","messageId":"618","endLine":7,"endColumn":12},{"ruleId":"615","severity":1,"message":"726","line":11,"column":7,"nodeType":"617","messageId":"618","endLine":11,"endColumn":16},{"ruleId":"720","severity":1,"message":"721","line":89,"column":41,"nodeType":"685","messageId":"722","endLine":89,"endColumn":42},{"ruleId":"615","severity":1,"message":"616","line":3,"column":17,"nodeType":"617","messageId":"618","endLine":3,"endColumn":21},{"ruleId":"615","severity":1,"message":"619","line":14,"column":7,"nodeType":"617","messageId":"618","endLine":14,"endColumn":14},{"ruleId":"615","severity":1,"message":"624","line":2,"column":30,"nodeType":"617","messageId":"618","endLine":2,"endColumn":34},{"ruleId":"615","severity":1,"message":"689","line":41,"column":9,"nodeType":"617","messageId":"618","endLine":41,"endColumn":24},{"ruleId":"628","severity":1,"message":"629","line":16,"column":13,"nodeType":"630","messageId":"631","endLine":16,"endColumn":36},{"ruleId":"628","severity":1,"message":"629","line":18,"column":12,"nodeType":"630","messageId":"631","endLine":18,"endColumn":44},{"ruleId":"628","severity":1,"message":"629","line":19,"column":13,"nodeType":"630","messageId":"631","endLine":19,"endColumn":46},{"ruleId":"628","severity":1,"message":"629","line":22,"column":12,"nodeType":"630","messageId":"631","endLine":22,"endColumn":56},{"ruleId":"632","severity":1,"message":"633","line":27,"column":2,"nodeType":"634","messageId":"635","endLine":29,"endColumn":5},{"ruleId":"636","severity":1,"message":"637","line":10,"column":22,"nodeType":"638","endLine":10,"endColumn":25},{"ruleId":"615","severity":1,"message":"639","line":53,"column":11,"nodeType":"617","messageId":"618","endLine":53,"endColumn":18},{"ruleId":"615","severity":1,"message":"690","line":6,"column":9,"nodeType":"617","messageId":"618","endLine":6,"endColumn":15},{"ruleId":"615","severity":1,"message":"691","line":10,"column":5,"nodeType":"617","messageId":"618","endLine":10,"endColumn":6},{"ruleId":"615","severity":1,"message":"692","line":13,"column":8,"nodeType":"617","messageId":"618","endLine":13,"endColumn":12},{"ruleId":"615","severity":1,"message":"656","line":23,"column":7,"nodeType":"617","messageId":"618","endLine":23,"endColumn":17},{"ruleId":"615","severity":1,"message":"658","line":1,"column":17,"nodeType":"617","messageId":"618","endLine":1,"endColumn":26},{"ruleId":"615","severity":1,"message":"659","line":2,"column":50,"nodeType":"617","messageId":"618","endLine":2,"endColumn":60},{"ruleId":"615","severity":1,"message":"693","line":31,"column":10,"nodeType":"617","messageId":"618","endLine":31,"endColumn":26},{"ruleId":"615","severity":1,"message":"671","line":3,"column":49,"nodeType":"617","messageId":"618","endLine":3,"endColumn":54},{"ruleId":"615","severity":1,"message":"625","line":8,"column":23,"nodeType":"617","messageId":"618","endLine":8,"endColumn":43},{"ruleId":"615","severity":1,"message":"696","line":113,"column":7,"nodeType":"617","messageId":"618","endLine":113,"endColumn":11},{"ruleId":"615","severity":1,"message":"694","line":6,"column":5,"nodeType":"617","messageId":"618","endLine":6,"endColumn":19},{"ruleId":"615","severity":1,"message":"625","line":9,"column":5,"nodeType":"617","messageId":"618","endLine":9,"endColumn":25},{"ruleId":"615","severity":1,"message":"695","line":12,"column":5,"nodeType":"617","messageId":"618","endLine":12,"endColumn":17},{"ruleId":"615","severity":1,"message":"626","line":19,"column":8,"nodeType":"617","messageId":"618","endLine":19,"endColumn":13},{"ruleId":"615","severity":1,"message":"627","line":36,"column":16,"nodeType":"617","messageId":"618","endLine":36,"endColumn":25},{"ruleId":"615","severity":1,"message":"708","line":13,"column":8,"nodeType":"617","messageId":"618","endLine":13,"endColumn":21},{"ruleId":"615","severity":1,"message":"705","line":16,"column":7,"nodeType":"617","messageId":"618","endLine":16,"endColumn":19},{"ruleId":"615","severity":1,"message":"640","line":2,"column":9,"nodeType":"617","messageId":"618","endLine":2,"endColumn":15},{"ruleId":"615","severity":1,"message":"644","line":2,"column":34,"nodeType":"617","messageId":"618","endLine":2,"endColumn":40},{"ruleId":"615","severity":1,"message":"660","line":2,"column":42,"nodeType":"617","messageId":"618","endLine":2,"endColumn":46},{"ruleId":"615","severity":1,"message":"649","line":2,"column":54,"nodeType":"617","messageId":"618","endLine":2,"endColumn":59},{"ruleId":"615","severity":1,"message":"697","line":2,"column":91,"nodeType":"617","messageId":"618","endLine":2,"endColumn":96},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"615","severity":1,"message":"727","line":28,"column":13,"nodeType":"617","messageId":"618","endLine":28,"endColumn":17},{"ruleId":"698","severity":1,"message":"699","line":43,"column":54,"nodeType":"638","endLine":44,"endColumn":114},{"ruleId":"636","severity":1,"message":"663","line":70,"column":76,"nodeType":"638","endLine":70,"endColumn":88},{"ruleId":"636","severity":1,"message":"663","line":84,"column":79,"nodeType":"638","endLine":84,"endColumn":91},{"ruleId":"636","severity":1,"message":"663","line":98,"column":78,"nodeType":"638","endLine":98,"endColumn":90},{"ruleId":"615","severity":1,"message":"707","line":9,"column":5,"nodeType":"617","messageId":"618","endLine":9,"endColumn":22},{"ruleId":"615","severity":1,"message":"705","line":16,"column":7,"nodeType":"617","messageId":"618","endLine":16,"endColumn":19},{"ruleId":"615","severity":1,"message":"709","line":2,"column":8,"nodeType":"617","messageId":"618","endLine":2,"endColumn":16},{"ruleId":"615","severity":1,"message":"710","line":3,"column":45,"nodeType":"617","messageId":"618","endLine":3,"endColumn":49},{"ruleId":"615","severity":1,"message":"711","line":3,"column":51,"nodeType":"617","messageId":"618","endLine":3,"endColumn":55},{"ruleId":"615","severity":1,"message":"712","line":3,"column":57,"nodeType":"617","messageId":"618","endLine":3,"endColumn":65},{"ruleId":"615","severity":1,"message":"713","line":7,"column":27,"nodeType":"617","messageId":"618","endLine":7,"endColumn":39},{"ruleId":"615","severity":1,"message":"714","line":7,"column":41,"nodeType":"617","messageId":"618","endLine":7,"endColumn":61},{"ruleId":"615","severity":1,"message":"715","line":7,"column":63,"nodeType":"617","messageId":"618","endLine":7,"endColumn":74},{"ruleId":"615","severity":1,"message":"712","line":2,"column":57,"nodeType":"617","messageId":"618","endLine":2,"endColumn":65},{"ruleId":"615","severity":1,"message":"647","line":2,"column":67,"nodeType":"617","messageId":"618","endLine":2,"endColumn":79},{"ruleId":"615","severity":1,"message":"716","line":4,"column":5,"nodeType":"617","messageId":"618","endLine":4,"endColumn":16},{"ruleId":"615","severity":1,"message":"717","line":5,"column":5,"nodeType":"617","messageId":"618","endLine":5,"endColumn":18},{"ruleId":"615","severity":1,"message":"718","line":6,"column":5,"nodeType":"617","messageId":"618","endLine":6,"endColumn":23},{"ruleId":"615","severity":1,"message":"707","line":9,"column":5,"nodeType":"617","messageId":"618","endLine":9,"endColumn":22},{"ruleId":"615","severity":1,"message":"719","line":12,"column":9,"nodeType":"617","messageId":"618","endLine":12,"endColumn":19},{"ruleId":"615","severity":1,"message":"705","line":16,"column":7,"nodeType":"617","messageId":"618","endLine":16,"endColumn":19},{"ruleId":"720","severity":1,"message":"721","line":91,"column":77,"nodeType":"685","messageId":"722","endLine":91,"endColumn":78},{"ruleId":"615","severity":1,"message":"649","line":2,"column":45,"nodeType":"617","messageId":"618","endLine":2,"endColumn":50},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"615","severity":1,"message":"724","line":3,"column":30,"nodeType":"617","messageId":"618","endLine":3,"endColumn":42},{"ruleId":"615","severity":1,"message":"705","line":8,"column":7,"nodeType":"617","messageId":"618","endLine":8,"endColumn":19},{"ruleId":"615","severity":1,"message":"649","line":2,"column":45,"nodeType":"617","messageId":"618","endLine":2,"endColumn":50},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"615","severity":1,"message":"724","line":3,"column":30,"nodeType":"617","messageId":"618","endLine":3,"endColumn":42},{"ruleId":"615","severity":1,"message":"705","line":8,"column":7,"nodeType":"617","messageId":"618","endLine":8,"endColumn":19},{"ruleId":"615","severity":1,"message":"725","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":23},{"ruleId":"615","severity":1,"message":"692","line":7,"column":8,"nodeType":"617","messageId":"618","endLine":7,"endColumn":12},{"ruleId":"615","severity":1,"message":"726","line":11,"column":7,"nodeType":"617","messageId":"618","endLine":11,"endColumn":16},{"ruleId":"720","severity":1,"message":"721","line":89,"column":41,"nodeType":"685","messageId":"722","endLine":89,"endColumn":42},{"ruleId":"615","severity":1,"message":"649","line":2,"column":45,"nodeType":"617","messageId":"618","endLine":2,"endColumn":50},{"ruleId":"615","severity":1,"message":"641","line":3,"column":9,"nodeType":"617","messageId":"618","endLine":3,"endColumn":28},{"ruleId":"615","severity":1,"message":"724","line":3,"column":30,"nodeType":"617","messageId":"618","endLine":3,"endColumn":42},{"ruleId":"615","severity":1,"message":"705","line":8,"column":7,"nodeType":"617","messageId":"618","endLine":8,"endColumn":19},{"ruleId":"615","severity":1,"message":"723","line":6,"column":9,"nodeType":"617","messageId":"618","endLine":6,"endColumn":18},{"ruleId":"615","severity":1,"message":"706","line":1,"column":9,"nodeType":"617","messageId":"618","endLine":1,"endColumn":12},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'routing' is assigned a value but never used.","no-native-reassign",["728"],"no-negated-in-lhs",["729"],"'Card' is defined but never used.","'NotificationOutlined' is defined but never used.","'Sider' is assigned a value but never used.","'collapsed' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loading' is assigned a value but never used.","'Button' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'row' is assigned a value but never used.","'item' is assigned a value but never used.","'Select' is defined but never used.","'Categories' is defined but never used.","'useState' is defined but never used.","'notification' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'confirm' is assigned a value but never used.","'AddFilters' is defined but never used.","'getProductImageById' is defined but never used.","'Option' is assigned a value but never used.","'layoutDrawer' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'layout' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Form' is defined but never used.","'getOutOfStockList' is defined but never used.","'data' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'InputNumber' is defined but never used.","'Modal' is defined but never used.","'Col' is defined but never used.","'Badge' is defined but never used.","'Stocks' is defined but never used.","'record' is assigned a value but never used.","'rowSelection' is assigned a value but never used.","'Skeleton' is defined but never used.","'newOrders' is defined but never used.","'reviewedOrders' is defined but never used.","'completedOrders' is defined but never used.","no-redeclare","'cust' is already defined.","redeclared","'endpoint' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["728"],["729"],"'breadcrumbItems' is assigned a value but never used.","'Header' is defined but never used.","'_' is assigned a value but never used.","'Meta' is assigned a value but never used.","'CheckLogOnStatus' is defined but never used.","'LaptopOutlined' is defined but never used.","'GiftOutlined' is defined but never used.","'menu' is assigned a value but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["728"],["729"],["728"],["729"],"'courses' is defined but never used.","'contentStyle' is assigned a value but never used.","'API' is defined but never used.","'CloudSyncOutlined' is defined but never used.","'CourseDetails' is defined but never used.","'ReactDOM' is defined but never used.","'Spin' is defined but never used.","'List' is defined but never used.","'Progress' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'LockTwoTone' is defined but never used.","'UnlockTwoTone' is defined but never used.","'CheckCircleTwoTone' is defined but never used.","'getCourses' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'questions' is assigned a value but never used.","'BulbOutlined' is defined but never used.","'ReloadOutlined' is defined but never used.","'spinStyle' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]