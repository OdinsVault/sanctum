[{"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\index.js":"1","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\App.js":"2","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\Layout.js":"3","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\TopNav.js":"4","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\SideMenu.js":"5","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Users\\AddUser.js":"6","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Users\\ManageUsers.js":"7","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\Categories.js":"8","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\CategoryTable.js":"9","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\conastant.js":"10","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\AddCategory.js":"11","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Stocks\\ManageStocks.js":"12","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Stocks\\StockTable.js":"13","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\AddNewProduct.js":"14","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Login\\Login.js":"15","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Routes.js":"16","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\DashBoard\\dashboard.js":"17","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\FilterModal.js":"18","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\ManageProducts.js":"19","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\ProductTable.js":"20","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Orders\\NewOrders.js":"21","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Orders\\ViewOrders.js":"22","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\OrderService.js":"23","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\StockService.js":"24","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\ProductService.js":"25","D:\\Simply Web\\src\\index.js":"26","D:\\Simply Web\\src\\App.js":"27","D:\\Simply Web\\src\\Components\\Layout\\Layout.js":"28","D:\\Simply Web\\src\\Components\\Login\\Login.js":"29","D:\\Simply Web\\src\\Components\\Users\\AddUser.js":"30","D:\\Simply Web\\src\\Components\\Users\\ManageUsers.js":"31","D:\\Simply Web\\src\\Routes.js":"32","D:\\Simply Web\\src\\Components\\Layout\\SideMenu.js":"33","D:\\Simply Web\\src\\Components\\Layout\\TopNav.js":"34","D:\\Simply Web\\src\\Components\\DashBoard\\dashboard.js":"35","D:\\Simply Web\\src\\conastant.js":"36","D:\\Simply Web\\src\\Services\\UserLoginService.js":"37","D:\\Simply Web\\src\\Services\\APICallService.js":"38","D:\\Simply Web\\src\\Components\\Learn\\courseOverview.js":"39","D:\\Simply Web\\src\\Services\\learningService.js":"40","D:\\Simply Web\\src\\Components\\Practice\\practiceOverview.js":"41"},{"size":1127,"mtime":1612512773704,"results":"42","hashOfConfig":"43"},{"size":151,"mtime":1613328364063,"results":"44","hashOfConfig":"43"},{"size":2024,"mtime":1613328573059,"results":"45","hashOfConfig":"43"},{"size":2683,"mtime":1613328699521,"results":"46","hashOfConfig":"43"},{"size":2883,"mtime":1613889128328,"results":"47","hashOfConfig":"43"},{"size":3057,"mtime":1613328887207,"results":"48","hashOfConfig":"43"},{"size":2750,"mtime":1613328913832,"results":"49","hashOfConfig":"43"},{"size":1478,"mtime":1613997908628,"results":"50","hashOfConfig":"43"},{"size":7529,"mtime":1612513293314,"results":"51","hashOfConfig":"43"},{"size":13338,"mtime":1614236498998,"results":"52","hashOfConfig":"43"},{"size":1881,"mtime":1612513258479,"results":"53","hashOfConfig":"43"},{"size":2570,"mtime":1614240749903,"results":"54","hashOfConfig":"43"},{"size":8725,"mtime":1614247303303,"results":"55","hashOfConfig":"43"},{"size":21175,"mtime":1614239487774,"results":"56","hashOfConfig":"43"},{"size":1836,"mtime":1612513154914,"results":"57","hashOfConfig":"43"},{"size":3368,"mtime":1613202213404,"results":"58","hashOfConfig":"43"},{"size":3285,"mtime":1613634115144,"results":"59","hashOfConfig":"43"},{"size":1275,"mtime":1612684675574,"results":"60","hashOfConfig":"43"},{"size":2573,"mtime":1613894330646,"results":"61","hashOfConfig":"43"},{"size":6943,"mtime":1613887818651,"results":"62","hashOfConfig":"43"},{"size":1560,"mtime":1613631987712,"results":"63","hashOfConfig":"43"},{"size":19937,"mtime":1614013081766,"results":"64","hashOfConfig":"43"},{"size":1234,"mtime":1613716967183,"results":"65","hashOfConfig":"43"},{"size":473,"mtime":1614240463800,"results":"66","hashOfConfig":"43"},{"size":1217,"mtime":1614003616566,"results":"67","hashOfConfig":"43"},{"size":1127,"mtime":1612512773704,"results":"68","hashOfConfig":"69"},{"size":151,"mtime":1613328364063,"results":"70","hashOfConfig":"69"},{"size":2081,"mtime":1614849347085,"results":"71","hashOfConfig":"69"},{"size":3219,"mtime":1614611879444,"results":"72","hashOfConfig":"69"},{"size":3057,"mtime":1613328887207,"results":"73","hashOfConfig":"69"},{"size":2750,"mtime":1613328913832,"results":"74","hashOfConfig":"69"},{"size":2981,"mtime":1614849574867,"results":"75","hashOfConfig":"69"},{"size":3484,"mtime":1614849494015,"results":"76","hashOfConfig":"69"},{"size":3584,"mtime":1614836725025,"results":"77","hashOfConfig":"69"},{"size":5074,"mtime":1614850726434,"results":"78","hashOfConfig":"69"},{"size":1124,"mtime":1614843900714,"results":"79","hashOfConfig":"69"},{"size":432,"mtime":1614616515314,"results":"80","hashOfConfig":"69"},{"size":2612,"mtime":1614616402636,"results":"81","hashOfConfig":"69"},{"size":4216,"mtime":1614849431193,"results":"82","hashOfConfig":"69"},{"size":259,"mtime":1614840374220,"results":"83","hashOfConfig":"69"},{"size":4107,"mtime":1614849653464,"results":"84","hashOfConfig":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},"pgv3w1",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"155"},"lagmjo",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"155"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"155"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"155"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"155"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\index.js",["188","189"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\n// import './index.css';\nimport App from './App';\nimport SiteLayout from './Components/Layout/Layout';\n// import reportWebVitals from './reportWebVitals';\n\nimport Login from './Components/Login/Login'; \nimport AddUser from './Components/Users/AddUser';\nimport ManageUser from './Components/Users/ManageUsers';\n\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/login\" component={Login} />\n      <Route path='/layout' component={SiteLayout}/>\n      <Route path='/addUser' component={AddUser}/>\n      <Route path= '/manageUser' component={ManageUser}/>\n      {/* <Route path=\"/contact\" component={Contact} /> */}\n    </div>\n  </Router>\n)\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["190","191"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\App.js",[],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\Layout.js",["192"],"import React from 'react';\r\nimport { Layout, Breadcrumb, Card} from 'antd';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport TopNav from '../Layout/TopNav';\r\nimport SideMenu from '../Layout/SideMenu';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\n\r\nimport './Layout.css';\r\n\r\nconst { Content,Footer,Sider } = Layout;\r\n\r\n\r\nclass SiteLayout extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  collapsed: false\r\n\t\t};\r\n\t  }\r\n\r\n\t  toggle = () => {\r\n\t\tthis.setState({\r\n\t\t  collapsed: !this.state.collapsed,\r\n\t\t});\r\n\t  };  \r\n\r\n\trender(){\r\n\r\n\t\tconst { location } = this.props;\r\n\t\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\t\tconst extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n\t\t  const url = `${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\t  return (\r\n\t\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t  <Link to={url}>{url}</Link>\r\n\t\t\t</Breadcrumb.Item>\r\n\t\t  );\r\n\t\t});\r\n\t\tconst breadcrumbItems = [\r\n\t\t  <Breadcrumb.Item key=\"home\">\r\n\t\t\t<Link to=\"/\"><HomeOutlined /></Link>\r\n\t\t  </Breadcrumb.Item>,\r\n\t\t].concat(extraBreadcrumbItems);\r\n\r\n\t\treturn(\r\n\t\t<Layout>\r\n\t\t\t<Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n            <div className=\"logo\" >\r\n              <h4 style={{ color: 'white', fontWeight: 'bold' }}>\r\n                Sigen.LK - Admin \r\n              </h4>\r\n            </div>\r\n            <SideMenu />\r\n          </Sider>\r\n\t\t  <Layout  className=\"site-layout\" >\r\n\t\t  <TopNav collapsed={this.state.collapsed} onCollapse={this.toggle} />\r\n\t\t\t<Content style={{ margin: '0 16px' }}\r\n\t\t\t>\r\n\t\t\t\t<Breadcrumb style={{ margin: '16px 0' }}>\r\n                {breadcrumbItems}\r\n              </Breadcrumb>\r\n\t\t\t  <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</Content> \r\n\t\t\t<Footer  style={{ textAlign: 'center' }}>Sigen.Lk 2021</Footer>\r\n\t\t</Layout>\r\n\t  </Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(SiteLayout)","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\TopNav.js",[],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Layout\\SideMenu.js",["193","194","195"],"import { Layout, Menu } from 'antd';\r\n// import Sider from 'antd/lib/layout/Sider';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined ,UserOutlined, LaptopOutlined, NotificationOutlined,ShopOutlined,ShoppingCartOutlined,GiftOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nclass SideMenu extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcollapsed: false,\r\n\t\t  };\r\n\t\t\r\n\t  }\r\n\t  onCollapse = collapsed => {\r\n\t\tconsole.log(collapsed);\r\n\t\tthis.setState({ collapsed });\r\n\t  };\r\n\r\n\t  render(){\r\n\t\tconst { collapsed } = this.state;\r\n\t\t  return(\r\n        <Menu\r\n        mode=\"inline\"\r\n        theme=\"dark\"\r\n          // defaultSelectedKeys={['1']}\r\n          // defaultOpenKeys={['sub1']}\r\n          // style={{ height: '100%', borderRight: 0 }}\r\n        >\r\n\t\t\t<Menu.Item key=\"sub0\" icon={<HomeOutlined />} >\r\n        <Link to=\"/dashboard\">Dashboard</Link>\r\n      </Menu.Item>\r\n      <SubMenu key='sub5' icon={<GiftOutlined />} title=\"Products\">\r\n\t\t\t  <Menu.Item key='4'>\r\n        <Link to='/manageProducts' >View and Manage</Link>\r\n        </Menu.Item>\r\n\t\t\t  <Menu.Item>\r\n        <Link to='/addProduct' newProduct={true} >Add New</Link>\r\n        </Menu.Item>\r\n\t\t  </SubMenu>\r\n          <SubMenu key=\"sub1\" icon={<ShopOutlined /> } title=\"Stocks\">\r\n            <Menu.Item key=\"1\">\r\n            <Link to='/stocks'> View</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n            <Link>Manage</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Site settings\">\r\n\t\t\t<Menu.Item key=\"5\">\r\n      <Link to='categories'>Categories</Link>\r\n      </Menu.Item>\r\n\t\t\t{/* <Menu.Item key=\"6\">Filters</Menu.Item> */}\r\n            {/* <Menu.Item key=\"7\">Contact</Menu.Item> */}\r\n            {/* <Menu.Item key=\"8\">option8</Menu.Item> */}\r\n          </SubMenu>\r\n          <SubMenu key=\"sub3\" icon={<ShoppingCartOutlined />} title=\"Orders\">\r\n            <Menu.Item key=\"9\">\r\n            <Link to='/viewOrders'>View</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"10\">\r\n            <Link>Manage</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\t\t  <SubMenu key='sub4' icon={<UserOutlined/>} title=\"Users\">\r\n\t\t\t  <Menu.Item>\r\n          <Link to='/addUser'>Add</Link>\r\n        </Menu.Item>\r\n\t\t\t  <Menu.Item>\r\n          <Link to='/manageUser'>Manage</Link>\r\n        </Menu.Item>\r\n\t\t  </SubMenu>\r\n        </Menu>\r\n\r\n\t\t  )\r\n\t  }\r\n\r\n}\r\n\r\nexport default SideMenu\r\n\r\n\r\n                // <PrivateRoute path='/categories' component={Categories}/>\r\n                // <PrivateRoute path='/addUser' component={AddUser}/>\r\n                // <PrivateRoute path= '/manageUser' component={ManageUser}/>\r\n                // <PrivateRoute path= '/stocks' component={ManageStocks}/>\r\n\r\n\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Users\\AddUser.js",["196","197","198","199","200"],"import React from \"react\";\r\nimport { Form, Input, InputNumber, Button, Card, PageHeader,DatePicker, Select } from 'antd';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not a valid email!',\r\n    number: '${label} is not a valid number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\nclass AddUser extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t  }\r\n\r\n\t  onFinish = (e) =>{\r\n\t\t  console.log(e)\r\n\t  }\r\n\r\n\t  render() {\r\n\t\t  return (\r\n\t\t\t  <div>\r\n<Card>\r\n<PageHeader\r\n    className=\"site-page-header\"\r\n    title=\"Add New User\"\r\n    // subTitle=\"This is a subtitle\"\r\n  />\r\n\t\t\t\t \r\n\t\t\t\t   <Form {...layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name={['user', 'name']}\r\n        label=\"Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={['user', 'email']}\r\n        label=\"Email\"\r\n        rules={[\r\n          {\r\n\t\t\ttype: 'email',\r\n\t\t\trequired:true\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\t  <Form.Item\r\n\t\tname={['user','DOA']}\r\n\t\tlabel = \"Date of Assignment\"\r\n\t\trules = {[\r\n\t\t\t{\r\n\t\t\t\ttype:'date',\r\n\t\t\t\trequired:true\r\n\t\t\t}\r\n\t\t]}>\r\n\t\t\t<DatePicker />\r\n\t  </Form.Item>\r\n\t  <Form.Item name={['user', 'position']} label=\"Position\"\r\n\t  rules={[\r\n\t\t  {required:true}\r\n\t  ]}>\r\n          <Select allowClear>\r\n            <Select.Option value=\"admin\">Admin</Select.Option>\r\n\t\t\t<Select.Option value=\"sales\">Sales Rep</Select.Option>\r\n\t\t\t<Select.Option value=\"emp\">Emp</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n      <Form.Item\r\n        name={['user', 'age']}\r\n        label=\"Age\"\r\n        rules={[\r\n          {\r\n            type: 'number',\r\n            min: 16,\r\n            max: 99,\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n      {/* <Form.Item name={['user', 'position']} label=\"Position\">\r\n        <Input />\r\n      </Form.Item> */}\r\n\t  <Form.Item\r\n        name=\"gender\"\r\n        label=\"Gender\"\r\n        rules={[\r\n          {\r\n            required: false,\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder=\"Select gender\"\r\n          allowClear\r\n        >\r\n          <Option value=\"male\">male</Option>\r\n          <Option value=\"female\">female</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={['user', 'Other']} label=\"Other info\">\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item  wrapperCol={{ ...layout.wrapperCol, offset: 18 }}>\r\n        <Button  type=\"primary\" htmlType=\"submit\">\r\n          Add User\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n\t\t\t  </div>\r\n\t\t  )\r\n\t  }\r\n}\r\nexport default withRouter(AddUser)","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Users\\ManageUsers.js",["201","202"],"import { Button, Card, Col, PageHeader, Space, Table } from 'antd';\r\nimport { MinusCircleOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst columns = [\r\n\t{\r\n\t  title: 'Name',\r\n\t  dataIndex: 'name',\r\n\t  render: (text) => <a>{text}</a>,\r\n\t},\r\n\t{\r\n\t  title: 'Username',\r\n\t  dataIndex: 'username',\r\n\t},\r\n\t{\r\n\t  title: 'Email',\r\n\t  dataIndex: 'email',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Role',\r\n\t\tdataIndex: 'role',\r\n\t  },\r\n\t  {\r\n\t\ttitle: 'Remove',\r\n\t\trender: (text, record) => (\r\n\t\t\t<Space size=\"middle\">\r\n\t\t\t  <Button type=\"primary\" icon={<MinusCircleOutlined />} danger/>\r\n\t\t\t</Space>\r\n\t\t  ),\r\n\t  },\r\n\t//   {\r\n\t// \ttitle: 'Age',\r\n\t// \tdataIndex: 'age',\r\n\t//   },\r\n  ];\r\n\r\nclass ManageUser extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectedRowKeys: [], // Check here to configure the default column\r\n\t\t\tloading: false,\r\n\t\t  };\r\n\t  }\r\n\t  onSelectChange = selectedRowKeys => {\r\n\t\tconsole.log('selectedRowKeys changed: ', selectedRowKeys);\r\n\t\tthis.setState({ selectedRowKeys });\r\n\t  };\r\n\r\n\t  render() {\r\n\t\tconst { loading, selectedRowKeys } = this.state;\r\n\t\tconst rowSelection = {\r\n\t\t  selectedRowKeys,\r\n\t\t  onChange: this.onSelectChange,\r\n\t\t};\r\n\t\t  return (\r\n\t\t\t  <div>\r\n\t\t\t\t  <Card>\r\n\t\t\t\t  <PageHeader\r\n    className=\"site-page-header\"\r\n    title=\"Manage Users\"\r\n    // subTitle=\"This is a subtitle\"\r\n  />\r\n\t\t\t\t  <Table pagination={{defaultPageSize:5}}\r\n        rowSelection={rowSelection} columns={columns} dataSource={data}\r\n      /> \r\n\t  <div>\r\n\t  <Col offset={20}>\r\n\t  <Button type=\"primary\" danger disabled={true}>Remove Selected</Button></Col></div>\r\n\t  </Card>\r\n\t\t\t  </div>\r\n\t\t  )\r\n\t  }\r\n}\r\nexport default withRouter(ManageUser)\r\n\r\n\r\n  const data = [\r\n\t{\r\n\t  key: '1',\r\n\t  name: 'John Brown',\r\n\t  username: 'Brown.J1',\r\n\t  email: 'brownJ1@sigen.com',\r\n\t  role:'admin'\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\tname: 'John Brown',\r\n\t\tusername: 'Brown.J2',\r\n\t\temail: 'brownJ2@sigen.com',\r\n\t\trole:'admin'\r\n\t  },\r\n\t  {\r\n\t\tkey: '3',\r\n\t\tname: 'John Brown',\r\n\t\tusername: 'Brown.J3',\r\n\t\temail: 'brownJ3@sigen.com',\r\n\t\trole:'admin'\r\n\t  },\r\n\t  {\r\n\t\tkey: '4',\r\n\t\tname: 'John Brown',\r\n\t\tusername: 'Brown.J4',\r\n\t\temail: 'brownJ4@sigen.com',\r\n\t\trole:'admin'\r\n\t  },\r\n\t  {\r\n\t\tkey: '5',\r\n\t\tname: 'John Brown',\r\n\t\tusername: 'Brown.J5',\r\n\t\temail: 'brownJ5@sigen.com',\r\n\t\trole:'admin'\r\n\t  },\r\n\t  {\r\n\t\t  key: '6',\r\n\t\t  name: 'John Brown',\r\n\t\t  username: 'Brown.J6',\r\n\t\t  email: 'brownJ6@sigen.com',\r\n\t\t  role:'admin'\r\n\t\t},\r\n\t\t{\r\n\t\t  key: '7',\r\n\t\t  name: 'John Brown',\r\n\t\t  username: 'Brown.J7',\r\n\t\t  email: 'brownJ7@sigen.com',\r\n\t\t  role:'admin'\r\n\t\t},\r\n\t\t{\r\n\t\t  key: '8',\r\n\t\t  name: 'John Brown',\r\n\t\t  username: 'Brown.J8',\r\n\t\t  email: 'brownJ8@sigen.com',\r\n\t\t  role:'admin'\r\n\t\t},\r\n  ];","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\Categories.js",["203","204"],"import { Button, Col, PageHeader, Select, Form, Card} from 'antd';\r\nimport { MinusCircleOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport CategoryTable from './CategoryTable';\r\nimport AddCategory from './AddCategory';\r\nimport {Categories,ProductTypes} from '../../conastant';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass Category extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectedRowKeys: [], // Check here to configure the default column\r\n\t\t\tloading: false,\r\n\t\t  };\r\n\t  }\r\n\r\n\r\n\t  render() {\r\n\t\t  return (\r\n\t\t\t  <div>\r\n\t\t\t\t  <Card>\r\n\t\t\t\t  <PageHeader\r\n    className=\"site-page-header\"\r\n    title=\"Categories\"\r\n  />\r\n\t  <div>\r\n\t\t  <Col offset={1} span={12}> \r\n\t  <Form.Item label=\"Select Product Type\">\r\n          <Select allowClear placeholder={\"Select a type\"}>\r\n\t\t\t  {ProductTypes.map(product => {\r\n\t\t\t\t  return(\r\n\t\t\t\t\t  <Select.Option value={product}>{product}</Select.Option>\r\n\t\t\t\t  )\r\n\t\t\t  })}\r\n          </Select>\r\n        </Form.Item>\r\n\t\t</Col>\r\n\t  </div>\r\n\t  <div>\r\n\t  <Card type=\"inner\" title=\"Filters\">\r\n\t  \r\n\t  <CategoryTable Tabledata={Categories[1].categories}/>\r\n\t  </Card></div>\r\n\t  <div>\r\n\t  <Card type=\"inner\" title=\"Add new category\">\r\n\t\t  <AddCategory/>\r\n\t\t  </Card> \r\n\t  {/* <Col offset={20}>\r\n\t  <Button type=\"primary\" danger disabled={true}>Remove Selected</Button>\r\n\t  </Col> */}\r\n\t  </div>\r\n\t  </Card>\r\n\t\t\t  </div>\r\n\t\t  )\r\n\t  }\r\n}\r\nexport default withRouter(Category);\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\CategoryTable.js",["205","206","207","208","209"],"import React, { useState } from 'react';\r\nimport { Table, Input, InputNumber, Form, notification, Modal, Tag, Button, Space } from 'antd';\r\n// import { UpdateExpirationTime, startQueue, stopQueue, fixQueue } from '../../Services/OracleAQService'\r\nimport { ExclamationCircleOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber min={1} type=\"number\" /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: false,\r\n                            message: `Please Input Time in Seconds!`,\r\n                        },\r\n                        {\r\n                            type: 'number',\r\n                            min: 1,\r\n                            message: 'Value Cannot be Zero or Less'\r\n                        }\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                    children\r\n                )}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst CategoryTable = ({ Tabledata }) => {\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState(Tabledata);\r\n    const [editingKey, setEditingKey] = useState('');\r\n\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        form.setFieldsValue({\r\n            expirationTime: '',\r\n            ...record\r\n        });\r\n\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const cancel = () => {\r\n\r\n        setEditingKey('');\r\n    };\r\n\r\n    const UpdateChangeValidation = async (key) => {\r\n        const row = await form.validateFields();\r\n        const newData = [...data];\r\n        const index = newData.findIndex((item) => key === item.key);\r\n\r\n        if (index > -1) {\r\n            showConfirm(key);\r\n        }\r\n    }\r\n\r\n    // const startOracleQueue = async (record) => {\r\n    //     try {\r\n    //         let startedQueue = await startQueue(record.queueName)\r\n    //         if (startedQueue != null) {\r\n    //             notification.success({ message: 'Success!', description: `${startedQueue} queue started` })\r\n    //         }\r\n    //     }\r\n    //     catch (error) {\r\n    //         notification.error({ message: 'Error!', description: (error.cause ? error.cause : \"\") })\r\n    //     }\r\n    // }\r\n\r\n    const save = async (key) => {\r\n        try {\r\n            const row = await form.validateFields();\r\n\r\n            const newData = [...data];\r\n            const index = newData.findIndex((item) => key === item.key);\r\n\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n\r\n                try {\r\n                   \r\n                    notification.success({ message: 'Success!', description: 'OracleAQ Expiration Time Updated Successfully' })\r\n\r\n                }\r\n                catch (error) {\r\n                    notification.error({ message: 'Error!', description: (error.cause ? error.cause : \"\") });\r\n                }\r\n\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n            }\r\n        } catch (error) {\r\n            notification.error({ message: 'Error!', description: (error.cause ? error.cause : \"\") });\r\n        }\r\n    };\r\n\r\n    const showConfirm = (key) => {\r\n        confirm({\r\n            title: 'Update Expiration Time',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Are you sure you want to update the Expiration time?',\r\n            okText: \"Yes\",\r\n            cancelText: \"No\",\r\n            onOk() {\r\n                save(key)\r\n            },\r\n            onCancel() {\r\n                // Do nothing\r\n            },\r\n        });\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Categories',\r\n            dataIndex: 'category',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Filters',\r\n            dataIndex: 'filters',\r\n            editable: true,\r\n            render: filters => (\r\n              <>\r\n                {filters.map(filter => {\r\n                  \r\n                  return (\r\n                    <Tag >\r\n                      {filter}\r\n                    </Tag>\r\n                  );\r\n                })}\r\n              </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Edit',\r\n            dataIndex: 'operation',\r\n            // colSpan: 0,\r\n            // width: '75px',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <a\r\n\r\n                            onClick={() => UpdateChangeValidation(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Save\r\n            </a>\r\n\r\n                        <a onClick={() => cancel()}>Cancel</a>\r\n\r\n                    </span>\r\n                ) : (\r\n                        <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                            <EditOutlined />\r\n                        </a>\r\n                    );\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            width: '15%',\r\n            render: (_, record) => {\r\n                    return (\r\n                        <Space>\r\n                            {/* <Button onClick={() => startOracleQueue(record)} > start</Button> */}\r\n                            {/* <Button danger onClick={() => fixOracleQueue(record)} >fix</Button> */}\r\n                            <Button>Delete</Button>\r\n                        </Space>\r\n                    )\r\n            }\r\n        }\r\n    ];\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: col.dataIndex === 'expirationTime' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n    return (\r\n        <div>\r\n            {/* <Header title=\"Oracle Queue Status\" /> */}\r\n            <Form form={form} component={false}>\r\n                <div className=\"view-int-box\">\r\n                    <Table\r\n                        components={{\r\n                            body: {\r\n                                cell: EditableCell,\r\n                            },\r\n                        }}\r\n                        bordered\r\n                        dataSource={data}\r\n                        columns={mergedColumns}\r\n                        rowClassName=\"editable-row\"\r\n                        pagination={{\r\n                            onChange: cancel,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst { confirm } = Modal;\r\n\r\n\r\nexport default withRouter(CategoryTable);","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\conastant.js",[],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Filters\\AddCategory.js",["210"],"import { Form, Input, Button, Space, Select, Col } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst AddCategory = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values of form:', values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\r\n      <Col span={12}> \r\n    <Form.Item name=\"new category\" label=\"Add New Category\" rules={[{ required: true, message: 'Missing Category' }]}>\r\n        <Input  allowClear placeholder=\"Type New Category\"/>\r\n      </Form.Item>\r\n      <Form.List name=\"filters\" >\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n            {fields.map((field,index) => (\r\n              <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                <Form.Item\r\n                label = {\"New Filter\"}\r\n                  {...field}\r\n                  name={[field.name, 'filter']}\r\n                  fieldKey={[field.fieldKey, 'filter']}\r\n                  rules={[{ required: true, message: 'Add filter' }]}\r\n                >\r\n                  <Input allowClear placeholder=\"Add filter here\" />\r\n                </Form.Item>\r\n                <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n              </Space>\r\n            ))}\r\n            <Form.Item>\r\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                Add Filters\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n      <Form.Item>\r\n        <Col offset={20}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Add\r\n        </Button>\r\n        </Col>\r\n      </Form.Item>\r\n      </Col>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddCategory);","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Stocks\\ManageStocks.js",["211","212"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Stocks\\StockTable.js",["213","214","215","216","217","218","219","220"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\AddNewProduct.js",["221","222","223","224","225","226","227","228","229"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Login\\Login.js",["230"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox, Col, Card, Row } from 'antd';\r\nimport { withRouter } from 'react-router';\r\n// import './index.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n  }\r\n\r\n onFinish(e) {\r\n   console.log(\"logged in\");\r\n } \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"LoginForm\" style={{paddingTop:'10%'}}>\r\n        <Row  align=\"middle\">\r\n        <Col span={12} offset={6}>\r\n          <Card>\r\n           <Form\r\n      // {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={this.onFinish}\r\n      // onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n    </Col>\r\n    </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login)","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Routes.js",["231","232"],"import React, { useEffect } from 'react';\r\nimport { Switch, Route, Redirect, BrowserRouter, useHistory } from 'react-router-dom';\r\nimport App from './App';\r\nimport DashBoard from './Components/DashBoard/dashboard';\r\nimport Categories from './Components/Filters/Categories';\r\nimport SiteLayout from './Components/Layout/Layout';\r\nimport Login from './Components/Login/Login';\r\nimport ViewOrders from './Components/Orders/ViewOrders';\r\nimport AddNewProduct from './Components/Products/AddNewProduct';\r\nimport ManageProducts from './Components/Products/ManageProducts';\r\nimport ManageStocks from './Components/Stocks/ManageStocks';\r\nimport AddUser from './Components/Users/AddUser';\r\nimport ManageUser from './Components/Users/ManageUsers';\r\n\r\n\r\n// function TryPoke() {\r\n//     // Do a POKE and update the ticket\r\n//     PokeSession().then(session => {\r\n//         localStorage.setItem(\"token\", session.token);\r\n//         localStorage.setItem(\"loggedInData\", session.validTo);\r\n//     }).catch(err => {\r\n//         localStorage.removeItem('token');\r\n//         localStorage.removeItem('loggedInData');\r\n//     });\r\n// }\r\n\r\n// function CheckLogOnStatus() {\r\n//     let token = localStorage.getItem('token');\r\n//     let validTime = localStorage.getItem('loggedInData');\r\n\r\n//     if (token && validTime) {\r\n//         TryPoke();\r\n//         return true;\r\n//     } else {\r\n//         return false;\r\n//     }\r\n// }\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    // const history = useHistory();\r\n\r\n    // useEffect(() => {\r\n    //     const timer = setTimeout(() => {\r\n    //         history.push('/login', { directLogin: false });\r\n    //     }, (1000 * 60 * 14));\r\n    //     return () => clearTimeout(timer);\r\n    // }, []);\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            (true)\r\n                ? (<SiteLayout><Component {...props} /></SiteLayout>)\r\n                : (<Redirect to={{\r\n                    pathname: '/login',\r\n                    state: { from: props.location }\r\n                }} />)\r\n        )} />);\r\n}\r\n\r\nconst Routes = () => {\r\n\r\n    // console.log('Application running in ' + process.env.NODE_ENV + ' mode');\r\n    let basePath = \"/sigen\";\r\n\r\n    // if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    //     basePath = \"/\"\r\n    // } else {\r\n    //     basePath = \"/DIPS-ANC/ANCDMClient\"\r\n    // }\r\n\r\n    return (\r\n        <BrowserRouter basename={basePath} >\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <PrivateRoute path='/dashboard' component={DashBoard}/>\r\n                <PrivateRoute path='/categories' component={Categories}/>\r\n                <PrivateRoute path='/addUser' component={AddUser}/>\r\n                <PrivateRoute path= '/manageUser' component={ManageUser}/>\r\n                <PrivateRoute path= '/stocks' component={ManageStocks}/>\r\n                <PrivateRoute path= '/addProduct' component={AddNewProduct}/>\r\n                <PrivateRoute path= '/manageProducts' component={ManageProducts}/>\r\n                <PrivateRoute path= '/viewOrders' component={ViewOrders}/>\r\n                <PrivateRoute exact path=\"/\" component={DashBoard} />\r\n                <Route exact path=\"/\" component={App} />\r\n      \r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\DashBoard\\dashboard.js",["233","234","235","236","237","238","239","240","241"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Select, Form, Card, Space, Row, Divider, List} from 'antd';\r\nimport {MinusCircleOutlined} from '@ant-design/icons';\r\nimport {newOrders} from '../../conastant';\r\nimport {withRouter} from 'react-router';\r\nimport NewOrders from '../Orders/NewOrders';\r\n\r\nimport {getLowStockList,getOutOfStockList} from '../../Services/StockService'\r\n\r\nconst data = ['product1', 'product2', 'product3', 'product4', 'product5']\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lowStockList:\"\",\r\n            outOfStockList:\"\"\r\n        };\r\n    }\r\n\r\n    getLowStockProducts = async() => {\r\n        var lowStock = await getLowStockList()\r\n        this.setState({\r\n            lowStockList:lowStock\r\n        })\r\n    }\r\n\r\n    getOutOfStockProducts = async() => {\r\n        var outStock = await getLowStockList()\r\n        this.setState({\r\n            outOfStockList:outStock\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n            this.getLowStockProducts();\r\n            this.getOutOfStockProducts();\r\n\t}\r\n\r\n\trender() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"Dashboard\"/>\r\n                    <Card title='New Orders'>\r\n                        <NewOrders orderList={newOrders} viewPage={'dashboard'}/>\r\n                    </Card>\r\n                    <Divider/>\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <Card title='Out of stock' extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.outOfStockList}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.productName}\r\n                                              />\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Card title='Low on stock' extra={<a href=\"#\">More</a>}>\r\n                                <List itemLayout=\"horizontal\"\r\n                                      dataSource={this.state.lowStockList}\r\n                                      renderItem={item => (\r\n                                          <List.Item>\r\n                                              <List.Item.Meta\r\n                                                  title={item.productName}\r\n                                              />\r\n                                              <div>{item.availableStocks}</div>\r\n                                          </List.Item>\r\n                                      )}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DashBoard);\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\FilterModal.js",[],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\ManageProducts.js",["242","243","244","245"],"import {Button, Col, PageHeader, Select, Form, Card} from 'antd';\r\nimport React from 'react';\r\nimport {withRouter} from 'react-router';\r\nimport {Categories, ProductTypes} from '../../conastant';\r\nimport ManageProductTable from './ProductTable';\r\n\r\nimport {getProductsByType} from '../../Services/ProductService'\r\n\r\nclass ManageStock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedRowKeys: [], // Check here to configure the default column\r\n            loading: false,\r\n            productList:[]\r\n        };\r\n    }\r\n\r\n    onSelectProductType = async(type) => {\r\n        var productList = await getProductsByType(type);\r\n        var filterList = [];\r\n        this.setState({\r\n            productList:productList\r\n        })\r\n        for(var i=0;i<productList.length;i++){\r\n            productList[i].filters.map((item)=>{\r\n                item.selectedFilters.map((c)=>{\r\n                    filterList.push(c)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n                        title=\"View and Manage Products\"\r\n                        // subTitle=\"This is a subtitle\"\r\n                    />\r\n                    <div>\r\n                        <Col offset={1} span={12}>\r\n                            <Form.Item label=\"Select Product Type\">\r\n                                <Select allowClear placeholder={\"Select a type\"} onSelect={this.onSelectProductType}>\r\n                                    {/*<Select.Option value={\"All\"}>All</Select.Option>*/}\r\n                                    {ProductTypes.map(product => {\r\n                                        return (\r\n                                            <Select.Option value={product}>{product}</Select.Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </div>\r\n                    <div>\r\n                        <Card type=\"inner\" title=\"Products\">\r\n                            <ManageProductTable productList={this.state.productList}/>\r\n                        </Card></div>\r\n                    <div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ManageStock)\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Products\\ProductTable.js",["246","247","248","249","250","251","252","253","254","255"],"import React from 'react';\r\nimport {Table, Input, Button, Space, InputNumber, Form, notification, Modal, Tag, Col, Badge, List} from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nimport {Stocks} from '../../conastant';\r\nimport {withRouter} from 'react-router';\r\n\r\n\r\nclass ManageProductTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchText: '',\r\n            searchedColumn: '',\r\n            isSelectedRows: false,\r\n            columns: [\r\n                {\r\n                    title: 'Product No',\r\n                    dataIndex: 'productId',\r\n                    key:'productId',\r\n                    editable: false,\r\n                },\r\n                {\r\n                    title: 'Product Name',\r\n                    dataIndex: 'productName',\r\n                    key: 'productName',\r\n                    editable: false,\r\n                    ...this.getColumnSearchProps('productName'),\r\n                },\r\n                {\r\n                    title: 'Product Type',\r\n                    dataIndex: 'productType',\r\n                    key: 'productType',\r\n                    editable: false,\r\n                },\r\n                {\r\n                    title: 'Filters',\r\n                    dataIndex: 'filters',\r\n                    key: 'filters',\r\n                    editable: false,\r\n                    render: filters=>(\r\n                        <>\r\n                            {\r\n                                filters.map(item=>{\r\n                                return (\r\n                                    <List\r\n                                        grid={{ gutter: 16, column: 3}}\r\n                                        dataSource={item.selectedFilters}\r\n                                        renderItem={item => (\r\n                                            <List.Item>\r\n                                                <Tag color={'geekblue'}>{item}</Tag>\r\n                                            </List.Item>\r\n                                        )}\r\n                                    />\r\n                                );\r\n                        })}\r\n                        </>\r\n                    )\r\n                },\r\n                {\r\n                    title: 'Description',\r\n                    dataIndex: 'description',\r\n                    key: 'description',\r\n                    editable: false,\r\n                },\r\n                {\r\n                    title: 'Edit/More',\r\n                    dataIndex: 'operation',\r\n                    key:'action',\r\n                    // colSpan: 0,\r\n                    // width: '75px',\r\n                    render: (_, dataIndex) => (<a onClick={() => this.editProduct(dataIndex)}>Edit</a>)\r\n                },\r\n            ]\r\n        };\r\n    }\r\n\r\n    editProduct = (product) => {\r\n        var record = '';\r\n        this.props.history.push({\r\n            pathname: \"/AddProduct\",\r\n            state: product\r\n        });\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{width: 188, marginBottom: 8, display: 'block'}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}}/>,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({searchText: ''});\r\n    };\r\n\r\n    onSelectChange = (selectedRows) => {\r\n        this.setState({\r\n            isSelectedRows: selectedRows.length > 0\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const rowSelection = {\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                this.onSelectChange(selectedRows);\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"view-int-box\">\r\n                <Table\r\n                    columns={this.state.columns} bordered\r\n                    dataSource={this.props.productList}\r\n                    pagination={{\r\n                        pageSize: 8\r\n                    }}\r\n                    // rowSelection={{...rowSelection}}\r\n                />\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default withRouter(ManageProductTable)\r\n\r\n\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Orders\\NewOrders.js",["256","257"],"import React from 'react';\r\nimport {List, Skeleton} from 'antd';\r\nimport Moment from 'moment';\r\n\r\nclass NewOrders extends React.Component {\r\n    state = {\r\n        initLoading: true,\r\n        loading: false,\r\n        data: [],\r\n        list: [],\r\n    };\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <List\r\n                className=\"demo-loadmore-list\"\r\n                itemLayout=\"horizontal\"\r\n                dataSource={this.props.orderList}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        actions={this.props.viewPage === 'vieworder' ? [<a key=\"list-loadmore-edit\"\r\n                                                                           onClick={() => this.props.showModal(item)}>View</a>,\r\n                            <a key=\"list-loadmore-more\" onClick={() => this.props.reviewOrder(item)}>Review</a>] : [<a\r\n                            href=\"/sigen/viewOrders\">View</a>]}\r\n                    >\r\n                        <Skeleton avatar title={false} loading={item.loading} active>\r\n                            <List.Item.Meta\r\n                                title={item.orderId}\r\n                                description={\"Ordered By: \"+item.customerName}\r\n                            />\r\n                            <div>{Moment(item.dateOfOrder).format('MMMM Do YYYY, h:mm a')}</div>\r\n                        </Skeleton>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewOrders","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Components\\Orders\\ViewOrders.js",["258","259","260","261","262","263","264","265","266"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Col,\r\n    PageHeader,\r\n    Select,\r\n    Form,\r\n    Card,\r\n    Space,\r\n    Row,\r\n    Divider,\r\n    List,\r\n    Collapse,\r\n    Empty,\r\n    Tabs,\r\n    Modal,\r\n    Skeleton,\r\n    notification,\r\n    Popconfirm,\r\n    Spin\r\n} from 'antd';\r\nimport {MinusCircleOutlined} from '@ant-design/icons';\r\nimport {newOrders, reviewedOrders, completedOrders, customers} from '../../conastant';\r\nimport {withRouter} from 'react-router';\r\nimport NewOrders from '../Orders/NewOrders';\r\n\r\nimport {\r\n    getNewOrderList,\r\n    setOrderAsReviewed,\r\n    getReviewedOrderList,\r\n    cancelOrder,\r\n    getCompletedOrders,\r\n    completeOrder\r\n} from '../../Services/OrderService';\r\n\r\nconst {Panel} = Collapse;\r\nconst {TabPane} = Tabs;\r\n\r\nconst data = ['product1', 'product2', 'product3', 'product4', 'product5']\r\n\r\nconst layout = {\r\n    labelCol: {span: 8},\r\n    wrapperCol: {span: 16},\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 2, span: 16},\r\n};\r\n\r\nclass ViewOrders extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            completedOrders: \"\",\r\n            newOrders: \"\",\r\n            reviewedOrders: \"\",\r\n            isOrderModalVisible: false,\r\n            isCustomerModalVisible: false,\r\n            selectedOrder: \"\",\r\n            selectedCustomer: \"\",\r\n            popConfirmVisible: false,\r\n            loading: true\r\n\r\n        };\r\n    }\r\n\r\n\r\n    getNewOrders = async () => {\r\n\r\n        try {\r\n            var orderList = await getNewOrderList();\r\n            if (orderList) {\r\n                this.setState({\r\n                    newOrders: orderList,\r\n                    loading: false\r\n                })\r\n            }\r\n        } catch (error) {\r\n            notification.error({message: 'Error', description: (error.cause ? error : \"Error fetching data!\")})\r\n        }\r\n    }\r\n\r\n    getReviewedOrderList = async () => {\r\n        try {\r\n            var orderList = await getReviewedOrderList();\r\n            if (orderList) {\r\n                this.setState({\r\n                    reviewedOrders: orderList\r\n                })\r\n            }\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    getCompletedOrderList = async () => {\r\n        try {\r\n            var orderList = await getCompletedOrders();\r\n            if (orderList) {\r\n                this.setState({\r\n                    completedOrders: orderList\r\n                })\r\n            }\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    reviewOrder = async (item) => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        try {\r\n            var success = await setOrderAsReviewed(item);\r\n            if (success) {\r\n                notification.success({\r\n                    message: 'Success',\r\n                    description: 'Order set as reviewd'\r\n                });\r\n\r\n                this.setState({\r\n                    isOrderModalVisible: false,\r\n                    selectedOrder: \"\"\r\n                })\r\n\r\n                this.getNewOrders();\r\n                this.getReviewedOrderList();\r\n\r\n            } else {\r\n                notification.error({\r\n                    message: 'Error',\r\n                    description: 'Action failed. Try again'\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        } catch (error) {\r\n            notification.error({\r\n                message: 'Error',\r\n                description: (error.cause ? error.cause : \"'Action failed. Try again'\")\r\n            })\r\n\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    hancdleOrderComplete = async (item) => {\r\n        console.log(item)\r\n        try {\r\n            var success = await completeOrder(item);\r\n            if (success) {\r\n                notification.success({\r\n                    message: 'Success',\r\n                    description: 'Order Completed!'\r\n                });\r\n                this.getReviewedOrderList();\r\n                this.getCompletedOrderList();\r\n            } else {\r\n                notification.error({\r\n                    message: 'Error',\r\n                    description: 'Action failed. Try again'\r\n                })\r\n            }\r\n        } catch (error) {\r\n            notification.error({\r\n                message: 'Error',\r\n                description: (error.cause ? error.cause : \"'Action failed. Try again'\")\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    ///// order modal functions\r\n\r\n    showOrderModal = (item) => {\r\n\r\n        if (item) {\r\n            this.setState({\r\n                isOrderModalVisible: true,\r\n                selectedOrder: item\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isOrderModalVisible: false,\r\n                selectedOrder: \"\"\r\n            })\r\n        }\r\n    };\r\n\r\n    handleOrderCancel = async (item, type) => {\r\n\r\n        try {\r\n            var success = await cancelOrder(item);\r\n            if (success) {\r\n\r\n                notification.success({\r\n                    message: 'Success',\r\n                    description: 'Order Canceled!'\r\n                });\r\n\r\n                this.setState({\r\n                    isOrderModalVisible: false,\r\n                    selectedOrder: \"\"\r\n                })\r\n\r\n\r\n                if (type === \"modal\") {\r\n                    this.getNewOrders();\r\n                }\r\n                if (type === \"list\") {\r\n                    this.getReviewedOrderList();\r\n                }\r\n                this.getCompletedOrderList();\r\n\r\n            } else {\r\n                notification.error({\r\n                    message: 'Error',\r\n                    description: 'Action failed. Try again'\r\n                })\r\n            }\r\n        } catch (error) {\r\n            notification.error({\r\n                message: 'Error',\r\n                description: (error.cause ? error.cause : \"'Action failed. Try again'\")\r\n            })\r\n            this.setState({\r\n                popConfirmVisible: false,\r\n                isOrderModalVisible: false,\r\n                selectedOrder: \"\",\r\n            })\r\n        }\r\n    };\r\n\r\n    showPopconfirm = (visible) => {\r\n        this.setState({\r\n            popConfirmVisible: visible\r\n        })\r\n    }\r\n\r\n\r\n    //// customer modal functions\r\n\r\n    showCustomerModal = (cust) => {\r\n        var cust = this.getCustomerById(cust.customerId)\r\n        this.setState({\r\n            isCustomerModalVisible: true,\r\n            selectedCustomer: cust\r\n        })\r\n    };\r\n\r\n    handleCustomerOk = () => {\r\n        this.setState({\r\n            isCustomerModalVisible: false,\r\n            selectedCustomer: \"\"\r\n        })\r\n    };\r\n\r\n    getCustomerById = (cid) => {\r\n        for (var i = 0; i < customers.length; i++) {\r\n            if (customers[i].customerId === cid)\r\n                console.log(customers[i])\r\n                return customers[i]\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    ////////\r\n\r\n    async componentDidMount() {\r\n        await this.getNewOrders();\r\n        this.getReviewedOrderList();\r\n        this.getCompletedOrderList();\r\n        this.setState({\r\n            loading: false\r\n        })\r\n        console.log(this.state.newOrders);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"View Orders\"/>\r\n                    <Card title='New Orders'>\r\n                        <Spin spinning={this.state.loading}>\r\n                            <NewOrders orderList={this.state.newOrders} showModal={this.showOrderModal}\r\n                                       reviewOrder={this.reviewOrder} viewPage={'vieworder'}/>\r\n                        </Spin>\r\n                    </Card>\r\n                    <Divider/>\r\n                    <Card title='Previous Orders'>\r\n                        <Tabs defaultActiveKey=\"1\">\r\n                            <TabPane tab=\"Reviewed\" key=\"1\">\r\n                                {\r\n                                    ((this.state.reviewedOrders.length > 0) ?\r\n                                        <List\r\n                                            itemLayout=\"vertical\"\r\n                                            size='small'\r\n                                            pagination={{\r\n                                                pageSize: 5\r\n                                            }}\r\n                                            dataSource={this.state.reviewedOrders}\r\n                                            renderItem={item => (\r\n                                                <Collapse ghost>\r\n                                                    <Panel header={\r\n                                                        <List.Item\r\n                                                            //  actions={[<Button size='small'>Complete Order</Button>,<Button size='small' style={{color:'red'}}>Cancel Order</Button>]}\r\n                                                        >\r\n                                                            <List.Item.Meta\r\n                                                                description={'Order Number: ' + item.orderId + ' placed on: ' + item.dateOfOrder}\r\n                                                            />\r\n                                                        </List.Item>}>\r\n                                                        <Row>\r\n                                                            <Col span={12}>\r\n                                                                <p><b>Order ID: </b>{item.orderId} </p>\r\n                                                                <p><b>Customer Name:</b> {item.customerName}</p>\r\n                                                                <p><b>Ordered Date:</b> {item.dateOfOrder}</p>\r\n                                                                <p><b>Reviewed By:</b> {item.reviewedBy}</p>\r\n                                                                <p><b>Reviewed Date:</b> {item.reviewedDate}</p>\r\n                                                            </Col>\r\n                                                            <Col span={12}>\r\n                                                                <p><b>Ordered Items:</b> {<List\r\n                                                                    className=\"demo-loadmore-list\"\r\n                                                                    itemLayout=\"horizontal\"\r\n                                                                    dataSource={item.orderItems}\r\n                                                                    renderItem={product => (\r\n                                                                        <List.Item>\r\n                                                                            <div>{product}</div>\r\n                                                                        </List.Item>\r\n                                                                    )}/>}</p>\r\n                                                                <Row> <Col offset={1}><Button\r\n                                                                    onClick={() => this.showCustomerModal(item)}\r\n                                                                    type='primary' size='small'>Customer\r\n                                                                    Details</Button></Col>\r\n                                                                    <Col offset={5}><Button\r\n                                                                        onClick={() => this.handleOrderCancel(item, \"list\")}\r\n                                                                        size='small' style={{color: 'red'}}>Cancel\r\n                                                                        Order</Button></Col>\r\n                                                                    <Col offset={1}><Button size='small'\r\n                                                                                            onClick={() => this.hancdleOrderComplete(item)}>Complete\r\n                                                                        Order</Button></Col> </Row>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Panel>\r\n                                                </Collapse>\r\n                                            )}\r\n                                        /> :\r\n                                        <Empty/>)\r\n                                }\r\n                            </TabPane>\r\n                            <TabPane tab=\"Completed/Canceled\" key=\"2\">\r\n                                {\r\n                                    ((this.state.completedOrders.length > 0) ?\r\n                                        <List\r\n                                            itemLayout=\"vertical\"\r\n                                            size='small'\r\n                                            pagination={{\r\n                                                pageSize: 10\r\n                                            }}\r\n                                            dataSource={this.state.completedOrders}\r\n                                            renderItem={item => (\r\n                                                <Collapse ghost>\r\n                                                    <Panel header={\r\n                                                        <List.Item>\r\n\r\n                                                            <List.Item.Meta\r\n                                                                description={'Order Number: '}\r\n                                                            />\r\n                                                        </List.Item>}>\r\n                                                        <Row>\r\n                                                            <Col span={12}>\r\n                                                                <p>Order ID: {this.state.selectedOrder.orderId} </p>\r\n                                                                <p>Customer\r\n                                                                    Name: {this.state.selectedOrder.customerName}</p>\r\n                                                                <p>Ordered\r\n                                                                    Date: {this.state.selectedOrder.dateOfOrder}</p>\r\n                                                            </Col>\r\n                                                            <Col span={12}>\r\n                                                                {/* <p>Date/time: {Moment(item[1][0].startedTime).format('MMMM Do YYYY, HH:mm:ss')}</p> */}\r\n                                                                <p>Ordered\r\n                                                                    Items:{this.state.selectedOrder.orderItems}</p>\r\n                                                                {/* <p>Status: {item[1].length > 1 ? this.setStatus(item[1]) : item[1][0].statusText}</p> */}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Panel>\r\n                                                </Collapse>\r\n                                            )}\r\n                                        /> :\r\n                                        <Empty/>)\r\n                                }\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </Card>\r\n                </Card>\r\n\r\n\r\n                {/* Order Details Modal */}\r\n\r\n                <Modal title=\"Order Details\"\r\n                       visible={this.state.isOrderModalVisible}\r\n                       onOk={() => this.reviewOrder(this.state.selectedOrder)}\r\n                       onCancel={() => this.showOrderModal(null)}\r\n                       footer={[\r\n                           <Button key=\"back\" onClick={() => this.showOrderModal(null)}>\r\n                               Back\r\n                           </Button>,\r\n                           <Popconfirm\r\n                               title=\"Are you sure to cancel this order?\"\r\n                               // visible={this.state.popConfirmVisible}\r\n                               onConfirm={() => this.handleOrderCancel(this.state.selectedOrder, \"modal\")}\r\n                               onCancel={() => this.showPopconfirm(false)}\r\n                               okText=\"Yes\"\r\n                               cancelText=\"No\">\r\n                               <Button key=\"cancel\" type=\"primary\" danger onClick={() => this.showPopconfirm(true)}>\r\n                                   Cancel Order\r\n                               </Button>\r\n                           </Popconfirm>,\r\n                           <Button key=\"submit\" type=\"primary\"\r\n                                   onClick={() => this.reviewOrder(this.state.selectedOrder)}>\r\n                               Review Order\r\n                           </Button>,\r\n                       ]}>\r\n                    <Form {...layout}>\r\n\r\n                        {/* <Col span={12}> */}\r\n                        <Form.Item {...tailLayout} label='Order ID:'> {this.state.selectedOrder.orderId} </Form.Item>\r\n                        <Form.Item {...tailLayout}\r\n                                   label='Customer Name:'> {this.state.selectedOrder.customerName}</Form.Item>\r\n                        <Form.Item {...tailLayout}\r\n                                   label='Ordered Date:'> {this.state.selectedOrder.dateOfOrder}</Form.Item>\r\n                        {/* </Col> */}\r\n                        {/* <Col span={12}> */}\r\n                        <Form.Item {...tailLayout} label='Ordered Items:'>\r\n                            <List\r\n                                className=\"demo-loadmore-list\"\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={this.state.selectedOrder.orderItems}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <div>{item}</div>\r\n                                    </List.Item>\r\n                                )}/>\r\n                            {/* </Col> */}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                {/* Customer Details Modal */}\r\n\r\n                <Modal title=\"Customer Details\"\r\n                       visible={this.state.isCustomerModalVisible}\r\n                       onOk={this.handleCustomerOk}\r\n                       onCancel={this.handleCustomerOk}\r\n                >\r\n                    <Form {...layout}>\r\n\r\n                        {/* <Col span={12}> */}\r\n                        <Form.Item {...tailLayout}\r\n                                   label='Customer ID:'> {this.state.selectedCustomer.customerId} </Form.Item>\r\n                        <Form.Item {...tailLayout}\r\n                                   label='Customer Name:'> {this.state.selectedCustomer.customerName}</Form.Item>\r\n                        <Form.Item {...tailLayout} label='Email:'> {this.state.selectedCustomer.email}</Form.Item>\r\n                        <Form.Item {...tailLayout} label='Mobile:'> {this.state.selectedCustomer.mobile}</Form.Item>\r\n                        <Form.Item {...tailLayout} label='Address:'> {this.state.selectedCustomer.address}</Form.Item>\r\n                        {/* </Col> */}\r\n                        {/* <Col span={12}> */}\r\n                    </Form>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ViewOrders);\r\n\r\n\r\n","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\OrderService.js",["267","268","269","270","271","272"],"import {newOrders,reviewedOrders,completedOrders} from '../conastant'\r\n\r\n\r\nexport async function getNewOrderList(){\r\n\r\n\tconst endpoint = ''\r\n\t// let api = await API();\r\n\t// return api.get(endpoint);\r\n\treturn newOrders;\r\n}\r\n\r\nexport async function setOrderAsReviewed(order){\r\n\t\r\n\tconst endpoint = ''\r\n\t// \tlet params ={\r\n\t// \torder : order,\r\n\t// \tuserId : getuserId\r\n\t// }\r\n\t// let api = await API();\r\n\t// return api.get(endpoint,params);\r\n\treturn true;\r\n}\r\n\r\nexport async function getReviewedOrderList(){\r\n\r\n\tconst endpoint = ''\r\n\t// let api = await API();\r\n\t// return api.get(endpoint);\r\n\treturn reviewedOrders;\r\n}\r\n\r\nexport async function cancelOrder(order){\r\n\r\n\tconst endpoint = '/'\r\n\t// \tlet params ={\r\n\t// \torder : order.id,\r\n\t// \tuserId : getUserId()\r\n\t// }\r\n\t// let api = await API();\r\n\t// return api.get(endpoint,params);\r\n\treturn true;\r\n}\r\n\r\nexport async function getCompletedOrders(){\r\n\r\n\tconst endpoint = ''\r\n\t// let api = await API();\r\n\t// return api.get(endpoint);\r\n\treturn completedOrders;\r\n}\r\n\r\nexport async function completeOrder(order){\r\n\r\n\tconst endpoint = ''\r\n\t// let params ={\r\n\t// \torder : order,\r\n\t// \tuserId : getuserId\r\n\t// }\r\n\t// let api = await API();\r\n\t// return api.get(endpoint,params);\r\n\treturn true;\t\r\n}","D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\StockService.js",["273","274"],"D:\\Sigen.lk\\Admin\\sigen-admin\\src\\Services\\ProductService.js",["275"],"import {productList,Categories} from \"../conastant\";\r\n\r\nexport async function getProductsByType(type){\r\n\r\n    let list = filterProductsByType(type);\r\n    // const endpoint = ''\r\n    // let api = await API();\r\n    // return api.get(endpoint);\r\n    return list;\r\n}\r\n\r\n\r\nexport async function  getProductImageById(id){\r\n    // const endpoint = ''\r\n    // let api = await API();\r\n    // return api.get(endpoint);\r\n    return true;\r\n}\r\n\r\nexport  async function  getCategoriesByProductType(type){\r\n\r\n    let list = [];\r\n    for(let i=0;i<Categories.length;i++){\r\n        if(Categories[i].productType==type){\r\n            list = Categories[i].categories;\r\n        }\r\n    }\r\n\r\n    // const endpoint = ''\r\n    // let api = await API();\r\n    // return api.get(endpoint);\r\n    return list;\r\n}\r\n\r\nexport async function submitProductDetials(product){\r\n    // const endpoint = ''\r\n    // let api = await API();\r\n    // return api.get(endpoint,product);\r\n    return true;\r\n}\r\n\r\n\r\nfunction filterProductsByType(type) {\r\n    var selectedList = [];\r\n    for(var i=0;i<productList.length;i++){\r\n        if(productList[i].productType===type){\r\n            selectedList.push(productList[i]);\r\n        }\r\n    }\r\n    return selectedList;\r\n}","D:\\Simply Web\\src\\index.js",["276","277"],["278","279"],"D:\\Simply Web\\src\\App.js",[],"D:\\Simply Web\\src\\Components\\Layout\\Layout.js",["280","281"],"D:\\Simply Web\\src\\Components\\Login\\Login.js",["282","283"],"import React from 'react';\r\nimport {Form, Input, Button, Checkbox, Col, Card, Row} from 'antd';\r\nimport {withRouter} from 'react-router';\r\nimport {login} from \"../../Services/UserLoginService\";\r\n// import './index.css';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: null,\r\n        };\r\n    }\r\n\r\n    onFinish = async(e) => {\r\n        var response = await login(e);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LoginForm\" style={{paddingTop: '10%'}}>\r\n                <Row align=\"middle\">\r\n                    <Col span={12} offset={6}>\r\n                        <Card>\r\n                            <Form\r\n                                // {...layout}\r\n                                name=\"basic\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n                                // onFinishFailed={onFinishFailed}\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your username!',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"Password\"\r\n                                    name=\"password\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your password!',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                                    <Checkbox>Remember me</Checkbox>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login)","D:\\Simply Web\\src\\Components\\Users\\AddUser.js",["284","285","286","287","288"],"D:\\Simply Web\\src\\Components\\Users\\ManageUsers.js",["289","290"],"D:\\Simply Web\\src\\Routes.js",["291","292"],"D:\\Simply Web\\src\\Components\\Layout\\SideMenu.js",["293","294","295"],"D:\\Simply Web\\src\\Components\\Layout\\TopNav.js",[],"D:\\Simply Web\\src\\Components\\DashBoard\\dashboard.js",["296","297","298","299","300","301","302","303","304","305"],"D:\\Simply Web\\src\\conastant.js",[],"D:\\Simply Web\\src\\Services\\UserLoginService.js",[],"D:\\Simply Web\\src\\Services\\APICallService.js",[],"D:\\Simply Web\\src\\Components\\Learn\\courseOverview.js",["306","307"],"import React from 'react';\r\nimport {Button, Col, PageHeader, Card, Row, Spin, List, Progress} from 'antd';\r\nimport {\r\n    LockTwoTone,\r\n    UnlockTwoTone,\r\n    CheckCircleTwoTone,\r\n    RightCircleTwoTone,\r\n    ReloadOutlined,\r\n    CloudSyncOutlined\r\n} from '@ant-design/icons'\r\nimport {withRouter} from 'react-router';\r\nimport {getCourses} from \"../../Services/learningService\";\r\n\r\nconst {Meta} = Card;\r\nconst contentStyle = {\r\n    height: '260px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n};\r\n\r\nclass OverviewCourse extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseList: [],\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    getCourseList = async () => {\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        var user = null; //get userId from localStorage\r\n        try {\r\n            var list = await getCourses(user);\r\n            console.log(list);\r\n            this.setState({\r\n                courseList: list\r\n            })\r\n        } catch (e) {\r\n\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    goToCourse =(course) =>{\r\n        console.log(course)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getCourseList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <PageHeader className=\"site-page-header\" title=\"Courses\"/>\r\n                    <div className=\"site-card-wrapper\">\r\n                        <Row style={{marginBottom: '40px'}}>\r\n                            <Col offset={20}>\r\n                                <Button onClick={this.getCourseList}><ReloadOutlined/> Refresh</Button>\r\n                                <Button disabled danger><CloudSyncOutlined/> Reset</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Spin spinning={this.state.loading} tip=\"Loading courses...\">\r\n                            <List\r\n                                grid={{gutter: 16, column: 3}}\r\n                                dataSource={this.state.courseList}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <Card\r\n                                            headStyle={item.status === 'locked' ? {backgroundColor: '#c7c7c7'} : {}}\r\n                                            bodyStyle={item.status === 'locked' ? {backgroundColor: '#ededed'} : {}}\r\n                                            extra={item.status === 'locked' ? <LockTwoTone twoToneColor={'grey'}/> :\r\n                                                item.status === 'unlocked' ? <UnlockTwoTone/> :\r\n                                                    <CheckCircleTwoTone twoToneColor=\"#52c41a\"/>}\r\n                                            hoverable\r\n                                            // cover={<img alt=\"example\" style={{height:'150px'}} src=\"\" />}\r\n                                            title={<span>Level {item.level}: {item.courseName}</span>}\r\n                                        >\r\n                                            <Meta title={item.description} description=\"Your progress\"/>\r\n                                            <Progress percent={(100 / item.steps) * item.completed} size=\"small\"/>\r\n                                            <Col offset={20} style={{paddingTop: '15px'}}>\r\n                                                {item.status === \"locked\" ? '' : <Button onClick={()=>this.goToCourse(item)}><RightCircleTwoTone/></Button>}\r\n                                            </Col>\r\n                                            {item.status === 'locked' ? \"Complete previous to unlock this level!\" : \"\"}\r\n                                        </Card>\r\n                                    </List.Item>\r\n                                )}\r\n\r\n                            />\r\n                        </Spin>\r\n                    </div>\r\n                    ,\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(OverviewCourse);\r\n\r\n\r\n","D:\\Simply Web\\src\\Services\\learningService.js",["308"],"D:\\Simply Web\\src\\Components\\Practice\\practiceOverview.js",["309","310"],{"ruleId":"311","severity":1,"message":"312","line":3,"column":17,"nodeType":"313","messageId":"314","endLine":3,"endColumn":21},{"ruleId":"311","severity":1,"message":"315","line":14,"column":7,"nodeType":"313","messageId":"314","endLine":14,"endColumn":14},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"311","severity":1,"message":"320","line":2,"column":30,"nodeType":"313","messageId":"314","endLine":2,"endColumn":34},{"ruleId":"311","severity":1,"message":"321","line":4,"column":54,"nodeType":"313","messageId":"314","endLine":4,"endColumn":74},{"ruleId":"311","severity":1,"message":"322","line":8,"column":9,"nodeType":"313","messageId":"314","endLine":8,"endColumn":14},{"ruleId":"311","severity":1,"message":"323","line":24,"column":11,"nodeType":"313","messageId":"314","endLine":24,"endColumn":20},{"ruleId":"324","severity":1,"message":"325","line":16,"column":13,"nodeType":"326","messageId":"327","endLine":16,"endColumn":36},{"ruleId":"324","severity":1,"message":"325","line":18,"column":12,"nodeType":"326","messageId":"327","endLine":18,"endColumn":44},{"ruleId":"324","severity":1,"message":"325","line":19,"column":13,"nodeType":"326","messageId":"327","endLine":19,"endColumn":46},{"ruleId":"324","severity":1,"message":"325","line":22,"column":12,"nodeType":"326","messageId":"327","endLine":22,"endColumn":56},{"ruleId":"328","severity":1,"message":"329","line":27,"column":2,"nodeType":"330","messageId":"331","endLine":29,"endColumn":5},{"ruleId":"332","severity":1,"message":"333","line":10,"column":22,"nodeType":"334","endLine":10,"endColumn":25},{"ruleId":"311","severity":1,"message":"335","line":53,"column":11,"nodeType":"313","messageId":"314","endLine":53,"endColumn":18},{"ruleId":"311","severity":1,"message":"336","line":1,"column":10,"nodeType":"313","messageId":"314","endLine":1,"endColumn":16},{"ruleId":"311","severity":1,"message":"337","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":29},{"ruleId":"311","severity":1,"message":"338","line":70,"column":15,"nodeType":"313","messageId":"314","endLine":70,"endColumn":18},{"ruleId":"311","severity":1,"message":"339","line":99,"column":23,"nodeType":"313","messageId":"314","endLine":99,"endColumn":27},{"ruleId":"332","severity":1,"message":"333","line":168,"column":25,"nodeType":"334","endLine":174,"endColumn":26},{"ruleId":"332","severity":1,"message":"333","line":178,"column":25,"nodeType":"334","endLine":178,"endColumn":53},{"ruleId":"332","severity":1,"message":"333","line":182,"column":25,"nodeType":"334","endLine":182,"endColumn":86},{"ruleId":"311","severity":1,"message":"340","line":1,"column":38,"nodeType":"313","messageId":"314","endLine":1,"endColumn":44},{"ruleId":"311","severity":1,"message":"336","line":1,"column":9,"nodeType":"313","messageId":"314","endLine":1,"endColumn":15},{"ruleId":"311","severity":1,"message":"341","line":4,"column":9,"nodeType":"313","messageId":"314","endLine":4,"endColumn":19},{"ruleId":"311","severity":1,"message":"342","line":1,"column":17,"nodeType":"313","messageId":"314","endLine":1,"endColumn":25},{"ruleId":"311","severity":1,"message":"343","line":2,"column":43,"nodeType":"313","messageId":"314","endLine":2,"endColumn":55},{"ruleId":"311","severity":1,"message":"344","line":2,"column":64,"nodeType":"313","messageId":"314","endLine":2,"endColumn":67},{"ruleId":"311","severity":1,"message":"345","line":2,"column":77,"nodeType":"313","messageId":"314","endLine":2,"endColumn":82},{"ruleId":"311","severity":1,"message":"346","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":35},{"ruleId":"311","severity":1,"message":"347","line":8,"column":9,"nodeType":"313","messageId":"314","endLine":8,"endColumn":16},{"ruleId":"332","severity":1,"message":"333","line":70,"column":25,"nodeType":"334","endLine":70,"endColumn":56},{"ruleId":"332","severity":1,"message":"333","line":74,"column":29,"nodeType":"334","endLine":74,"endColumn":109},{"ruleId":"311","severity":1,"message":"348","line":25,"column":8,"nodeType":"313","messageId":"314","endLine":25,"endColumn":18},{"ruleId":"311","severity":1,"message":"349","line":26,"column":9,"nodeType":"313","messageId":"314","endLine":26,"endColumn":28},{"ruleId":"311","severity":1,"message":"350","line":28,"column":8,"nodeType":"313","messageId":"314","endLine":28,"endColumn":14},{"ruleId":"311","severity":1,"message":"351","line":39,"column":7,"nodeType":"313","messageId":"314","endLine":39,"endColumn":19},{"ruleId":"311","severity":1,"message":"352","line":43,"column":7,"nodeType":"313","messageId":"314","endLine":43,"endColumn":17},{"ruleId":"324","severity":1,"message":"325","line":49,"column":15,"nodeType":"326","messageId":"327","endLine":49,"endColumn":38},{"ruleId":"324","severity":1,"message":"325","line":51,"column":16,"nodeType":"326","messageId":"327","endLine":51,"endColumn":48},{"ruleId":"324","severity":1,"message":"325","line":52,"column":17,"nodeType":"326","messageId":"327","endLine":52,"endColumn":50},{"ruleId":"324","severity":1,"message":"325","line":55,"column":16,"nodeType":"326","messageId":"327","endLine":55,"endColumn":60},{"ruleId":"311","severity":1,"message":"353","line":5,"column":7,"nodeType":"313","messageId":"314","endLine":5,"endColumn":13},{"ruleId":"311","severity":1,"message":"354","line":1,"column":17,"nodeType":"313","messageId":"314","endLine":1,"endColumn":26},{"ruleId":"311","severity":1,"message":"355","line":2,"column":50,"nodeType":"313","messageId":"314","endLine":2,"endColumn":60},{"ruleId":"311","severity":1,"message":"336","line":2,"column":9,"nodeType":"313","messageId":"314","endLine":2,"endColumn":15},{"ruleId":"311","severity":1,"message":"340","line":2,"column":34,"nodeType":"313","messageId":"314","endLine":2,"endColumn":40},{"ruleId":"311","severity":1,"message":"356","line":2,"column":42,"nodeType":"313","messageId":"314","endLine":2,"endColumn":46},{"ruleId":"311","severity":1,"message":"345","line":2,"column":54,"nodeType":"313","messageId":"314","endLine":2,"endColumn":59},{"ruleId":"311","severity":1,"message":"337","line":3,"column":9,"nodeType":"313","messageId":"314","endLine":3,"endColumn":28},{"ruleId":"311","severity":1,"message":"357","line":8,"column":25,"nodeType":"313","messageId":"314","endLine":8,"endColumn":42},{"ruleId":"311","severity":1,"message":"358","line":10,"column":7,"nodeType":"313","messageId":"314","endLine":10,"endColumn":11},{"ruleId":"332","severity":1,"message":"359","line":52,"column":63,"nodeType":"334","endLine":52,"endColumn":75},{"ruleId":"332","severity":1,"message":"359","line":66,"column":63,"nodeType":"334","endLine":66,"endColumn":75},{"ruleId":"311","severity":1,"message":"336","line":1,"column":9,"nodeType":"313","messageId":"314","endLine":1,"endColumn":15},{"ruleId":"311","severity":1,"message":"341","line":4,"column":9,"nodeType":"313","messageId":"314","endLine":4,"endColumn":19},{"ruleId":"360","severity":1,"message":"361","line":27,"column":46,"nodeType":"362","messageId":"363","endLine":27,"endColumn":48},{"ruleId":"360","severity":1,"message":"361","line":28,"column":45,"nodeType":"362","messageId":"363","endLine":28,"endColumn":47},{"ruleId":"311","severity":1,"message":"364","line":2,"column":38,"nodeType":"313","messageId":"314","endLine":2,"endColumn":49},{"ruleId":"311","severity":1,"message":"356","line":2,"column":51,"nodeType":"313","messageId":"314","endLine":2,"endColumn":55},{"ruleId":"311","severity":1,"message":"343","line":2,"column":57,"nodeType":"313","messageId":"314","endLine":2,"endColumn":69},{"ruleId":"311","severity":1,"message":"365","line":2,"column":71,"nodeType":"313","messageId":"314","endLine":2,"endColumn":76},{"ruleId":"311","severity":1,"message":"366","line":2,"column":83,"nodeType":"313","messageId":"314","endLine":2,"endColumn":86},{"ruleId":"311","severity":1,"message":"367","line":2,"column":88,"nodeType":"313","messageId":"314","endLine":2,"endColumn":93},{"ruleId":"311","severity":1,"message":"368","line":6,"column":9,"nodeType":"313","messageId":"314","endLine":6,"endColumn":15},{"ruleId":"332","severity":1,"message":"333","line":73,"column":48,"nodeType":"334","endLine":73,"endColumn":95},{"ruleId":"311","severity":1,"message":"369","line":80,"column":13,"nodeType":"313","messageId":"314","endLine":80,"endColumn":19},{"ruleId":"311","severity":1,"message":"370","line":173,"column":15,"nodeType":"313","messageId":"314","endLine":173,"endColumn":27},{"ruleId":"332","severity":1,"message":"333","line":28,"column":73,"nodeType":"334","endLine":29,"endColumn":119},{"ruleId":"332","severity":1,"message":"333","line":30,"column":29,"nodeType":"334","endLine":30,"endColumn":102},{"ruleId":"311","severity":1,"message":"340","line":6,"column":5,"nodeType":"313","messageId":"314","endLine":6,"endColumn":11},{"ruleId":"311","severity":1,"message":"345","line":9,"column":5,"nodeType":"313","messageId":"314","endLine":9,"endColumn":10},{"ruleId":"311","severity":1,"message":"371","line":17,"column":5,"nodeType":"313","messageId":"314","endLine":17,"endColumn":13},{"ruleId":"311","severity":1,"message":"337","line":22,"column":9,"nodeType":"313","messageId":"314","endLine":22,"endColumn":28},{"ruleId":"311","severity":1,"message":"372","line":23,"column":9,"nodeType":"313","messageId":"314","endLine":23,"endColumn":18},{"ruleId":"311","severity":1,"message":"373","line":23,"column":20,"nodeType":"313","messageId":"314","endLine":23,"endColumn":34},{"ruleId":"311","severity":1,"message":"374","line":23,"column":36,"nodeType":"313","messageId":"314","endLine":23,"endColumn":51},{"ruleId":"311","severity":1,"message":"358","line":39,"column":7,"nodeType":"313","messageId":"314","endLine":39,"endColumn":11},{"ruleId":"375","severity":1,"message":"376","line":248,"column":13,"nodeType":"313","messageId":"377","endLine":248,"endColumn":17},{"ruleId":"311","severity":1,"message":"378","line":6,"column":8,"nodeType":"313","messageId":"314","endLine":6,"endColumn":16},{"ruleId":"311","severity":1,"message":"378","line":14,"column":8,"nodeType":"313","messageId":"314","endLine":14,"endColumn":16},{"ruleId":"311","severity":1,"message":"378","line":26,"column":8,"nodeType":"313","messageId":"314","endLine":26,"endColumn":16},{"ruleId":"311","severity":1,"message":"378","line":34,"column":8,"nodeType":"313","messageId":"314","endLine":34,"endColumn":16},{"ruleId":"311","severity":1,"message":"378","line":46,"column":8,"nodeType":"313","messageId":"314","endLine":46,"endColumn":16},{"ruleId":"311","severity":1,"message":"378","line":54,"column":8,"nodeType":"313","messageId":"314","endLine":54,"endColumn":16},{"ruleId":"311","severity":1,"message":"378","line":5,"column":11,"nodeType":"313","messageId":"314","endLine":5,"endColumn":19},{"ruleId":"311","severity":1,"message":"378","line":13,"column":11,"nodeType":"313","messageId":"314","endLine":13,"endColumn":19},{"ruleId":"379","severity":1,"message":"380","line":24,"column":37,"nodeType":"381","messageId":"382","endLine":24,"endColumn":39},{"ruleId":"311","severity":1,"message":"312","line":3,"column":17,"nodeType":"313","messageId":"314","endLine":3,"endColumn":21},{"ruleId":"311","severity":1,"message":"315","line":14,"column":7,"nodeType":"313","messageId":"314","endLine":14,"endColumn":14},{"ruleId":"316","replacedBy":"383"},{"ruleId":"318","replacedBy":"384"},{"ruleId":"311","severity":1,"message":"320","line":2,"column":30,"nodeType":"313","messageId":"314","endLine":2,"endColumn":34},{"ruleId":"311","severity":1,"message":"385","line":41,"column":9,"nodeType":"313","messageId":"314","endLine":41,"endColumn":24},{"ruleId":"311","severity":1,"message":"353","line":7,"column":7,"nodeType":"313","messageId":"314","endLine":7,"endColumn":13},{"ruleId":"311","severity":1,"message":"386","line":31,"column":13,"nodeType":"313","messageId":"314","endLine":31,"endColumn":21},{"ruleId":"324","severity":1,"message":"325","line":16,"column":13,"nodeType":"326","messageId":"327","endLine":16,"endColumn":36},{"ruleId":"324","severity":1,"message":"325","line":18,"column":12,"nodeType":"326","messageId":"327","endLine":18,"endColumn":44},{"ruleId":"324","severity":1,"message":"325","line":19,"column":13,"nodeType":"326","messageId":"327","endLine":19,"endColumn":46},{"ruleId":"324","severity":1,"message":"325","line":22,"column":12,"nodeType":"326","messageId":"327","endLine":22,"endColumn":56},{"ruleId":"328","severity":1,"message":"329","line":27,"column":2,"nodeType":"330","messageId":"331","endLine":29,"endColumn":5},{"ruleId":"332","severity":1,"message":"333","line":10,"column":22,"nodeType":"334","endLine":10,"endColumn":25},{"ruleId":"311","severity":1,"message":"335","line":53,"column":11,"nodeType":"313","messageId":"314","endLine":53,"endColumn":18},{"ruleId":"311","severity":1,"message":"354","line":1,"column":17,"nodeType":"313","messageId":"314","endLine":1,"endColumn":26},{"ruleId":"311","severity":1,"message":"355","line":2,"column":50,"nodeType":"313","messageId":"314","endLine":2,"endColumn":60},{"ruleId":"311","severity":1,"message":"321","line":8,"column":5,"nodeType":"313","messageId":"314","endLine":8,"endColumn":25},{"ruleId":"311","severity":1,"message":"322","line":16,"column":8,"nodeType":"313","messageId":"314","endLine":16,"endColumn":13},{"ruleId":"311","severity":1,"message":"323","line":33,"column":16,"nodeType":"313","messageId":"314","endLine":33,"endColumn":25},{"ruleId":"311","severity":1,"message":"336","line":2,"column":9,"nodeType":"313","messageId":"314","endLine":2,"endColumn":15},{"ruleId":"311","severity":1,"message":"340","line":2,"column":34,"nodeType":"313","messageId":"314","endLine":2,"endColumn":40},{"ruleId":"311","severity":1,"message":"356","line":2,"column":42,"nodeType":"313","messageId":"314","endLine":2,"endColumn":46},{"ruleId":"311","severity":1,"message":"345","line":2,"column":54,"nodeType":"313","messageId":"314","endLine":2,"endColumn":59},{"ruleId":"311","severity":1,"message":"387","line":2,"column":91,"nodeType":"313","messageId":"314","endLine":2,"endColumn":96},{"ruleId":"311","severity":1,"message":"337","line":3,"column":9,"nodeType":"313","messageId":"314","endLine":3,"endColumn":28},{"ruleId":"388","severity":1,"message":"389","line":38,"column":54,"nodeType":"334","endLine":39,"endColumn":114},{"ruleId":"332","severity":1,"message":"359","line":65,"column":76,"nodeType":"334","endLine":65,"endColumn":88},{"ruleId":"332","severity":1,"message":"359","line":79,"column":79,"nodeType":"334","endLine":79,"endColumn":91},{"ruleId":"332","severity":1,"message":"359","line":93,"column":78,"nodeType":"334","endLine":93,"endColumn":90},{"ruleId":"311","severity":1,"message":"390","line":13,"column":9,"nodeType":"313","messageId":"314","endLine":13,"endColumn":16},{"ruleId":"311","severity":1,"message":"391","line":16,"column":7,"nodeType":"313","messageId":"314","endLine":16,"endColumn":19},{"ruleId":"311","severity":1,"message":"392","line":1,"column":9,"nodeType":"313","messageId":"314","endLine":1,"endColumn":12},{"ruleId":"311","severity":1,"message":"393","line":9,"column":5,"nodeType":"313","messageId":"314","endLine":9,"endColumn":22},{"ruleId":"311","severity":1,"message":"391","line":15,"column":7,"nodeType":"313","messageId":"314","endLine":15,"endColumn":19},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'routing' is assigned a value but never used.","no-native-reassign",["394"],"no-negated-in-lhs",["395"],"'Card' is defined but never used.","'NotificationOutlined' is defined but never used.","'Sider' is assigned a value but never used.","'collapsed' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loading' is assigned a value but never used.","'Button' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'row' is assigned a value but never used.","'item' is assigned a value but never used.","'Select' is defined but never used.","'Categories' is defined but never used.","'useState' is defined but never used.","'notification' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'confirm' is assigned a value but never used.","'AddFilters' is defined but never used.","'getProductImageById' is defined but never used.","'Option' is assigned a value but never used.","'layoutDrawer' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'layout' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Form' is defined but never used.","'getOutOfStockList' is defined but never used.","'data' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'InputNumber' is defined but never used.","'Modal' is defined but never used.","'Col' is defined but never used.","'Badge' is defined but never used.","'Stocks' is defined but never used.","'record' is assigned a value but never used.","'rowSelection' is assigned a value but never used.","'Skeleton' is defined but never used.","'newOrders' is defined but never used.","'reviewedOrders' is defined but never used.","'completedOrders' is defined but never used.","no-redeclare","'cust' is already defined.","redeclared","'endpoint' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["394"],["395"],"'breadcrumbItems' is assigned a value but never used.","'response' is assigned a value but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'courses' is defined but never used.","'contentStyle' is assigned a value but never used.","'API' is defined but never used.","'CloudSyncOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]